"use strict";function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}Vue.component("dataset-simple-select-comp",{data:function(){var a=this;return{acInterface:{getDataSetData:"/Rest/Builder/DataSet/DataSetMain/GetDataSetsForZTreeNodeList"},dataSetTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){"DataSet"==i.nodeTypeName&&a.selectedNode(i)}}},treeData:null,selectedTableName:"无"}}},mounted:function(){this.bindDataSetTree()},methods:{bindDataSetTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDataSetData,{},function(e){if(e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"DataSetGroup"==e.data[t].nodeTypeName?e.data[t].icon="/Themes/Png16X16/package.png":e.data[t].icon="/Themes/Png16X16/application_view_columns.png";i.dataSetTree.treeData=e.data,i.dataSetTree.treeObj=$.fn.zTree.init($("#dataSetZTreeUL"),i.dataSetTree.treeSetting,i.dataSetTree.treeData),i.dataSetTree.treeObj.expandAll(!0),fuzzySearchTreeObj(i.dataSetTree.treeObj,i.$refs.txt_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedNode:function(e){this.$emit("on-selected-dataset",e)}},template:'<div class="js-code-fragment-wrap">                    <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入表名或者标题"></i-input>                    <ul id="dataSetZTreeUL" class="ztree"></ul>                </div>'}),Vue.component("js-design-code-fragment",{data:function(){return{jsEditorInstance:null}},mounted:function(){},methods:{setJSEditorInstance:function(e){this.jsEditorInstance=e},getJsEditorInst:function(){return this.jsEditorInstance},insertJs:function(e){var t=this.getJsEditorInst().getDoc(),i=t.getCursor();t.replaceRange(e,i)},formatJS:function(){CodeMirror.commands.selectAll(this.getJsEditorInst());var e={from:this.getJsEditorInst().getCursor(!0),to:this.getJsEditorInst().getCursor(!1)};this.getJsEditorInst().autoFormatRange(e.from,e.to)},alertDesc:function(){},refScript:function(){this.insertJs('<script type="text/javascript" src="${contextPath}/Js/IssuesUtility.js?ts=${timeStamp}"><\/script>')},callServiceMethod:function(){}},template:'<div class="js-code-fragment-wrap">            <div class="js-code-fragment-item" @click="formatJS">格式化</div>            <div class="js-code-fragment-item">说明1</div>            <div class="js-code-fragment-item" @click="refScript">引入脚本</div>            <div class="js-code-fragment-item">获取URL参数</div>            <div class="js-code-fragment-item">调用服务方法</div>            <div class="js-code-fragment-item">加载数据字典</div>        </div>'}),Vue.component("site-template-relation-comp",{props:["relation"],data:function(){return{acInterface:{editView:"/HTML/Builder/Site/Template/TemplateDesign.html"},diagramObj:null}},mounted:function(){$(this.$refs.relationContentOuterWrap).css("height",PageStyleUtility.GetPageHeight()-75),this.init()},methods:{addEmptyTemplateEvent:function(e,t){var i=t.part,a=e.diagram;a.startTransaction("Add State");var l=i.adornedPart,n=l.data,o={text:"new"},d=l.location.copy();d.x+=200,o.loc=go.Point.stringify(d);var r=a.model;r.addNodeData(o);var s={from:r.getKeyForNodeData(n),to:r.getKeyForNodeData(o),text:"transition"};r.addLinkData(s);var c=a.findNodeForData(o);a.select(c),a.commitTransaction("Add State"),a.scrollToRect(c.actualBounds)},beginEditTemplateEvent:function(e,t){var i=BaseUtility.BuildView(this.acInterface.editView,{op:"edit",templateId:t.part.data.id});DialogUtility.OpenNewTabWindow(i)},removeTemplateEvent:function(e,t){this.diagramObj.startTransaction();var i=t.part,a=(e.diagram,i.adornedPart);this.diagramObj.remove(a),this.diagramObj.commitTransaction("deleted node")},getDiagramInstance:function(e){return e(go.Diagram,"divSiteTemplateRelationWrap",{"animationManager.initialAnimationStyle":go.AnimationManager.None,InitialAnimationStarting:function(e){var t=e.subject.defaultAnimation;t.easing=go.Animation.EaseOutExpo,t.duration=900,t.add(e.diagram,"scale",.1,1),t.add(e.diagram,"opacity",0,1)},"toolManager.mouseWheelBehavior":go.ToolManager.WheelZoom,"clickCreatingTool.archetypeNodeData":{text:"new node"},"undoManager.isEnabled":!0,positionComputation:function(e,t){return new go.Point(Math.floor(t.x),Math.floor(t.y))}})},getDiagramNodeTemplate:function(e){var t={parameter1:2,spot1:go.Spot.TopLeft,spot2:go.Spot.BottomRight};return e(go.Node,"Auto",{locationSpot:go.Spot.Top,isShadowed:!0,shadowBlur:1,shadowOffset:new go.Point(0,1),shadowColor:"rgba(0, 0, 0, .14)"},new go.Binding("location","loc",go.Point.parse).makeTwoWay(go.Point.stringify),e(go.Shape,"RoundedRectangle",t,_defineProperty({name:"SHAPE",fill:"#ffffff",strokeWidth:1,stroke:null,portId:"",fromLinkable:!1,fromLinkableSelfNode:!0,fromLinkableDuplicates:!0,toLinkable:!1,toLinkableSelfNode:!0,toLinkableDuplicates:!0,cursor:"pointer"},"stroke","hsl(30, 100%, 50%)")),e(go.Panel,"Vertical",{defaultAlignment:go.Spot.TopLeft},e(go.TextBlock,{font:"bold small-caps 11pt helvetica, bold arial, sans-serif",margin:7,stroke:"rgba(0, 0, 0, .87)",editable:!1},new go.Binding("text").makeTwoWay()),e(go.TextBlock,{font:"small-caps 12px helvetica, arial, sans-serif",margin:7,alignment:go.Spot.Center,stroke:"rgba(0, 0, 0, .87)",editable:!1},new go.Binding("text","id").makeTwoWay())))},getDiagramActiveNodeTemplate:function(e){var t={parameter1:2,spot1:go.Spot.TopLeft,spot2:go.Spot.BottomRight};return e(go.Adornment,"Spot",e(go.Panel,"Auto",e(go.Shape,"RoundedRectangle",t,{fill:null,stroke:"#7986cb",strokeWidth:2}),e(go.Placeholder)),e(go.Panel,"Horizontal",{alignment:go.Spot.TopRight,alignmentFocus:go.Spot.TopLeft},e("Button",{click:this.addEmptyTemplateEvent,toolTip:this.makeDiagramTooltip(e,"Add Exclusive")},e(go.Shape,"PlusLine",{width:12,height:12,stroke:"hsl(30, 100%, 50%)"})),e("Button",{click:this.beginEditTemplateEvent},e(go.Shape,"Gear",{width:12,height:12,fill:"hsl(30, 100%, 50%)",stroke:"hsl(30, 100%, 50%)"})),e("Button",{click:this.removeTemplateEvent},e(go.Shape,"XLine",{width:12,height:12,stroke:"hsl(30, 100%, 50%)"}))),e(go.Panel,"Auto",{alignment:go.Spot.BottomCenter,alignmentFocus:go.Spot.Top},e(go.Shape,"RoundedRectangle",t,{fill:null,stroke:"#2bffb3",strokeWidth:1}),e(go.TextBlock,{font:"small-caps 12px helvetica, arial, sans-serif",margin:7,alignment:go.Spot.BottomCenter,alignmentFocus:go.Spot.Top,stroke:"rgba(0, 0, 0, .87)",editable:!1},new go.Binding("text","desc"))))},getDiagramStartNodeTemplate:function(e){return e(go.Node,"Spot",{desiredSize:new go.Size(75,75)},new go.Binding("location","loc",go.Point.parse).makeTwoWay(go.Point.stringify),e(go.Shape,"Circle",{fill:"#52ce60",stroke:null,portId:"",fromLinkable:!1,fromLinkableSelfNode:!0,fromLinkableDuplicates:!0,toLinkable:!1,toLinkableSelfNode:!0,toLinkableDuplicates:!0,cursor:"pointer"}),e(go.TextBlock,"Start",{font:"bold 16pt helvetica, bold arial, sans-serif",stroke:"whitesmoke"}))},getDiagramEndNodeTemplate:function(e){return e(go.Node,"Spot",{desiredSize:new go.Size(75,75)},new go.Binding("location","loc",go.Point.parse).makeTwoWay(go.Point.stringify),e(go.Shape,"Circle",{fill:"maroon",stroke:null,portId:"",fromLinkable:!1,fromLinkableSelfNode:!0,fromLinkableDuplicates:!0,toLinkable:!1,toLinkableSelfNode:!0,toLinkableDuplicates:!0,cursor:"pointer"}),e(go.Shape,"Circle",{fill:null,desiredSize:new go.Size(65,65),strokeWidth:2,stroke:"whitesmoke"}),e(go.TextBlock,"End",{font:"bold 16pt helvetica, bold arial, sans-serif",stroke:"whitesmoke"}))},getDiagramLinkTemplate:function(e){return e(go.Link,{curve:go.Link.Bezier,adjusting:go.Link.Stretch,reshapable:!0,relinkableFrom:!0,relinkableTo:!0,toShortLength:3},new go.Binding("points").makeTwoWay(),new go.Binding("curviness"),e(go.Shape,{strokeWidth:1.5},new go.Binding("stroke","progress",function(e){return e?"#52ce60":"black"}),new go.Binding("strokeWidth","progress",function(e){return e?2.5:1.5})),e(go.Shape,{toArrow:"standard",stroke:null},new go.Binding("fill","progress",function(e){return e?"#52ce60":"black"})),e(go.Panel,"Auto",e(go.Shape,{fill:e(go.Brush,"Radial",{0:"rgb(245, 245, 245)",.7:"rgb(245, 245, 245)",1:"rgba(245, 245, 245, 0)"}),stroke:null}),e(go.TextBlock,"transition",{textAlign:"center",font:"9pt helvetica, arial, sans-serif",margin:4,editable:!0},new go.Binding("text").makeTwoWay())))},makeDiagramTooltip:function(e,t){return e("ToolTip",e(go.TextBlock,t))},init:function(){window.goSamples&&goSamples();var e=go.GraphObject.make;this.diagramObj=this.getDiagramInstance(e),this.diagramObj.nodeTemplate=this.getDiagramNodeTemplate(e),this.diagramObj.nodeTemplate.selectionAdornmentTemplate=this.getDiagramActiveNodeTemplate(e),this.diagramObj.nodeTemplateMap.add("Start",this.getDiagramStartNodeTemplate(e)),this.diagramObj.nodeTemplateMap.add("End",this.getDiagramEndNodeTemplate(e)),this.diagramObj.linkTemplate=this.getDiagramLinkTemplate(e),this.diagramObj.model=go.Model.fromJson({class:"go.GraphLinksModel",nodeKeyProperty:"id",nodeDataArray:[{id:-3,loc:"185 -158",category:"Start",desc:"那是"},{id:-1,loc:"-73 -150",category:"Start",desc:"那是"},{id:0,loc:"-24 116",text:"最终幻想",text2:"最终幻想2",desc:"那是"},{id:1,loc:"273 94",text:"雪中悍刀行",desc:"那是"},{id:"2000A",loc:"352 270",text:"西藏天路叨叨叨",desc:"那是"},{id:3,loc:"595 -3",text:"大亚湾叨叨叨",desc:"那是"},{id:4,loc:"894 -190",text:"View Cart",desc:"那是"},{id:5,loc:"820 202",text:"Update Cart",desc:"那是"},{id:6,loc:"1052 90",text:"Checkout",desc:"那是"},{id:-2,loc:"1124 263",category:"End",desc:"那是"}],linkDataArray:[{from:-1,to:0,text:"Visit online store"},{from:0,to:1,progress:"true",text:"Browse"},{from:0,to:"2000A",progress:"true",text:"Use search bar"},{from:1,to:"2000A",progress:"true",text:"Use search bar"},{from:"2000A",to:3,progress:"true",text:"Click item"},{from:"2000A",to:"2000A",text:"Another search",curviness:20},{from:1,to:3,progress:"true",text:"Click item"},{from:3,to:0,text:"Not interested",curviness:-100},{from:3,to:4,progress:"true",text:"Add to cart"},{from:4,to:0,text:"More shopping",curviness:-150},{from:4,to:5,text:"Update needed",curviness:-50},{from:5,to:4,text:"Update made"},{from:4,to:6,progress:"true",text:"Proceed"},{from:6,to:5,text:"Update needed"},{from:6,to:-2,progress:"true",text:"Purchase made"}]}),this.diagramObj.addDiagramListener("ObjectSingleClicked",function(e){var t=e.subject.part;console.log(t)}),this.diagramObj.addDiagramListener("SelectionMoved",function(e){var t=e.subject;console.log(t),console.log(JsonUtility.JsonToString(e.diagram.model.nodeDataArray));var i=e.diagram.selection.first();console.log("selectedNode",i),console.log("selectedNodeKey",i.key),console.log("selectedNode",i.location.toString()),console.log("selectedNode",i.location.x),console.log("selectedNode",i.location.y),console.log("locationObject",i.locationObject)})}},template:'<div ref="relationContentOuterWrap" class="site-template-relation-content-outer-wrap">\n                    <div class="site-template-relation-content-wrap" id="divSiteTemplateRelationWrap">\n                        模版关系\n                    </div>\n                </div>'}),Vue.component("sql-general-design-comp",{props:["sqlDesignerHeight","value","showField"],data:function(){return{sqlText:"",selectedItemValue:"说明",selfTableFields:[],parentTableFields:[]}},watch:{sqlText:function(e){this.$emit("input",e)},value:function(e){this.sqlText=e}},mounted:function(){this.sqlCodeMirror=CodeMirror.fromTextArea($("#TextAreaSQLEditor")[0],{mode:"text/x-sql",lineNumbers:!0,lineWrapping:!0,foldGutter:!0,theme:"monokai"}),console.log(this.sqlDesignerHeight),this.sqlCodeMirror.setSize("100%",this.sqlDesignerHeight);var t=this;this.sqlCodeMirror.on("change",function(e){console.log(e.getValue()),t.sqlText=e.getValue()})},methods:{getValue:function(){this.sqlCodeMirror.getValue()},setValue:function(e){this.sqlCodeMirror.setValue(e)},setAboutTableFields:function(e,t){this.selfTableFields=e,this.parentTableFields=t},insertEnvToEditor:function(e){this.insertCodeAtCursor(e)},insertFieldToEditor:function(e,t){var i=null;i="selfTableFields"==e?this.selfTableFields:this.parentTableFields;for(var a=0;a<i.length;a++)i[a].fieldName==t&&this.insertCodeAtCursor(i[a].tableName+"."+i[a].fieldName)},insertCodeAtCursor:function(e){var t=this.sqlCodeMirror.getDoc(),i=t.getCursor();t.replaceRange(e,i)}},template:'<div>                <textarea id="TextAreaSQLEditor"></textarea>                <div style="text-align: right;margin-top: 8px">                    <ButtonGroup size="small">                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织ID}\')">组织Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织名称}\')">组织名称</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户ID}\')">用户Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户名称}\')">用户名称</Button>                        <Button @click="insertEnvToEditor(\'#{DateTime.年年年年-月月-日日}\')">yyyy-MM-dd</Button>                        <Button>说明</Button>                    </ButtonGroup>                </div>                <div style="margin-top: 8px" v-if="showField">                    <div style="float: left;margin: 4px 10px">本表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:175px" @on-change="insertFieldToEditor(\'selfTableFields\',$event)">                            <i-option v-for="item in selfTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                    <div style="float: left;margin: 4px 10px">父表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:177px" @on-change="insertFieldToEditor(\'parentTableFields\',$event)">                            <i-option v-for="item in parentTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                </div>              </div>'}),Vue.component("table-relation-content-comp",{props:["relation"],data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds",saveDiagram:"/Rest/Builder/DataStorage/TableRelation/TableRelation/SaveDiagram",getSingleDiagramData:"/Rest/Builder/DataStorage/TableRelation/TableRelation/GetDetailData",tableView:"/HTML/Builder/DataStorage/DataBase/TableEdit.html"},tableRelationDiagram:null,displayDesc:!0,formatJson:null,recordId:this.relation.relationId}},mounted:function(){$(this.$refs.relationContentOuterWrap).css("height",PageStyleUtility.GetPageHeight()-75),PageStyleUtility.GetPageWidth()<1e3&&(this.displayDesc=!1,$(".table-relation-op-buttons-outer-wrap").css("width","100%")),this.initDiagram(),this.loadRelationDetailData()},methods:{init:function(){window.goSamples&&goSamples();var e=go.GraphObject.make,t=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!1,allowCopy:!1,layout:e(go.ForceDirectedLayout),"undoManager.isEnabled":!0}),i=e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),a=e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),l=e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),n=e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),o=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),d=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","name")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA"},new go.Binding("location","location").makeTwoWay(),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"Rectangle",{fill:o,stroke:"#756875",strokeWidth:3}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","key")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:d},new go.Binding("itemArray","items")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:2.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","text")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")));var r=[{key:"Products",items:[{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"ProductName",iskey:!1,figure:"Cube1",color:i},{name:"SupplierID",iskey:!1,figure:"Decision",color:"purple"},{name:"CategoryID",iskey:!1,figure:"Decision",color:"purple"}]},{key:"Suppliers",items:[{name:"SupplierID",iskey:!0,figure:"Decision",color:n},{name:"CompanyName",iskey:!1,figure:"Cube1",color:i},{name:"ContactName",iskey:!1,figure:"Cube1",color:i},{name:"Address",iskey:!1,figure:"Cube1",color:i}]},{key:"Categories",items:[{name:"CategoryID",iskey:!0,figure:"Decision",color:n},{name:"CategoryName",iskey:!1,figure:"Cube1",color:i},{name:"Description",iskey:!1,figure:"Cube1",color:i},{name:"Picture",iskey:!1,figure:"TriangleUp",color:l}]},{key:"Order Details",items:[{name:"OrderID",iskey:!0,figure:"Decision",color:n},{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"UnitPrice",iskey:!1,figure:"MagneticData",color:a},{name:"Quantity",iskey:!1,figure:"MagneticData",color:a},{name:"Discount",iskey:!1,figure:"MagneticData",color:a}]}];t.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:r,linkDataArray:[{from:"Products",to:"Suppliers",text:"0..N",toText:"1"},{from:"Products",to:"Categories",text:"0..N",toText:"1"},{from:"Order Details",to:"Products",text:"0..N",toText:"1"}]})},showSelectTableDialog:function(){this.$refs.selectSingleTableDialog.beginSelectTable()},showSelectFieldConnectDialog:function(){var t="",i="",a=0;this.tableRelationDiagram.selection.each(function(e){e instanceof go.Node&&(0==a?(t=e.data.tableId,a++):i=e.data.tableId)}),i||(i=t),""!=t&&""!=i?this.$refs.tableRelationConnectTwoTableDialog.beginSelectConnect(t,i):DialogUtility.AlertText("请先选中2个节点")},addTableToDiagram:function(e){var o=e.id,t=[o],d=this;this.tableIsExistInDiagram(o)?DialogUtility.AlertText("该画布中已经存在表:"+e.text):AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables[0],a=[],l=0;l<t.length;l++)t[l].displayText=t[l].fieldName+"["+t[l].fieldCaption+"]",a.push(d.rendererFieldStyle(t[l]));var n={tableId:o,loc:"0 0",fields:a,tableData:i,tableName:i.tableName,tableCaption:i.tableCaption,tableDisplayText:i.tableName+"["+i.tableCaption+"]",key:i.tableId};d.tableRelationDiagram.model.startTransaction("flash"),d.tableRelationDiagram.model.addNodeData(n),d.tableRelationDiagram.model.commitTransaction("flash")}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},deleteSelection:function(){this.tableRelationDiagram.commandHandler.canDeleteSelection()&&this.tableRelationDiagram.commandHandler.deleteSelection()},connectSelectionNode:function(e){this.tableRelationDiagram.model.startTransaction("flash");var t={lineId:StringUtility.Guid(),from:e.from.tableId,to:e.to.tableId,fromText:e.from.text,toText:e.to.text};this.tableRelationDiagram.model.addLinkData(t),this.tableRelationDiagram.model.commitTransaction("flash")},saveModelToServer:function(){if(this.recordId){var e={recordId:this.recordId,relationContent:JsonUtility.JsonToString(this.getDataJson()),relationDiagramJson:this.getDiagramJson()};AjaxUtility.Post(this.acInterface.saveDiagram,e,function(e){DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},initDiagram:function(){var a=this;window.goSamples&&goSamples();var e=go.GraphObject.make;this.tableRelationDiagram=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!0,allowCopy:!1,layout:e(go.ForceDirectedLayout,{isOngoing:!1}),"undoManager.isEnabled":!0});var t=this.tableRelationDiagram,i=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),l=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","displayText")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA",doubleClick:function(e,t){var i=BaseUtility.BuildView(a.acInterface.tableView,{op:"view",recordId:t.data.tableId});DialogUtility.Frame_OpenIframeWindow(window,DialogUtility.DialogId,i,{title:"表设计"},0)}},new go.Binding("location","loc",go.Point.parse),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"RoundedRectangle",{fill:i,stroke:"#756875",strokeWidth:1}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","tableDisplayText")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:l},new go.Binding("itemArray","fields")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:1.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","fromText")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")))},loadRelationDetailData:function(){var i=this;AjaxUtility.Post(this.acInterface.getSingleDiagramData,{recordId:this.recordId,op:"Edit"},function(e){if(e.success){if(e.data.relationContent){var t=JsonUtility.StringToJson(e.data.relationContent);console.log(t),i.setDataJson(t),i.convertToFullJson(t,i.drawObjInDiagram)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},drawObjInDiagram:function(i){var e=go.GraphObject.make;e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),i.lineList;this.tableRelationDiagram.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:i.tableList});var a=this;window.setTimeout(function(){a.tableRelationDiagram.model.startTransaction("flash");for(var e=0;e<i.lineList.length;e++){var t=i.lineList[e];a.tableRelationDiagram.model.addLinkData(t)}a.tableRelationDiagram.model.commitTransaction("flash")},500)},convertToFullJson:function(e,t){for(var o=JsonUtility.CloneSimple(e),i=new Array,a=0;a<e.tableList.length;a++)i.push(e.tableList[a].tableId);var d=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:i},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables,a=0;a<o.tableList.length;a++){var l=d.getSingleTableData(i,o.tableList[a].tableId);o.tableList[a].tableData=l,o.tableList[a].tableName=l.tableName,o.tableList[a].tableCaption=l.tableCaption,o.tableList[a].tableDisplayText=l.displayText;var n=d.getSingleTableFieldsData(t,o.tableList[a].tableId);o.tableList[a].fields=n,o.tableList[a].key=o.tableList[a].tableId}d.drawObjInDiagram(o)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},getSingleTableData:function(e,t){for(var i=0;i<e.length;i++)if(e[i].tableId==t)return e[i].displayText=e[i].tableName+"["+e[i].tableCaption+"]",e[i];return null},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&(e[a].displayText=e[a].fieldName+"["+e[a].fieldCaption+"]",i.push(this.rendererFieldStyle(e[a])));return i},rendererFieldStyle:function(e){return"是"==e.fieldIsPk?(e.color=this.getKeyFieldBrush(),e.figure="Decision"):(e.color=this.getNorFieldBrush(),e.figure="Cube1"),e},getKeyFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"})},getNorFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"})},getDataJson:function(){var t={tableList:[],lineList:[]};return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node?t.tableList.push({tableId:e.data.tableId,loc:e.location.x+" "+e.location.y}):e instanceof go.Link&&alert("line")}),this.tableRelationDiagram.links.each(function(e){e instanceof go.Link&&t.lineList.push({lineId:e.data.lineId,from:e.data.from,to:e.data.to,fromText:e.data.fromText,toText:e.data.toText})}),t},setDataJson:function(e){this.formatJson=e},getDiagramJson:function(){return this.tableRelationDiagram.model.toJson()},alertDataJson:function(){var e=this.getDataJson();DialogUtility.AlertJsonCode(e)},alertDiagramJson:function(){var e=this.getDiagramJson();DialogUtility.AlertJsonCode(e)},tableIsExistInDiagram:function(t){var i=!1;return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node&&e.data.tableId==t&&(i=!0)}),i},downLoadModelPNG:function(){this.tableRelationDiagram.makeImageData({background:"white",returnType:"blob",scale:1,callback:function(e){var t=window.URL.createObjectURL(e),i="myBlobFile1.png",a=document.createElement("a");a.style="display: none",a.href=t,a.download=i,void 0===window.navigator.msSaveBlob?(document.body.appendChild(a),requestAnimationFrame(function(){a.click(),window.URL.revokeObjectURL(t),document.body.removeChild(a)})):window.navigator.msSaveBlob(e,i)}})}},template:'<div ref="relationContentOuterWrap" class="table-relation-content-outer-wrap">\n                    <div class="table-relation-content-header-wrap">\n                        <div class="table-relation-desc-outer-wrap" v-if="displayDesc">\n                            <div class="table-relation-desc">\n                                备注：{{relation.relationDesc}}\n                            </div>\n                        </div>\n                        <div class="table-relation-op-buttons-outer-wrap">\n                            <div class="table-relation-op-buttons-inner-wrap">\n                                <button-group shape="circle">\n                                    <i-button @click="showSelectTableDialog" type="success" icon="md-add"></i-button>\n                                    <i-button @click="showSelectFieldConnectDialog" type="primary" icon="logo-steam">连接</i-button>\n                                    <i-button disabled type="primary" icon="md-return-left">引入</i-button>\n                                    <i-button disabled type="primary" icon="md-qr-scanner">全屏</i-button>\n                                    <i-button disabled type="primary" icon="md-git-compare">历史</i-button>\n                                    <i-button @click="alertDataJson" type="primary" icon="md-code">数据Json</i-button>\n                                    <i-button @click="alertDiagramJson" type="primary" icon="md-code-working">图形Json</i-button>\n                                    <i-button @click="downLoadModelPNG" type="primary" icon="md-cloud-download">下载</i-button>\n                                    <i-button @click="saveModelToServer" type="primary" icon="logo-instagram">保存</i-button>\n                                    <i-button @click="deleteSelection" type="primary" icon="md-close"></i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="table-relation-content-wrap" id="tableRelationDiagramDiv"></div>\n                    <select-single-table-dialog ref="selectSingleTableDialog" @on-selected-table="addTableToDiagram"></select-single-table-dialog>\n                    <table-relation-connect-two-table-dialog ref="tableRelationConnectTwoTableDialog" @on-completed-connect="connectSelectionNode"></table-relation-connect-two-table-dialog>\n                </div>'}),Vue.component("select-default-value-dialog",{data:function(){var i=this;return{acInterface:{getGroupTreeData:"/Rest/Builder/EnvVariableGroup/GetTreeData",reloadListData:"/Rest/Builder/EnvVariable/GetListData"},selectType:"Const",selectValue:"",selectText:"",constValue:"",listHeight:470,tree:{treeIdFieldName:"envGroupId",treeObj:null,treeSelectedNode:null,treeSetting:{async:{enable:!0,url:""},data:{key:{name:"envGroupText"},simpleData:{enable:!0,idKey:"envGroupId",pIdKey:"envGroupParentId",rootId:0}},callback:{onClick:function(e,t,i){this.getZTreeObj(t)._host.treeNodeSelected(e,t,i)},onAsyncSuccess:function(e,t,i,a){appList.treeObj.expandAll(!0)}}}},tableData:[],columnsConfig:[{title:"变量名称",key:"envVarText",align:"center"},{title:"变量值",key:"envVarValue",align:"center"},{title:"操作",key:"envVarId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.SelectedButton(e,t,"envVarId",i)])}}],searchCondition:{envVarGroupId:{value:"",type:SearchUtility.SearchFieldType.StringType}},pageTotal:0,pageSize:100,pageNum:1}},mounted:function(){this.loadData()},methods:{beginSelect:function(e){console.log(e);var t=this.$refs.selectDefaultValueDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置默认值"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),null==e&&(this.selectValue="",this.selectText="",this.constValue="")},loadData:function(){AjaxUtility.Post(this.acInterface.getGroupTreeData,{},function(e){if(console.log(e),e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++);this.tree.treeObj=$.fn.zTree.init($("#zTreeUL"),this.tree.treeSetting,e.data),this.tree.treeObj.expandAll(!0),this.tree.treeObj._host=this}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,function(){})},this)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e={};if("Const"==this.selectType){if(""==this.constValue)return void DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请设置常量默认值！",null);e.Type="Const",e.Value=this.constValue,e.Text=this.constValue}else e.Type="EnvVar",e.Value=this.selectValue,e.Text=this.selectText;this.$emit("on-selected-default-value",e),this.handleClose()},clearComplete:function(){this.$emit("on-selected-default-value",null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDefaultValueDialogWrap)},selectionChange:function(){},clearSearchCondition:function(){for(var e in this.searchCondition)this.searchCondition[e].value=""},treeNodeSelected:function(e,t,i){this.pageNum=1,this.clearSearchCondition(),this.searchCondition.envVarGroupId.value=i[this.tree.treeIdFieldName],this.reloadData()},reloadData:function(){ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadListData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:"envVarId",autoSelectedOldRows:!0,successFunc:null,loadDict:!1,custParas:{}})},selected:function(e,t){console.log(t),this.selectValue=t.row.envVarValue,this.selectText=t.row.envVarText}},template:'<div  ref="selectDefaultValueDialogWrap" class="general-edit-page-wrap" style="display: none;margin-top: 0px">\n                    <tabs :value="selectType" v-model="selectType">\n                        <tab-pane label="常量" name="Const" >\n                            <i-form :label-width="80" style="width: 80%;margin: 50px auto auto;">\n                                <form-item label="常量：">\n                                    <i-input v-model="constValue"></i-input>\n                                </form-item>\n                            </i-form>\n                        </tab-pane>\n                        <tab-pane label="环境变量" name="EnvVar">\n                            <div style="height: 45px;border-bottom: dotted 1px #8a8a8a;margin-bottom: 10px;">\n                                <div style="float: right;padding: 8px;border-radius: 8px;color:orangered;border: solid 1px #adbed8;">已经选择：{{selectText}}</div>\n                            </div>\n                            <div>\n                                <div style="width: 30%;float: left;height: 514px">\n                                    <div class="inner-wrap">\n                                        <div>\n                                            <ul id="zTreeUL" class="ztree"></ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style="width: 68%;float: left;height: 514px" class="iv-list-page-wrap">\n                                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                                             class="iv-list-table" :highlight-row="true"\n                                             @on-selection-change="selectionChange"></i-table>\n                                </div>\n                            </div>\n                        </tab-pane>\n                    </tabs>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'});var DefaultValueUtility={formatText:function(e,t){return"Const"==e?"静态值:【"+t+"】":"EnvVar"==e?"环境变量:【"+t+"】":""==e?"【无】":"未知类型"+t}};Vue.component("select-single-table-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList"},jsEditorInstance:null,tableTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"Table"==i.nodeTypeName?a.selectedTable(e,t,i):a.selectedTable(e,t,null)}}},treeData:null,clickNode:null},selectedTableData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectTableModelDialogWrap)},beginSelectTable:function(){var e=this.$refs.selectTableModelDialogWrap;this.getTableDataInitTree();var t=450;550<PageStyleUtility.GetPageHeight()&&(t=600),DialogUtility.DialogElemObj(e,{modal:!0,width:570,height:t,title:"选择表"})},getTableDataInitTree:function(){var t=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){e.success?(t.tableTree.treeData=e.data,t.$refs.tableZTreeUL.setAttribute("id","select-table-single-comp-"+StringUtility.Guid()),t.tableTree.treeObj=$.fn.zTree.init($(t.$refs.tableZTreeUL),t.tableTree.treeSetting,t.tableTree.treeData),t.tableTree.treeObj.expandAll(!0),t.tableTree.treeObj._host=t,fuzzySearchTreeObj(t.tableTree.treeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedTable:function(e,t,i){this.selectedTableData=i},completed:function(){this.selectedTableData?(this.$emit("on-selected-table",this.selectedTableData),this.handleClose()):DialogUtility.AlertText("请选择表!")}},template:'<div ref="selectTableModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="tableZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-single-webform-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/Form/GetWebFormForZTreeNodeList"},jsEditorInstance:null,tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"WebForm"==i.nodeTypeName&&a.selectedForm(e,t,i)}}},treeData:null},selectedFormData:null,oldSelectedFormId:""}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectModelDialogWrap)},beginSelectForm:function(e){var t=this.$refs.selectModelDialogWrap;this.getFormDataInitTree(),this.oldSelectedFormId=e;DialogUtility.DialogElemObj(t,{modal:!0,width:570,height:500,title:"选择窗体"})},getFormDataInitTree:function(){var a=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){if(e.success){a.tree.treeData=e.data;for(var t=0;t<a.tree.treeData.length;t++)"WebForm"==a.tree.treeData[t].nodeTypeName?a.tree.treeData[t].icon="/Themes/Png16X16/table.png":"Module"==a.tree.treeData[t].nodeTypeName&&(a.tree.treeData[t].icon="/Themes/Png16X16/folder-table.png");if(a.$refs.formZTreeUL.setAttribute("id","select-form-single-comp-"+StringUtility.Guid()),a.tree.treeObj=$.fn.zTree.init($(a.$refs.formZTreeUL),a.tree.treeSetting,a.tree.treeData),a.tree.treeObj.expandAll(!0),a.tree.treeObj._host=a,fuzzySearchTreeObj(a.tree.treeObj,a.$refs.txt_form_search_text.$refs.input,null,!0),null!=a.oldSelectedFormId&&""!=a.oldSelectedFormId){var i=a.tree.treeObj.getNodeByParam("id",a.oldSelectedFormId);a.tree.treeObj.selectNode(i)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedForm:function(e,t,i){this.selectedFormData=i},completed:function(){if(this.selectedFormData){var e={formModuleId:this.selectedFormData.attr4,formModuleName:this.selectedFormData.attr3,formId:this.selectedFormData.id,formName:this.selectedFormData.attr1,formCode:this.selectedFormData.attr2};this.$emit("on-selected-form",e),this.handleClose()}else DialogUtility.AlertText("请选择窗体!")}},template:'<div ref="selectModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none;">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_form_search_text" placeholder="请输入表单名称">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="formZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-validate-rule-dialog",{data:function(){var i=this;return{selectValidateType:"NoEmpty",ruleParas:{msg:"字段",numLength:4,decimalLength:0,jsMethodName:"",regularText:"",regularMsg:""},addedValidateRule:[],validateColumnsConfig:[{title:"类型",key:"validateType",width:150,align:"center"},{title:"参数",key:"validateParas",align:"center"},{title:"删除",key:"validateId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button del",on:{click:function(){i.delValidate(t.row.validateId)}}})])}}]}},mounted:function(){},methods:{beginSelect:function(e){var t=this.$refs.selectValidateRuleDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置验证规则"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.ruleParas.msg="auto",this.ruleParas.numLength=4,this.ruleParas.decimalLength=0,this.ruleParas.jsMethodName="",this.ruleParas.regularText="",this.ruleParas.regularMsg="",this.addedValidateRule=[],this.bindOldSelectedValue(e)},bindOldSelectedValue:function(e){var t=e;0<t.rules.length&&(this.addedValidateRule=t.rules,this.ruleParas.msg=t.msg)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e=this.addedValidateRule;if(0<this.addedValidateRule.length){e={msg:this.ruleParas.msg,rules:this.addedValidateRule};this.$emit("on-selected-validate-rule",JsonUtility.CloneSimple(e)),this.handleClose()}else this.clearComplete()},clearComplete:function(){this.$emit("on-clear-validate-rule"),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectValidateRuleDialogWrap)},addValidateRule:function(){var e="";"Number"==this.selectValidateType?e=JsonUtility.JsonToString({numLength:this.ruleParas.numLength,decimalLength:this.ruleParas.decimalLength}):"Regular"==this.selectValidateType?e=JsonUtility.JsonToString({regularText:this.ruleParas.regularText,regularMsg:this.ruleParas.regularMsg}):"JsMethod"==this.selectValidateType&&(e=JsonUtility.JsonToString({jsMethodName:this.ruleParas.jsMethodName}));var t={validateId:StringUtility.Timestamp(),validateType:this.selectValidateType,validateParas:e};this.addedValidateRule.push(t)},delValidate:function(e){for(var t=0;t<this.addedValidateRule.length;t++)this.addedValidateRule[t].validateId==e&&this.addedValidateRule.splice(t,1)}},template:'<div ref="selectValidateRuleDialogWrap" v-cloak class="general-edit-page-wrap" style="display: none">\n                    <card style="margin-top: 10px" >\n                        <p slot="title">设置验证规则</p>\n                        <div>\n                            <radio-group type="button" style="margin: auto" v-model="selectValidateType">\n                                <radio label="NoEmpty">不为空</radio>\n                                <radio label="Number">数字</radio>\n                                <radio label="Mobile">手机</radio>\n                                <radio label="Date">日期</radio>\n                                <radio label="Time">时间</radio>\n                                <radio label="DateTime">日期时间</radio>\n                                <radio label="EMail">邮件</radio>\n                                <radio label="IDCard">身份证</radio>\n                                <radio label="URL">URL</radio>\n                                <radio label="ENCode">英文</radio>\n                                <radio label="SimpleCode">特殊字符</radio>\n                                <radio label="Regular">正则表达式</radio>\n                                <radio label="JsMethod">JS方法</radio>\n                            </radio-group>\n                            <i-button type="success" shape="circle" icon="md-add" style="margin-left: 15px;cursor: pointer" @click="addValidateRule"></i-button>\n                        </div>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px">参数设置</divider>\n                            \x3c!--数字类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Number\'">\n                                <i-form :label-width="80">\n                                    <form-item label="长度：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="1" v-model="ruleParas.numLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">小数位数：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="0" v-model="ruleParas.decimalLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--正则表达式类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Regular\'">\n                                <i-form :label-width="80">\n                                    <form-item label="表达式：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularText" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">提示信息：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularMsg" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--JS方法类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'JsMethod\'">\n                                <i-form :label-width="80">\n                                    <form-item label="方法名：">\n                                        <i-input size="small" placeholder="Enter something..." v-model="ruleParas.jsMethodName" style="width: 90%"></i-input>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                        </div>\n                    </card>\n                    <card style="margin-top: 10px">\n                        <p slot="title">已添加规则</p>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">提示信息</divider>\n                            <i-form :label-width="0">\n                                <form-item label="">\n                                    <i-input  placeholder="请输入提示信息..."  v-model="ruleParas.msg"></i-input>\n                                </form-item>\n                            </i-form>\n                        </div>\n                        <div style="margin-bottom: 10px;overflow: auto" class="iv-list-page-wrap">\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">验证规则</divider>\n                            <i-table border :columns="validateColumnsConfig" :data="addedValidateRule"\n                                     class="iv-list-table" size="small" no-data-text="请添加验证规则" :height="130"></i-table>\n                        </div>\n                    </card>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("table-relation-connect-two-table-dialog",{data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},fromTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},toTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},dialogHeight:0,resultData:{from:{tableId:"",text:""},to:{tableId:"",text:""}}}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.connectTableFieldModelDialogWrap)},completed:function(){""!=this.resultData.from.text&&""!=this.resultData.to.text?(this.$emit("on-completed-connect",this.resultData),this.handleClose()):DialogUtility.AlertText("请设置关联字段")},getFieldsAndBind:function(l,n){var e=[l,n],o=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:e},function(e){if(e.success){var t=e.data,i=(e.exKVData.Tables,o.getSingleTableFieldsData(t,l)),a=o.getSingleTableFieldsData(t,n);o.fromTableField.fieldData=i,o.toTableField.fieldData=a}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},beginSelectConnect:function(e,t){var i=this.$refs.connectTableFieldModelDialogWrap;this.resultData.from.tableId=e,this.resultData.to.tableId=t,this.resultData.from.text="",this.resultData.to.text="",this.getFieldsAndBind(e,t);var a=450;550<PageStyleUtility.GetPageHeight()&&(a=600),this.dialogHeight=a,DialogUtility.DialogElemObj(i,{modal:!0,width:870,height:a,title:"设置关联"})},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&i.push(e[a]);return i},selectedFromField:function(e,t){this.resultData.from.text=e.fieldName+"[1]"},selectedToField:function(e,t){this.resultData.to.text=e.fieldName+"[0..N]"}},template:'<div ref="connectTableFieldModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap" style="padding: 10px">\n                        <div style="float: left;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.from.text" suffix="md-done-all" placeholder="开始关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedFromField" size="small" :height="dialogHeight-180" stripe border :columns="fromTableField.columnsConfig" :data="fromTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                        <div style="float:right;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.to.text" suffix="md-done-all" placeholder="结束关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedToField" size="small" :height="dialogHeight-180" stripe border :columns="toTableField.columnsConfig" :data="toTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("db-table-relation-comp",{data:function(){return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId"},relationTableTree:{treeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){window._dbtablerelationcomp.selectedRelationTableNode(i)}}},tableTreeRootData:{id:"-1",text:"数据关联",parentId:"",nodeTypeName:"根节点",icon:"/Themes/Png16X16/coins_add.png",_nodeExType:"root",tableId:"-1"},currentSelectedNode:null},relationTableEditorView:{isShowTableEditDetail:!1,isSubEditTr:!1,isMainEditTr:!1,selPKData:[],selSelfKeyData:[],selForeignKeyData:[]},emptyEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},currentEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},selectTableTree:{oldSelectedDBLinkId:"JBuild4dLocationDBLink",disabledDBLink:!1,dbLinkEntities:[],tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!0,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){if("Table"==i.nodeTypeName){var a=window._dbtablerelationcomp;$("#divSelectTable").dialog("close"),a.addTableToRelationTableTree(i)}}}},tableTreeData:null,allTableTreeData:null,selectedTableName:"无"},tempDataStore:{},resultData:[],treeNodeSetting:{MainTableNodeImg:"/Themes/Png16X16/page_key.png",SubTableNodeImg:"/Themes/Png16X16/page_refresh.png"}}},mounted:function(){this.getTablesAndBindOldSelected(),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj.expandAll(!0),this.relationTableTree.currentSelectedNode=this.relationTableTree.treeObj.getNodeByParam("id","-1"),window._dbtablerelationcomp=this},watch:{currentEditorData:{handler:function(e,t){for(var i=0;i<this.resultData.length;i++)this.resultData[i].id==e.id&&this.resultItemCopyEditEnableValue(this.resultData[i],e)},deep:!0}},methods:{resultItemCopyEditEnableValue:function(e,t){e.singleName=t.singleName,e.pkFieldName=t.pkFieldName,e.desc=t.desc,e.selfKeyFieldName=t.selfKeyFieldName,e.outerKeyFieldName=t.outerKeyFieldName,e.relationType=t.relationType,e.isSave=t.isSave,e.condition=t.condition},getTableFieldsByTableId:function(t){if("-1"==t)return null;if(this.tempDataStore["tableField_"+t])return this.tempDataStore["tableField_"+t];var i=this;return AjaxUtility.PostSync(this.acInterface.getTableFieldsUrl,{tableId:t},function(e){e.success?i.tempDataStore["tableField_"+t]=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.tempDataStore["tableField_"+t]?this.tempDataStore["tableField_"+t]:null},getEmptyResultItem:function(){return JsonUtility.CloneSimple(this.emptyEditorData)},getExistResultItem:function(e){for(var t=0;t<this.resultData.length;t++)if(this.resultData[t].id==e)return this.resultData[t];return null},getTablesAndBindOldSelected:function(){var t=this;AjaxUtility.Post(this.acInterface.getTablesDataUrl,{},function(e){e.success?(t.selectTableTree.dbLinkEntities=e.exKVData.dbLinkEntityList,t.selectTableTree.allTableTreeData=e.data,t.bindSelectTableTree(!0),fuzzySearchTreeObj(t.selectTableTree.tableTreeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},bindSelectTableTree:function(e){var t=CookieUtility.GetCookie("DBTRCDBLINKID");t&&e?this.selectTableTree.oldSelectedDBLinkId=t:t=this.selectTableTree.oldSelectedDBLinkId;for(var i=[],a=0;a<this.selectTableTree.allTableTreeData.length;a++)t==this.selectTableTree.allTableTreeData[a].outerId&&i.push(this.selectTableTree.allTableTreeData[a]);this.selectTableTree.tableTreeData=i,this.selectTableTree.tableTreeObj=$.fn.zTree.init($("#selectTableZTreeUL"),this.selectTableTree.tableTreeSetting,this.selectTableTree.tableTreeData),this.selectTableTree.tableTreeObj.expandAll(!0)},changeDBLink:function(e){CookieUtility.SetCookie1Month("DBTRCDBLINKID",e),this.bindSelectTableTree(!0)},getMainTableDBLinkId:function(){for(var e=0;e<this.selectTableTree.allTableTreeData.length;e++)if(this.selectTableTree.allTableTreeData[e].id==this.getMainTableId())return this.selectTableTree.allTableTreeData[e].outerId;return""},deleteSelectedRelationTreeNode:function(){if(this.relationTableTree.currentSelectedNode)if(this.isSelectedRootRelationTableNode())DialogUtility.AlertText("不能删除根节点!");else if(this.relationTableTree.currentSelectedNode.isParent)DialogUtility.AlertText("不能删除父节点!");else{for(var e=0;e<this.resultData.length;e++)if(this.resultData[e].id==this.relationTableTree.currentSelectedNode.id){this.resultData.splice(e,1);break}this.resultItemCopyEditEnableValue(this.currentEditorData,this.emptyEditorData),this.currentEditorData.id="",this.currentEditorData.parentId="",this.$refs.sqlGeneralDesignComp.setValue(""),this.relationTableEditorView.selPKData=[],this.relationTableEditorView.selSelfKeyData=[],this.relationTableEditorView.selForeignKeyData=[],this.relationTableEditorView.isShowTableEditDetail=!1,this.relationTableTree.treeObj.removeNode(this.relationTableTree.currentSelectedNode,!1),this.relationTableTree.currentSelectedNode=null}else DialogUtility.AlertText("请选择要删除的节点!")},beginSelectTableToRelationTable:function(){if(this.relationTableTree.currentSelectedNode){$("#divSelectTable").dialog({modal:!0,height:600,width:700});var e=this.getMainTableDBLinkId();this.selectTableTree.disabledDBLink=!!e&&(this.selectTableTree.oldSelectedDBLinkId=e,this.bindSelectTableTree(!1),!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"选择一个父节点!",null)},appendMainTableNodeProp:function(e){e._nodeExType="MainNode",e.icon=this.treeNodeSetting.MainTableNodeImg},appendSubTableNodeProp:function(e){e._nodeExType="SubNode",e.icon=this.treeNodeSetting.SubTableNodeImg},buildRelationTableNode:function(e,t){return"root"==this.relationTableTree.currentSelectedNode._nodeExType?this.appendMainTableNodeProp(e):this.appendSubTableNodeProp(e),e.tableId=e.id,e.id=t||StringUtility.Guid(),e},getMainRelationTableNode:function(){var e=this.relationTableTree.treeObj.getNodeByParam("_nodeExType","MainNode");return e||null},getMainTableId:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().tableId:""},getMainTableName:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().value:""},getMainTableCaption:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().attr1:""},isSelectedRootRelationTableNode:function(){return"-1"==this.relationTableTree.currentSelectedNode.id},isSelectedMainRelationTableNode:function(){return"MainNode"==this.relationTableTree.currentSelectedNode._nodeExType},addTableToRelationTableTree:function(e){if(e=this.buildRelationTableNode(e),null!=this.getMainRelationTableNode()&&this.isSelectedRootRelationTableNode())DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"只允许存在一个主记录!",null);else{this.relationTableTree.treeObj.addNodes(this.relationTableTree.currentSelectedNode,-1,e,!1);var t=this.getEmptyResultItem();t.id=e.id,t.parentId=this.relationTableTree.currentSelectedNode.id,t.tableId=e.tableId,t.tableName=e.value,t.tableCaption=e.attr1,t.tableCode=e.code,this.resultData.push(t)}},selectedRelationTableNode:function(e){if(this.relationTableTree.currentSelectedNode=e,this.relationTableEditorView.isShowTableEditDetail=!this.isSelectedRootRelationTableNode(),this.relationTableEditorView.isMainEditTr=this.isSelectedMainRelationTableNode(),this.relationTableEditorView.isSubEditTr=!this.isSelectedMainRelationTableNode(),!this.isSelectedRootRelationTableNode()){this.relationTableEditorView.selPKData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[],this.relationTableEditorView.selSelfKeyData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[];var t=e.getParentNode();this.relationTableEditorView.selForeignKeyData=null!=this.getTableFieldsByTableId(t.tableId)?this.getTableFieldsByTableId(t.tableId):[],this.currentEditorData.id=this.relationTableTree.currentSelectedNode.id,this.currentEditorData.parentId=t.id;var i=this.getExistResultItem(e.id);if(null!=i){this.resultItemCopyEditEnableValue(this.currentEditorData,i);var a=this;window.setTimeout(function(){a.$refs.sqlGeneralDesignComp.setValue(a.currentEditorData.condition),a.$refs.sqlGeneralDesignComp.setAboutTableFields(a.relationTableEditorView.selSelfKeyData,a.relationTableEditorView.selForeignKeyData)},300)}else alert("通过getExistResultItem获取不到数据!")}},getResultData:function(){return this.resultData},serializeRelation:function(e){alert("serializeRelation已经停用")},deserializeRelation:function(e){alert("deserializeRelation已经停用")},getValue:function(){return{mainTableId:this.getMainTableId(),mainTableName:this.getMainTableName(),mainTableCaption:this.getMainTableCaption(),relationData:this.resultData}},setValue:function(e){var t=JsonUtility.StringToJson(e);this.resultData=t;for(var i=new Array,a=0;a<t.length;a++){var l={value:t[a].tableName,attr1:t[a].tableCaption,text:"【"+t[a].tableCode+"】"+t[a].tableCaption+"【"+t[a].tableName+"】",id:t[a].id,parentId:t[a].parentId,tableId:t[a].tableId,tableName:t[a].tableName,tableCaption:t[a].tableCaption,tableCode:t[a].tableCode};"-1"==t[a].parentId?this.appendMainTableNodeProp(l):this.appendSubTableNodeProp(l),i.push(l)}i.push(this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,i),this.relationTableTree.treeObj.expandAll(!0)},alertSerializeRelation:function(){DialogUtility.AlertJsonCode(this.resultData)},inputDeserializeRelation:function(){DialogUtility.Prompt(window,{width:900,height:600},DialogUtility.DialogPromptId,"请贴入数据关联Json设置字符串",function(e){try{window._dbtablerelationcomp.setValue(e)}catch(e){alert("反序列化失败:"+e)}})}},template:'<div class="db-table-relation-comp">\n                <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 10px">数据关系关联设置</divider>\n                <div style="float: left;width: 350px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <button-group shape="circle" style="margin: auto">\n                        <i-button type="success" @click="beginSelectTableToRelationTable">&nbsp;添加&nbsp;</i-button>\n                        <i-button @click="deleteSelectedRelationTreeNode">&nbsp;删除&nbsp;</i-button>\n                        <i-button @click="alertSerializeRelation">序列化</i-button>\n                        <i-button @click="inputDeserializeRelation">反序列化</i-button>\n                        <i-button>说明</i-button>\n                    </button-group>\n                    <ul id="dataRelationZTreeUL" class="ztree" style="overflow-x: hidden"></ul>\n                </div>\n                <div style="float: right;width: 630px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <table class="light-gray-table" cellpadding="0" cellspacing="0" border="0" v-if="relationTableEditorView.isShowTableEditDetail">\n                        <colgroup>\n                            <col style="width: 17%" />\n                            <col style="width: 33%" />\n                            <col style="width: 15%" />\n                            <col style="width: 35%" />\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <td class="label">SingleName：</td>\n                                <td>\n                                    <i-input v-model="currentEditorData.singleName" size="small" placeholder="本关联中的唯一名称,可以为空" />\n                                </td>\n                                <td class="label">PKKey：</td>\n                                <td>\n                                    <i-select placeholder="默认使用Id字段" v-model="currentEditorData.pkFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selPKData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">数据关系：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.relationType" type="button" size="small">\n                                        <radio label="1To1">1:1</radio>\n                                        <radio label="1ToN">1:N</radio>\n                                    </radio-group>\n                                </td>\n                                <td class="label">是否保存：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.isSave" type="button" size="small">\n                                        <radio label="true">是</radio>\n                                        <radio label="false">否</radio>\n                                    </radio-group>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">本身关联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.selfKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selSelfKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                                <td class="label">外联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.outerKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selForeignKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">Desc：</td>\n                                <td colspan="3">\n                                    <i-input v-model="currentEditorData.desc" size="small" placeholder="说明" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">加载条件：</td>\n                                <td colspan="3">\n                                    <sql-general-design-comp ref="sqlGeneralDesignComp" :sqlDesignerHeight="74" v-model="currentEditorData.condition" :showField="true"></sql-general-design-comp>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div id="divSelectTable" title="请选择表" style="display: none">\n                    <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        <i-select v-model="selectTableTree.oldSelectedDBLinkId" slot="prepend" style="width: 280px" @on-change="changeDBLink" :disabled="selectTableTree.disabledDBLink">\n                            <i-option :value="item.dbId" v-for="item in selectTableTree.dbLinkEntities" :key="item.dbId">{{item.dbLinkName}}</i-option>\n                        </i-select>\n                    </i-input>\n                    <ul id="selectTableZTreeUL" class="ztree div-custom-scroll" style="height: 500px;overflow-y:scroll;overflow-x:hidden"></ul>\n                </div>\n              </div>'}),Vue.component("design-html-elem-list",{data:function(){return{}},mounted:function(){},methods:{},template:'<div class="design-html-elem-list-wrap">            <div class="design-html-elem-list-item">格式化</div>            <div class="design-html-elem-list-item">说明</div>        </div>'}),Vue.component("fd-control-base-info",{props:["value"],data:function(){return{baseInfo:{id:"",serialize:"",name:"",className:"",placeholder:"",custReadonly:"",custDisabled:"",style:"",desc:"",status:"",groupName:""}}},watch:{baseInfo:function(e){this.$emit("input",e)},value:function(e){this.baseInfo=e}},mounted:function(){this.baseInfo=this.value,this.baseInfo.status||(this.baseInfo.status="enable")},methods:{},template:'<table class="html-design-plugin-dialog-table-wraper" cellpadding="0" cellspacing="0" border="0">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 240px" />\n                        <col style="width: 90px" />\n                        <col style="width: 120px" />\n                        <col style="width: 90px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>ID：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.id" />\n                            </td>\n                            <td>Serialize：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.serialize">\n                                    <radio label="true">是</radio>\n                                    <radio label="false">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>启用：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.status">\n                                    <radio label="enable">是</radio>\n                                    <radio label="disable">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Name：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.name" />\n                            </td>\n                            <td>ClassName：</td>\n                            <td colspan="3">\n                                <input type="text" v-model="baseInfo.className" />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Placeholder</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.placeholder" />\n                            </td>\n                            <td>Readonly：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custReadonly">\n                                    <radio label="readonly">是</radio>\n                                    <radio label="noreadonly">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>Disabled：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custDisabled">\n                                    <radio label="disabled">是</radio>\n                                    <radio label="nodisabled">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Group</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.groupName" />\n                            </td>\n                            <td></td>\n                            <td style="text-align: center">\n                            </td>\n                            <td></td>\n                            <td style="text-align: center">\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>样式：</td>\n                            <td colspan="5">\n                                <textarea rows="7" v-model="baseInfo.style"></textarea>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>备注：</td>\n                            <td colspan="5">\n                                <textarea rows="4" v-model="baseInfo.desc"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-bind-to",{props:["bindToFieldProp","defaultValueProp","validateRulesProp"],data:function(){return{bindToField:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},validateRules:{msg:"",rules:[]},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tempData:{defaultDisplayText:""}}},watch:{bindToProp:function(e){console.log(e)},bindToFieldProp:function(e){this.bindToField=e},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))},validateRulesProp:function(e){this.validateRules=e}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{setCompleted:function(){this.$emit("on-set-completed",this.bindToField,this.defaultValue,this.validateRules)},selectBindFieldView:function(){window._SelectBindObj=this,window.parent.appForm.selectBindToSingleFieldDialogBegin(window,this.getSelectFieldResultValue())},setSelectFieldResultValue:function(e){this.bindToField={},this.bindToField.relationId=null!=e?(this.bindToField.fieldName=e.fieldName,this.bindToField.tableId=e.tableId,this.bindToField.tableName=e.tableName,this.bindToField.tableCaption=e.tableCaption,this.bindToField.fieldCaption=e.fieldCaption,this.bindToField.fieldDataType=e.fieldDataType,this.bindToField.fieldLength=e.fieldLength,e.relationId):(this.bindToField.fieldName="",this.bindToField.tableId="",this.bindToField.tableName="",this.bindToField.tableCaption="",this.bindToField.fieldCaption="",this.bindToField.fieldDataType="",this.bindToField.fieldLength=""),this.setCompleted()},getSelectFieldResultValue:function(){return JsonUtility.CloneSimple(this.bindToField)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.appForm.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText=""),this.setCompleted()},selectValidateRuleView:function(){window._SelectBindObj=this,window.parent.appForm.selectValidateRuleDialogBegin(window,this.getSelectValidateRuleResultValue())},setSelectValidateRuleResultValue:function(e){null!=e?(this.validateRules=e,this.setCompleted()):(this.validateRules.msg="",this.validateRules.rules=[])},getSelectValidateRuleResultValue:function(){return this.validateRules}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col style="width: 100px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td colspan="4">\n                                绑定到表<button class="btn-select fright" v-on:click="selectBindFieldView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>表编号：</td>\n                            <td>{{bindToField.tableId}}</td>\n                            <td>数据源：</td>\n                            <td>\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td>表名：</td>\n                            <td>{{bindToField.tableName}}</td>\n                            <td>表标题：</td>\n                            <td>{{bindToField.tableCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>字段名：</td>\n                            <td>{{bindToField.fieldName}}</td>\n                            <td>字段标题：</td>\n                            <td>{{bindToField.fieldCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>类型：</td>\n                            <td>{{bindToField.fieldDataType}}</td>\n                            <td>长度：</td>\n                            <td>{{bindToField.fieldLength}}</td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="4" style="background-color: #ffffff;">\n                            {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">\n                                校验规则<button class="btn-select fright" v-on:click="selectValidateRuleView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4" style="background-color: #ffffff">\n                                <table class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="text-align: center;">提示消息：</td>\n                                            <td>{{validateRules.msg}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td style="text-align: center;">验证类型</td>\n                                            <td style="background: #e8eaec;text-align: center;">参数</td>\n                                        </tr>\n                                        <tr v-for="ruleItem in validateRules.rules">\n                                            <td style="background: #ffffff;text-align: center;color: #ad9361">{{ruleItem.validateType}}</td>\n                                            <td style="background: #ffffff;text-align: center;"><p v-if="ruleItem.validateParas === \'\'">无参数</p><p v-else>{{ruleItem.validateParas}}</p></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-datasource",{data:function(){return{acInterface:{getDDGroupTreeData:"/Rest/SystemSetting/Dict/DictionaryGroup/GetTreeData"},ddGroupTreeObj:null,ddGroupTreeSetting:{async:{enable:!0,url:""},data:{key:{name:"dictGroupText"},simpleData:{enable:!0,idKey:"dictGroupId",pIdKey:"dictGroupParentId",rootId:0}},callback:{onClick:function(e,t,i){this.getZTreeObj(t)._host.selectedDictionaryGroup(i.dictGroupId,i.dictGroupText)},onAsyncSuccess:function(e,t,i,a){appList.treeObj.expandAll(!0)}}},normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryGroupDataSourceId:"",dictionaryGroupDataSourceText:"",restDataSource:"",interfaceDataSource:"",staticDataSource:"",defaultSelected:"",layoutDirection:"vertical",rowNum:"0",displayValueInText:"false"},showSelectDictionary:!1,showEditStatic:!1,showProp:!0}},watch:{},mounted:function(){this.initDDGroupTree()},methods:{getValue:function(){return this.normalDataSource.sqlDataSource=encodeURIComponent(this.normalDataSource.sqlDataSource),this.normalDataSource},setValue:function(e){this.normalDataSource=e,this.normalDataSource.sqlDataSource=decodeURIComponent(e.sqlDataSource),this.$refs.sqlGeneralDesignComp.setValue(this.normalDataSource.sqlDataSource)},beginSelectDictionaryGroup:function(){this.showSelectDictionary=!0,this.showProp=!1},selectedDictionaryGroup:function(e,t){this.normalDataSource.dictionaryGroupDataSourceId=e,this.normalDataSource.dictionaryGroupDataSourceText=t,this.showSelectDictionary=!1,this.showProp=!0},initDDGroupTree:function(){AjaxUtility.Post(this.acInterface.getDDGroupTreeData,{},function(e){if(e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++);this.ddGroupTreeObj=$.fn.zTree.init($("#zTreeUL"),this.ddGroupTreeSetting,e.data),this.ddGroupTreeObj.expandAll(!0),this.ddGroupTreeObj._host=this}},this)}},template:'<div>\n                    <div v-show="showProp">\n                        <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                            <colgroup>\n                                <col style="width: 100px" />\n                                <col style="width: 280px" />\n                                <col style="width: 100px" />\n                                <col />\n                            </colgroup>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        默认空：\n                                    </td>\n                                    <td>\n                                        <radio-group type="button" style="margin: auto" v-model="normalDataSource.defaultIsNull">\n                                            <radio label="true">是</radio>\n                                            <radio label="false">否</radio>\n                                        </radio-group>\n                                    </td>\n                                    <td colspan="2">\n                                        获取数据源优先级别->本地接口->Rest接口->数据字典->sql->静态值\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        REST数据源：\n                                    </td>\n                                    <td colspan="3">\n                                        <input type="text" v-model="normalDataSource.restDataSource" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        本地接口：\n                                    </td>\n                                    <td colspan="3">\n                                        <input type="text" v-model="normalDataSource.interfaceDataSource" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        数据字典：\n                                    </td>\n                                    <td colspan="3">\n                                        <div class="fleft">绑定数据字典:【<span style="color: red">{{normalDataSource.dictionaryGroupDataSourceText}}</span>】</div><button class="btn-select fright" v-on:click="beginSelectDictionaryGroup">...</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td rowspan="2">\n                                        SQL数据源：\n                                    </td>\n                                    <td colspan="3">\n                                        <span style="color: red">[ITEXT与IVALUE请使用大写]</span>示例:【SELECT \'1\' ITEXT,\'2\' IVALUE】\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan="3" style="background-color: #FFFFFF">\n                                        <sql-general-design-comp ref="sqlGeneralDesignComp" :sql-designer-height="74"  v-model="normalDataSource.sqlDataSource"></sql-general-design-comp>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        静态值：\n                                    </td>\n                                    <td colspan="3">\n                                        <button class="btn-select fright">...</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        默认选中：\n                                    </td>\n                                    <td>\n                                        <input type="text" v-model="normalDataSource.defaultSelected" />\n                                    </td>\n                                    <td>\n                                        显示Value：\n                                    </td>\n                                    <td>\n                                        <radio-group type="button" style="margin: auto" v-model="normalDataSource.displayValueInText">\n                                            <radio label="true">是</radio>\n                                            <radio label="false">否</radio>\n                                        </radio-group>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        方向：\n                                    </td>\n                                    <td>\n                                        <radio-group type="button" style="margin: auto" v-model="normalDataSource.layoutDirection">\n                                            <radio label="vertical">垂直</radio>\n                                            <radio label="horizontal">水平</radio>\n                                        </radio-group>\n                                    </td>\n                                    <td>\n                                        单列个数：\n                                    </td>\n                                    <td>\n                                        <input type="text" v-model="normalDataSource.rowNum" />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div name="selectDictionary" v-show="showSelectDictionary" style="position:relative;height: 490px">\n                        <div style="position:absolute;top: 0px;bottom: 10px;right: 0px;left: 0px;overflow-y: auto;overflow-x: hidden">\n                            <ul id="zTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div name="selectDictionary" v-show="showEditStatic">编辑静态值</div>\n                </div>'}),Vue.component("fd-control-field-and-api",{props:["formId"],data:function(){var a=this;return{tableData:[],api:{acInterface:{getAPIData:"/Rest/Builder/ApiItem/GetAPISForZTreeNodeList"},apiTreeObj:null,apiTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.api.apiSelectData=i}}},apiData:null,apiSelectData:null,editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"API名称",BindName:"value",Renderer:"EditTable_Label",TitleCellClassName:"TitleCell",Formater:function(e){return a.getAPIText(e)}},{Title:"调用顺序",BindName:"runTime",Renderer:"EditTable_Select",ClientDataSource:[{Text:"之前",Value:"之前"},{Text:"之后",Value:"之后"}],Width:100}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"apiContainer",TableId:"apiContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},field:{acInterface:{getDataSetMainTableFields:"/Rest/Builder/DataSet/DatasetRelatedTable/GetDataSetMainTableFields"},editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"表名标题",BindName:"tableName",Renderer:"EditTable_Label"},{Title:"字段标题",BindName:"fieldName",Renderer:"EditTable_Select"},{Title:"默认值",BindName:"defaultValue",Renderer:"EditTable_SelectDefaultValue",Hidden:!1}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"fieldContainer",TableId:"fieldContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},oldFormId:""}},mounted:function(){},methods:{ready:function(e,t){this.dataSetId=e,this.tableId=t,this.bindTableFields(null),this.bindAPITreeAndInitEditTable(null)},getJson:function(){var e={};return this.api.editTableObject.CompletedEditingRow(),e.apis=this.api.editTableObject.GetSerializeJson(),this.field.editTableObject.CompletedEditingRow(),e.fields=this.field.editTableObject.GetSerializeJson(),e},setData:function(e,t){e&&this.api.editTableObject.LoadJsonData(e),t&&this.field.editTableObject.LoadJsonData(t)},handleClose:function(e){DialogUtility.CloseDialogElem(this.$refs[e])},bindTableFields:function(a){AjaxUtility.Post(this.field.acInterface.getDataSetMainTableFields,{dataSetId:this.dataSetId},function(e){console.log(e);for(var t=[],i=0;i<e.data.length;i++)t.push({Value:e.data[i].fieldName,Text:e.data[i].fieldCaption});this.field.editTableConfig.Templates[0].DefaultValue={Type:"Const",Value:e.data[0].tableName},this.field.editTableConfig.Templates[1].ClientDataSource=t,this.field.editTableObject||(this.field.editTableObject=Object.create(EditTable),this.field.editTableObject.Initialization(this.field.editTableConfig)),this.oldFormId=this.formId,a&&this.field.editTableObject.LoadJsonData(a)},this),this.field.editTableObject&&this.field.editTableObject.RemoveAllRow(),a&&this.field.editTableObject&&this.field.editTableObject.LoadJsonData(a)},addField:function(){this.field.editTableObject.AddEditingRowByTemplate()},removeField:function(){this.field.editTableObject.RemoveRow()},addInnerFormCloseButton:function(){var e={caption:"关闭",id:"inner_close_button_"+StringUtility.Timestamp(),buttonType:"关闭按钮"};this.tableData.push(e)},bindAPITreeAndInitEditTable:function(i){this.api.apiData||AjaxUtility.Post(this.api.acInterface.getAPIData,{groupType:"API_GROUP_BUILDER_BUTTON_ROOT"},function(e){if(e.success){if(this.api.apiData=e.data,null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"Group"==e.data[t].nodeTypeName?e.data[t].icon="/Themes/Png16X16/package.png":e.data[t].icon="/Themes/Png16X16/application_view_columns.png";this.api.apiTreeObj=$.fn.zTree.init($("#apiZTreeUL"),this.api.apiTreeSetting,e.data),this.api.apiTreeObj.expandAll(!0),fuzzySearchTreeObj(this.api.apiTreeObj,this.$refs.txt_search_api_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null);this.api.editTableObject=Object.create(EditTable),this.api.editTableObject.Initialization(this.api.editTableConfig),this.api.editTableObject.RemoveAllRow(),i&&this.api.editTableObject.LoadJsonData(i)},this)},getApiConfigAndBindToTable:function(){},addAPI:function(){"API"==this.api.apiSelectData.nodeTypeName?this.api.editTableObject.AddEditingRowByTemplate([],{value:this.api.apiSelectData.value,runTime:"之后"}):DialogUtility.AlertText("请选择需要添加的API!")},removeAPI:function(){this.api.editTableObject.RemoveRow()},clearAPI:function(){this.api.editTableObject.RemoveAllRow()},getAPIText:function(e){for(var t=0;t<this.api.apiData.length;t++)if("API"==this.api.apiData[t].nodeTypeName&&this.api.apiData[t].value==e)return this.api.apiData[t].text;return""}},template:'<div class="iv-list-page-wrap">\n                    <div>\n                          <div style="float: left;width: 94%">\n                            <div id="fieldContainer" class="edit-table-wrap" style="height: 180px;overflow: auto;width: 98%;margin: auto"></div>\n                          </div>\n                          <div style="float: right;width: 5%">\n                            <button-group vertical>\n                                <i-button size="small" type="success" icon="md-add" @click="addField"></i-button>\n                                <i-button size="small" type="primary" icon="md-close" @click="removeField"></i-button>\n                            </button-group>\n                          </div>\n                    </div>\n                    <div>\n                          <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                            <colgroup>\n                                <col style="width: 320px" />\n                                <col style="width: 60px" />\n                                <col />\n                            </colgroup>\n                            <tbody>\n                                <tr>\n                                    <td style="background: #ffffff">\n                                        <i-input search class="input_border_bottom" ref="txt_search_api_text" placeholder="请输入API名称"></i-input>\n                                        <ul id="apiZTreeUL" class="ztree" style="height: 260px;overflow: auto"></ul>\n                                    </td>\n                                    <td style="text-align: center;background-color: #f8f8f8">\n                                        <button-group vertical>\n                                            <i-button size="small" type="success" icon="md-add" @click="addAPI"></i-button>\n                                            <i-button size="small" type="primary" icon="md-close" @click="removeAPI"></i-button>\n                                            <i-button size="small" type="primary" icon="ios-trash" @click="clearAPI"></i-button>\n                                        </button-group>\n                                    </td>\n                                    <td style="background: #ffffff;" valign="top">\n                                        <div id="apiContainer" class="edit-table-wrap" style="height: 260px;overflow: auto;width: 98%;margin: auto"></div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>'}),Vue.component("fd-control-multilevel",{props:["value"],data:function(){return{multilevelProps:{level2BindControlId:""}}},watch:{baseInfo:function(e){this.$emit("input",e)},value:function(e){this.multilevelProps=e}},mounted:function(){this.multilevelProps=this.value},methods:{},template:'<table class="html-design-plugin-dialog-table-wraper" cellpadding="0" cellspacing="0" border="0">\n                    <colgroup>\n                        <col style="width: 140px" />\n                        <col style="width: 200px" />\n                        <col style="width: 90px" />\n                        <col style="width: 120px" />\n                        <col style="width: 90px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>二级字典绑定到ID：</td>\n                            <td colspan="5">\n                                 <input type="text" v-model="multilevelProps.level2BindControlId" />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-select-bind-to-single-field-dialog",{data:function(){var a=this;return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId",getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},selectedData:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},tableTree:{tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"displayText"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectedData.tableId=i.tableId,a.selectedData.tableName=i.tableName,a.selectedData.tableCaption=i.tableCaption,a.selectedData.fieldName="",a.selectedData.fieldCaption="",a.selectedData.fieldDataType="",a.selectedData.fieldLength="",a.fieldTable.fieldData=[],a.filterAllFieldsToTable(a.selectedData.tableId)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},tableTreeData:null,selectedTableName:"无"},fieldTable:{fieldData:[],tableHeight:470,columnsConfig:[{title:" ",width:60,key:"isSelectedToBind",render:function(e,t){return"1"==t.row.isSelectedToBind?e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button selected"})]):e("div",{class:""},"")}},{title:"名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},oldRelationDataString:"",relationData:null,allFields:null,oldBindFieldData:null}},mounted:function(){},methods:{beginSelect:function(e,t){if(console.log("关联表数据："),console.log(e),console.log("已经绑定了的数据："),console.log(t),null==e||""==e||0==e.length)return DialogUtility.AlertText("请先设置表单的数据关联！"),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),void $(window.document).find(".ui-dialog").css("zIndex",10101);var i=this.$refs.fdControlSelectBindToSingleFieldDialogWrap;if(DialogUtility.DialogElemObj(i,{modal:!0,height:680,width:980,title:"选择绑定字段"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.oldBindFieldData=t,this.selectedData=JsonUtility.CloneSimple(t),JsonUtility.JsonToString(e)!=this.oldRelationDataString){for(var a=0;a<e.length;a++)e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]("+e[a].relationType+")","-1"==e[a].parentId&&(e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]"),e[a].icon="/Themes/Png16X16/table.png";this.tableTree.tableTreeObj=$.fn.zTree.init($("#tableZTreeUL"),this.tableTree.tableTreeSetting,e),this.tableTree.tableTreeObj.expandAll(!0),this.oldRelationDataString=JsonUtility.JsonToString(e),this.relationData=e,this.getAllTablesFields(e)}else this.resetFieldToSelectedStatus(this.allFields);if(t&&t.tableId&&""!=t.tableId){var l=this.tableTree.tableTreeObj.getNodeByParam("tableId",t.tableId);this.tableTree.tableTreeObj.selectNode(l,!1,!0)}},resetFieldToSelectedStatus:function(e){for(var t=0;t<this.fieldTable.fieldData.length;t++)this.fieldTable.fieldData[t].isSelectedToBind="0";if(e){for(t=0;t<e.length;t++)e[t].isSelectedToBind="0",e[t].fieldTableId==this.oldBindFieldData.tableId&&e[t].fieldName==this.oldBindFieldData.fieldName&&(e[t].isSelectedToBind="1");this.allFields=e}this.filterAllFieldsToTable(this.oldBindFieldData.tableId)},getAllTablesFields:function(e){for(var t=[],i=0;i<e.length;i++)t.push(e[i].tableId);var a=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){var t=e.data;e.exKVData.Tables[0];console.log("重新获取数据"),console.log(t),a.resetFieldToSelectedStatus(t)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},filterAllFieldsToTable:function(e){if(e){for(var t=[],i=0;i<this.allFields.length;i++)this.allFields[i].fieldTableId==e&&t.push(this.allFields[i]);this.fieldTable.fieldData=t,console.log(this.fieldTable.fieldData)}},selectedField:function(e,t){this.selectedData.fieldName=e.fieldName,this.selectedData.fieldCaption=e.fieldCaption,this.selectedData.fieldDataType=e.fieldDataType,this.selectedData.fieldLength=e.fieldDataLength;var i=this.tableTree.tableTreeObj.getNodeByParam("tableId",e.fieldTableId);this.selectedData.tableId=i.tableId,this.selectedData.tableName=i.tableName,this.selectedData.tableCaption=i.tableCaption,this.selectedData.relationId=i.id},selectComplete:function(){var e=this.selectedData;StringUtility.IsNullOrEmpty(e.tableId)||StringUtility.IsNullOrEmpty(e.fieldName)?DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择需要绑定的字段!",null):(this.$emit("on-selected-bind-to-single-field",e),this.handleClose())},clearComplete:function(){window.OpenerWindowObj[this.getSelectInstanceName()].setSelectFieldResultValue(null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.fdControlSelectBindToSingleFieldDialogWrap)}},template:'<div ref="fdControlSelectBindToSingleFieldDialogWrap" class="general-edit-page-wrap design-dialog-wraper-single-dialog" style="display: none">\n                    <div class="select-table-wraper">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择表</divider>\n                        \x3c!--<input type="text" id="txtSearchTableTree" style="width: 100%;height: 32px;margin-top: 2px" />--\x3e\n                        <ul id="tableZTreeUL" class="ztree"></ul>\n                    </div>\n                    <div class="select-field-wraper iv-list-page-wrap">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择字段</divider>\n                        <i-table border :columns="fieldTable.columnsConfig" :data="fieldTable.fieldData"\n                                 class="iv-list-table" :highlight-row="true"\n                                 @on-row-click="selectedField" :height="fieldTable.tableHeight" size="small" no-data-text="请选择表"></i-table>\n                    </div>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("inner-form-button-list-comp",{props:["formId"],data:function(){var a=this;return{columnsConfig:[{title:"标题",key:"caption",align:"center"},{title:"类型",key:"buttonType",align:"center"},{title:"操作",key:"id",width:200,align:"center",render:function(e,t){var i=[];return"关闭按钮"!=t.row.buttonType&&i.push(ListPageUtility.IViewTableInnerButton.EditButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveUpButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveDownButton(e,t,"id",a)),e("div",{class:"list-row-button-wrap"},i)}}],tableData:[],innerSaveButtonEditData:{caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""},api:{acInterface:{getAPIData:"/Rest/Builder/ApiItem/GetAPISForZTreeNodeList"},apiTreeObj:null,apiTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.api.apiSelectData=i}}},apiData:null,apiSelectData:null,editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"API名称",BindName:"value",Renderer:"EditTable_Label",TitleCellClassName:"TitleCell",Formater:function(e){return a.getAPIText(e)}},{Title:"调用顺序",BindName:"runTime",Renderer:"EditTable_Select",ClientDataSource:[{Text:"之前",Value:"之前"},{Text:"之后",Value:"之后"}],Width:100}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"apiContainer",TableId:"apiContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},field:{acInterface:{getFormMainTableFields:"/Rest/Builder/Form/GetFormMainTableFields"},editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"表名标题",BindName:"tableName",Renderer:"EditTable_Label"},{Title:"字段标题",BindName:"fieldName",Renderer:"EditTable_Select"},{Title:"默认值",BindName:"defaultValue",Renderer:"EditTable_SelectDefaultValue",Hidden:!1},{Title:"表ID",BindName:"tableId",Renderer:"EditTable_Label"}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"fieldContainer",TableId:"fieldContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},oldFormId:"",innerJsClientButtonEditData:{caption:"",execAndClose:"true",id:"",buttonType:"脚本按钮",actionType:"reloadData",callJsMethod:"",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""}}},mounted:function(){},methods:{ready:function(e){null!=e&&""!=e&&(this.tableData=JsonUtility.StringToJson(e)),this.bindAPITreeAndInitEditTable(null)},getJson:function(){return JsonUtility.JsonToString(this.tableData)},edit:function(e,t){"保存按钮"==t.row.buttonType?this.editInnerFormSaveButton(t):"脚本按钮"==t.row.buttonType&&this.editInnerFormJsClientButton(t)},del:function(e,t){for(var i=0;i<this.tableData.length;i++)this.tableData[i].id==e&&ArrayUtility.Delete(this.tableData,i)},moveUp:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveUp(this.tableData,i)},moveDown:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveDown(this.tableData,i)},addInnerFormSaveButton:function(){if(null!=this.formId&&""!=this.formId){this.editSaveButtonStatuc="add",this.resetInnerSaveButtonData();var e=this.$refs.innerFormSaveButtonWrap;DialogUtility.DialogElemObj(e,{modal:!0,height:520,width:720,title:"窗体内保存按钮"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.innerSaveButtonEditData.id="inner_form_save_button_"+StringUtility.Timestamp(),this.bindTableFields(null),this.clearAPI()}else DialogUtility.AlertText("请先设置绑定的窗体!")},handleClose:function(e){DialogUtility.CloseDialogElem(this.$refs[e])},editInnerFormSaveButton:function(e){this.addInnerFormSaveButton(),this.innerSaveButtonEditData=JsonUtility.CloneStringify(e.row),this.editSaveButtonStatuc="edit",this.bindAPITreeAndInitEditTable(this.innerSaveButtonEditData.apis),this.bindTableFields(this.innerSaveButtonEditData.fields)},resetInnerSaveButtonData:function(){this.innerSaveButtonEditData={caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""}},saveInnerSaveButtonToList:function(){var e=JsonUtility.CloneSimple(this.innerSaveButtonEditData);if(this.api.editTableObject.CompletedEditingRow(),e.apis=this.api.editTableObject.GetSerializeJson(),this.field.editTableObject.CompletedEditingRow(),e.fields=this.field.editTableObject.GetSerializeJson(),"add"==this.editSaveButtonStatuc)this.tableData.push(e);else for(var t=0;t<this.tableData.length;t++)this.tableData[t].id==e.id&&Vue.set(this.tableData,t,e);this.handleClose("innerFormSaveButtonWrap")},bindTableFields:function(a){this.oldFormId!=this.formId&&AjaxUtility.Post(this.field.acInterface.getFormMainTableFields,{formId:this.formId},function(e){console.log(e);for(var t=[],i=0;i<e.data.length;i++)t.push({Value:e.data[i].fieldName,Text:e.data[i].fieldCaption});this.field.editTableConfig.Templates[0].DefaultValue={Type:"Const",Value:e.data[0].tableName},this.field.editTableConfig.Templates[3].DefaultValue={Type:"Const",Value:e.data[0].tableId},this.field.editTableConfig.Templates[1].ClientDataSource=t,this.field.editTableObject||(this.field.editTableObject=Object.create(EditTable),this.field.editTableObject.Initialization(this.field.editTableConfig)),this.oldFormId=this.formId,a&&this.field.editTableObject.LoadJsonData(a)},this),this.field.editTableObject&&this.field.editTableObject.RemoveAllRow(),a&&this.field.editTableObject&&this.field.editTableObject.LoadJsonData(a)},addField:function(){this.field.editTableObject.AddEditingRowByTemplate()},removeField:function(){this.field.editTableObject.RemoveRow()},bindAPITreeAndInitEditTable:function(e){this.api.apiData||(AjaxUtility.Post(this.api.acInterface.getAPIData,{groupType:"API_GROUP_BUILDER_BUTTON_ROOT"},function(e){if(e.success){if(this.api.apiData=e.data,null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"Group"==e.data[t].nodeTypeName?e.data[t].icon="/Themes/Png16X16/package.png":e.data[t].icon="/Themes/Png16X16/application_view_columns.png";this.api.apiTreeObj=$.fn.zTree.init($("#apiZTreeUL"),this.api.apiTreeSetting,e.data),this.api.apiTreeObj.expandAll(!0),fuzzySearchTreeObj(this.api.apiTreeObj,this.$refs.txt_search_api_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.api.editTableObject=Object.create(EditTable),this.api.editTableObject.Initialization(this.api.editTableConfig)),this.api.editTableObject.RemoveAllRow(),e&&this.api.editTableObject.LoadJsonData(e)},getApiConfigAndBindToTable:function(){},addAPI:function(){"API"==this.api.apiSelectData.nodeTypeName?this.api.editTableObject.AddEditingRowByTemplate([],{value:this.api.apiSelectData.value,runTime:"之后"}):DialogUtility.AlertText("请选择需要添加的API!")},removeAPI:function(){this.api.editTableObject.RemoveRow()},clearAPI:function(){this.api.editTableObject.RemoveAllRow()},getAPIText:function(e){for(var t=0;t<this.api.apiData.length;t++)if("API"==this.api.apiData[t].nodeTypeName&&this.api.apiData[t].value==e)return this.api.apiData[t].text;return""},addInnerFormCloseButton:function(){var e={caption:"关闭",id:"inner_close_button_"+StringUtility.Timestamp(),buttonType:"关闭按钮"};this.tableData.push(e)},addInnerFormJsClientButton:function(){this.editJsClientButtonStatuc="add",this.resetInnerJsClientButtonData();var e=this.$refs.innerFormJsClientButtonWrap;DialogUtility.DialogElemObj(e,{modal:!0,height:520,width:720,title:"窗体内脚本按钮"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.innerJsClientButtonEditData.id="inner_form_js_client_button_"+StringUtility.Timestamp()},editInnerFormJsClientButton:function(e){this.addInnerFormJsClientButton(),this.innerJsClientButtonEditData=JsonUtility.CloneStringify(e.row),this.editJsClientButtonStatuc="edit"},resetInnerJsClientButtonData:function(){this.innerJsClientButtonEditData={caption:"",execAndClose:"true",id:"",buttonType:"脚本按钮",actionType:"reloadData",callJsMethod:"",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""}},saveInnerJsClientButtonToList:function(){var e=JsonUtility.CloneSimple(this.innerJsClientButtonEditData);if("add"==this.editJsClientButtonStatuc)this.tableData.push(e);else for(var t=0;t<this.tableData.length;t++)this.tableData[t].id==e.id&&Vue.set(this.tableData,t,e);this.handleClose("innerFormJsClientButtonWrap")}},template:'<div style="height: 210px" class="iv-list-page-wrap">\n                    <div ref="innerFormSaveButtonWrap" class="html-design-plugin-dialog-wraper general-edit-page-wrap" style="display: none;margin-top: 0px">\n                        <tabs size="small" name="inner-form-save-button-edit-tabs">\n                            <tab-pane tab="inner-form-save-button-edit-tabs" label="绑定信息">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 60px" />\n                                        <col style="width: 220px" />\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>标题：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.caption" />\n                                            </td>\n                                            <td>保存并关闭：</td>\n                                            <td>\n                                                <radio-group type="button" style="margin: auto" v-model="innerSaveButtonEditData.saveAndClose">\n                                                    <radio label="true">是</radio>\n                                                    <radio label="false">否</radio>\n                                                </radio-group>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>字段：</td>\n                                            <td colspan="3">\n                                                <div style="height: 140px">\n                                                    <div style="float: left;width: 94%">\n                                                        <div id="fieldContainer" class="edit-table-wrap" style="height: 310px;overflow: auto;width: 98%;margin: auto"></div>\n                                                    </div>\n                                                    <div style="float: right;width: 5%">\n                                                        <button-group vertical>\n                                                            <i-button size="small" type="success" icon="md-add" @click="addField"></i-button>\n                                                            <i-button size="small" type="primary" icon="md-close" @click="removeField"></i-button>\n                                                        </button-group>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane tab="inner-form-save-button-edit-tabs" label="API设置">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 320px" />\n                                        <col style="width: 60px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="background: #ffffff">\n                                                <i-input search class="input_border_bottom" ref="txt_search_api_text" placeholder="请输入API名称"></i-input>\n                                                <ul id="apiZTreeUL" class="ztree" style="height: 320px;overflow: auto"></ul>\n                                            </td>\n                                            <td style="text-align: center;background-color: #f8f8f8">\n                                                <button-group vertical>\n                                                    <i-button size="small" type="success" icon="md-add" @click="addAPI"></i-button>\n                                                    <i-button size="small" type="primary" icon="md-close" @click="removeAPI"></i-button>\n                                                    <i-button size="small" type="primary" icon="ios-trash" @click="clearAPI"></i-button>\n                                                </button-group>\n                                            </td>\n                                            <td style="background: #ffffff;" valign="top">\n                                                <div id="apiContainer" class="edit-table-wrap" style="height: 340px;overflow: auto;width: 98%;margin: auto"></div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane tab="inner-form-save-button-edit-tabs" label="开发扩展">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 150px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>ID：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.id" size="small" placeholder="" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>服务端解析类：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethod" size="small" placeholder="按钮进行服务端解析时,类全称,将调用该类,需要实现接口IFormButtonCustResolve" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethodPara" size="small" placeholder="服务端解析类的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethod" size="small" placeholder="客户端渲染方法,按钮将经由该方法渲染,最终形成页面元素,需要返回最终元素的HTML对象" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethodPara" size="small" placeholder="客户端渲染方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染后方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethod" size="small" placeholder="客户端渲染后调用方法,经过默认的渲染,无返回值" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethodPara" size="small" placeholder="客户端渲染后方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端点击前方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethod" size="small" placeholder="客户端点击该按钮时的前置方法,如果返回false将阻止默认调用" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethodPara" size="small" placeholder="客户端点击前方法的参数" />\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                        </tabs>\n                        <div class="button-outer-wrap" style="padding-top:4px">\n                            <div class="button-inner-wrap" style="margin-right: 4px">\n                                <button-group>\n                                    <i-button type="primary" @click="saveInnerSaveButtonToList()"> 保 存</i-button>\n                                    <i-button @click="handleClose(\'innerFormSaveButtonWrap\')">关 闭</i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div ref="innerFormJsClientButtonWrap" class="html-design-plugin-dialog-wraper general-edit-page-wrap" style="display: none;margin-top: 0px">\n                        <tabs size="small" name="inner-form-js-client-button-edit-tabs">\n                            <tab-pane tab="inner-form-js-client-button-edit-tabs" label="绑定信息">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 80px" />\n                                        <col style="width: 220px" />\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>标题：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.caption" />\n                                            </td>\n                                            <td>保存并关闭：</td>\n                                            <td>\n                                                <radio-group type="button" style="margin: auto" v-model="innerJsClientButtonEditData.execAndClose">\n                                                    <radio label="true">是</radio>\n                                                    <radio label="false">否</radio>\n                                                </radio-group>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>动作：</td>\n                                            <td colspan="3">\n                                                <radio-group type="button" style="margin: auto" v-model="innerJsClientButtonEditData.actionType">\n                                                    <radio label="reloadData">重新加载</radio>\n                                                    <radio label="callJsMethod">调用JS方法</radio>\n                                                </radio-group>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>执行方法：</td>\n                                            <td colspan="3">\n                                                <i-input v-model="innerJsClientButtonEditData.callJsMethod" placeholder="调用JS方法" />\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane tab="inner-form-js-client-button-edit-tabs" label="开发扩展">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 150px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>ID：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.id" size="small" placeholder="" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>服务端解析类：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custServerResolveMethod" size="small" placeholder="按钮进行服务端解析时,类全称,将调用该类,需要实现接口IFormButtonCustResolve" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custServerResolveMethodPara" size="small" placeholder="服务端解析类的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染方法：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientRendererMethod" size="small" placeholder="客户端渲染方法,按钮将经由该方法渲染,最终形成页面元素,需要返回最终元素的HTML对象" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientRendererMethodPara" size="small" placeholder="客户端渲染方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染后方法：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientRendererAfterMethod" size="small" placeholder="客户端渲染后调用方法,经过默认的渲染,无返回值" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientRendererAfterMethodPara" size="small" placeholder="客户端渲染后方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端点击前方法：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientClickBeforeMethod" size="small" placeholder="客户端点击该按钮时的前置方法,如果返回false将阻止默认调用" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerJsClientButtonEditData.custClientClickBeforeMethodPara" size="small" placeholder="客户端点击前方法的参数" />\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                        </tabs>\n                        <div class="button-outer-wrap" style="padding-top:4px">\n                            <div class="button-inner-wrap" style="margin-right: 4px">\n                                <button-group>\n                                    <i-button type="primary" @click="saveInnerJsClientButtonToList()"> 保 存</i-button>\n                                    <i-button @click="handleClose(\'innerFormJsClientButtonWrap\')">关 闭</i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div style="height: 210px;width: 100%">\n                        <div style="float: left;width: 82%">\n                            <i-table :height="210" width="100%" stripe border :columns="columnsConfig" :data="tableData"\n                                                     class="iv-list-table" :highlight-row="true"\n                                                     size="small"></i-table>\n                        </div>\n                        <div style="float: left;width: 15%;margin-left: 8px">\n                            <button-group vertical>\n                                <i-button type="success" @click="addInnerFormSaveButton()" icon="md-add">保存按钮</i-button>\n                                <i-button type="primary" @click="addInnerFormCloseButton()" icon="md-add">关闭按钮</i-button>\n                                <i-button type="primary" @click="addInnerFormJsClientButton()" icon="md-add">脚本按钮</i-button>\n                                <i-button size="small" icon="md-add" disabled>意见按钮</i-button>\n                                <i-button size="small" icon="md-add" disabled>流程按钮</i-button>\n                                <i-button size="small" disabled icon="md-add">拷贝Json</i-button>\n                                <i-button size="small" disabled icon="md-add">黏贴Json</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("list-search-control-bind-to-comp",{props:["bindToSearchFieldProp","dataSetId"],data:function(){var a=this;return{bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""}}},watch:{bindToSearchFieldProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e){console.log(e);var t=[],i={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};t.push(i);for(var a=0;a<e.relatedTableVoList.length;a++){t.push({pid:e.dsId,text:e.relatedTableVoList[a].rtTableCaption,id:e.relatedTableVoList[a].rtTableId,nodeType:"Table"});for(var l=0;l<e.relatedTableVoList[a].tableFieldPOList.length;l++){var n=e.relatedTableVoList[a].tableFieldPOList[l];n.pid=e.relatedTableVoList[a].rtTableId,n.text=n.fieldCaption+"["+n.fieldName+"]",n.nodeType="TableField",n.id=n.fieldId,n.icon="/Themes/Png16X16/page.png",t.push(n)}}this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,t),this.tree.treeObj.expandAll(!0),fuzzySearchTreeObj(this.tree.treeObj,this.$refs.txt_search_text.$refs.input,null,!0)},selectColumn:function(e){"TableField"==e.nodeType&&(this.bindToSearchField.columnTableName=e.tableName,this.bindToSearchField.columnName=e.fieldName,this.bindToSearchField.columnCaption=e.fieldCaption,this.bindToSearchField.columnDataTypeName=e.fieldDataType)},getData:function(){return console.log(this.bindToSearchField),{bindToSearchField:this.bindToSearchField,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindToSearchField=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                标题：\n                            </td>\n                            <td>\n                                <input type="text" v-model="bindToSearchField.columnTitle" />\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入列名或者标题"></i-input>                                <ul ref="zTreeUL" class="ztree div-custom-scroll" style="height: 430px;overflow-x:hidden;overflow-y: scroll;width: 382px"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                运算符：\n                            </td>\n                            <td>\n                                <i-select v-model="bindToSearchField.columnOperator" style="width:260px">\n                                    <i-option value="eq">等于</i-option>\n                                    <i-option value="like">匹配</i-option>\n                                    <i-option value="not_eq">不等于</i-option>\n                                    <i-option value="gt">大于</i-option>\n                                    <i-option value="gt_eq">大于等于</i-option>\n                                    <i-option value="lt">小于</i-option>\n                                    <i-option value="lt_eq">小于等于</i-option>\n                                    <i-option value="left_like">左匹配</i-option>\n                                    <i-option value="right_like">右匹配</i-option>\n                                    <i-option value="include">包含[暂时不支持]</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("list-table-label-bind-to-comp",{props:["bindPropProp","dataSetId"],data:function(){var a=this;return{bindProp:{columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",targetButtonId:"",columnAlign:"居中对齐"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""},buttons:[]}},watch:{bindPropProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e,t){console.log(e);for(var i=[],a=e.columnVoList,l=0;l<a.length;l++){var n=a[l];n.pid=e.dsId,n.text=n.columnCaption+"["+n.columnName+"]",n.nodeType="DataSetColumn",n.id=n.columnId,n.icon="/Themes/Png16X16/page.png",i.push(n)}var o={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};i.push(o),this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,i),this.tree.treeObj.expandAll(!0),this.buttons=t},selectColumn:function(e){this.bindProp.columnTableName=e.columnTableName,this.bindProp.columnName=e.columnName,this.bindProp.columnCaption=e.columnCaption,this.bindProp.columnDataTypeName=e.columnDataTypeName},getData:function(){return console.log(this.bindProp),this.bindProp.targetButtonId||(this.bindProp.targetButtonId=""),{bindProp:this.bindProp,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindProp=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                对齐方式：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.columnAlign" style="width:260px">\n                                    <i-option value="左对齐">左对齐</i-option>\n                                    <i-option value="居中对齐">居中对齐</i-option>\n                                    <i-option value="右对齐">右对齐</i-option>\n                                </i-select>\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <ul ref="zTreeUL" id="list-table-label-bind-to-comp-tree" class="ztree" style="height: 470px;overflow-y: auto;overflow-x: hidden;width: 382px"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindProp.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindProp.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindProp.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型： \n                            </td>\n                            <td>\n                                {{bindProp.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                触发按钮：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.targetButtonId" style="width:260px" :clearable="true">\n                                    <i-option :value="item.buttonId" v-for="item in buttons">{{item.buttonCaption}}</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("module-list-webform-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/Form/FormDesign.html",previewWebFormUrl:"/HTML/Builder/Form/FormPreview.html",reloadData:"/Rest/Builder/Form/GetListData",delete:"/Rest/Builder/Form/Delete",move:"/Rest/Builder/Form/Move",copyForm:"/Rest/Builder/Form/CopyForm"},idFieldName:"formId",searchCondition:{formModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"formCode",align:"center",width:80},{title:"表单名称",key:"formName",align:"left"},{title:"唯一名",key:"formSingleName",align:"center"},{title:"备注",key:"formDesc",align:"center"},{title:"编辑时间",key:"formUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.formUpdateTime)}},{title:"操作",key:"formId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistwebformcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-webform"==this.activeTabName&&(this.searchCondition.formModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewTabWindow(e)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewTabWindow(t)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)},previewWebForm:function(){ListPageUtility.IViewTableMareSureSelectedOne(this.selectionRows,this).then(function(e){var t=e[0][this.idFieldName],i=BaseUtility.BuildView(this.acInterface.previewWebFormUrl,{FormId:t,OperationType:"add",RecordId:StringUtility.Guid()});DialogUtility.OpenNewTabWindow(i)})},copy:function(){ListPageUtility.IViewTableMareSureSelectedOne(this.selectionRows,this).then(function(e){var t=e[0][this.idFieldName];AjaxUtility.Post(this.acInterface.copyForm,{formId:t},function(e){e.success&&DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,function(){this.reloadData()},this)},this)})}},template:'<div class="module-list-wrap">\n                    <div id="list-button-wrap" class="list-button-outer-wrap">\n                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>\n                        <div class="list-button-inner-wrap">\n                            <ButtonGroup>\n                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>\n                                <i-button type="primary" @click="copy()" icon="md-albums">复制</i-button>\n                                <i-button type="primary" @click="previewWebForm()"  icon="md-pricetag">预览</i-button>\n                                <i-button type="primary" disabled icon="md-add">引入URL </i-button>\n                                <i-button type="primary" disabled icon="md-bookmarks">历史版本</i-button>\n                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>\n                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>\n                            </ButtonGroup>\n                        </div>\n                         <div style="float: right;width: 200px;margin-right: 10px;">\n                            <i-input search class="input_border_bottom" v-model="searchText">\n                            </i-input>\n                        </div>                        <div style="clear: both"></div>\n                    </div>\n                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                             class="iv-list-table" :highlight-row="true"\n                             @on-selection-change="selectionChange"></i-table>\n                </div>'}),Vue.component("module-list-weblist-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/List/ListDesign.html",reloadData:"/Rest/Builder/List/GetListDataForModule",delete:"/Rest/Builder/List/Delete",move:"/Rest/Builder/List/Move",copyList:"/Rest/Builder/List/CopyList"},idFieldName:"listId",searchCondition:{listModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"expand",width:50,render:function(e,t){return e("weblist-expand-row",{props:{row:t.row}})}},{type:"selection",width:60,align:"center"},{title:"编号",key:"listCode",align:"center",width:80},{title:"列表名称",key:"listName",align:"left"},{title:"唯一名",key:"listSingleName",align:"center"},{title:"备注",key:"listDesc",align:"center"},{title:"编辑时间",key:"listUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.listUpdateTime)}},{title:"操作",key:"listId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistweblistcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-weblist"==this.activeTabName&&(this.searchCondition.listModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{},_expandedALL:!0}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewTabWindow(e)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewTabWindow(t)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)},copy:function(){ListPageUtility.IViewTableMareSureSelectedOne(this.selectionRows,this).then(function(e){var t=e[0][this.idFieldName];AjaxUtility.Post(this.acInterface.copyList,{listId:t},function(e){e.success&&DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,function(){this.reloadData()},this)},this)})}},template:'<div class="module-list-wrap">                    <div id="list-button-wrap" class="list-button-outer-wrap">                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>                        <div class="list-button-inner-wrap">                            <ButtonGroup>                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>                                <i-button type="primary" @click="copy()" icon="md-albums">复制</i-button>                                <i-button type="error" icon="md-pricetag">预览</i-button>                                <i-button type="error" icon="md-bookmarks">历史版本</i-button>                                <i-button type="error" icon="md-brush">复制ID</i-button>                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>                            </ButtonGroup>                        </div>                         <div style="float: right;width: 200px;margin-right: 10px;">                            <i-input search class="input_border_bottom" v-model="searchText">                            </i-input>                        </div>                        <div style="clear: both"></div>                    </div>                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"                             class="iv-list-table" :highlight-row="true"                             @on-selection-change="selectionChange"></i-table>                </div>'}),Vue.component("module-list-workflow-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/WorkFlow/Modeler/ModelerDesign.html",reloadData:"/Rest/Workflow/FlowModelIntegrated/GetModuleFlowListData",delete:"/Rest/Workflow/FlowModelIntegrated/Delete",move:"/Rest/Builder/FlowIntegrated/Move"},idFieldName:"modelId",searchCondition:{modelModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"modelCode",align:"center",width:80},{title:"模型名称",key:"modelName",align:"left",width:280},{title:"备注",key:"modelDesc",align:"center"},{title:"编辑时间",key:"modelCreateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.modelCreateTime)}},{title:"操作",key:"integratedId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistworkflowlistcomp=this,1200<PageStyleUtility.GetPageWidth()&&(ArrayUtility.Insert(this.columnsConfig,3,{title:"启动Key",key:"modelReKey",align:"center",width:180}),ArrayUtility.Insert(this.columnsConfig,5,{title:"编辑人",key:"modelCreator",align:"center",width:100}))},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-flow"==this.activeTabName&&(this.searchCondition.modelModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){this.addNewFromTemplate("addNewFromEmptyTemplate")},addNewFromTemplate:function(e){if(null!=this.moduleData){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId,templateName:e});DialogUtility.OpenNewTabWindow(t)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e,t){var i=BaseUtility.BuildView(this.acInterface.editView,{op:"update",modelReKey:t.row.modelReKey,moduleId:this.moduleData.moduleId});DialogUtility.OpenNewTabWindow(i)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)},copyText:function(e){DialogUtility.ToastInfoMessage(this,"未实现")}},template:'<div class="module-list-wrap">\n                    <div id="list-button-wrap" class="list-button-outer-wrap">\n                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>\n                        <div class="list-button-inner-wrap">\n                            <ButtonGroup>\n                                <i-button  type="success" @click="add()" icon="md-add">新增空白流程</i-button>\n                                <i-button type="error" icon="md-albums" disabled>复制</i-button>\n                                <i-button type="error" icon="md-bookmarks" disabled>历史版本</i-button>\n                                <i-button type="error" icon="md-arrow-up" disabled></i-button>\n                                <i-button type="error" icon="md-arrow-down" disabled></i-button>\n                            </ButtonGroup>\n                        </div>\n                        <div class="list-button-inner-wrap">\n                            <i-menu mode="horizontal" active-name="1-1" class="list-button-inner-menu" @on-select="addNewFromTemplate">\n                                <submenu name="1-1">\n                                    <template slot="title">从模板新建</template>\n                                    <menu-group title="基于模板新建流程">\n                                        <menu-item name="addNewFromEmptyTemplate">空白模板</menu-item>\n                                        <menu-item name="addNewFromAgentUserTemplate">经办人模式模板</menu-item>\n                                        <menu-item name="addNewFromSequenceTemplate">顺序流转模板</menu-item>\n                                        <menu-item name="addNewFromTestV1Template">测试流程模板V1</menu-item>\n                                    </menu-group>\n                                </submenu>\n                            </i-menu>\n                        </div>\n                        <div class="list-button-inner-wrap">\n                            <i-menu mode="horizontal" active-name="1-1" class="list-button-inner-menu" @on-select="copyText">\n                                <submenu name="1-1">\n                                    <template slot="title">复制内容</template>\n                                    <menu-group title="复制到黏贴版">\n                                        <menu-item name="copyId">复制ID</menu-item>\n                                        <menu-item name="copyPath">复制路径</menu-item>\n                                        <menu-item name="copyInfo">复制信息</menu-item>\n                                    </menu-group>\n                                </submenu>\n                            </i-menu>\n                        </div>\n                        <div style="clear: both"></div>\n                    </div>\n                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                             class="iv-list-table" :highlight-row="true"\n                             @on-selection-change="selectionChange"></i-table>\n                </div>'}),Vue.component("select-dblink-single-comp",{data:function(){return{acInterface:{getDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetFullDBLink",getSingleDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetDetailData"},jsEditorInstance:null,dbLinkTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"dbLinkName"},simpleData:{enable:!0,idKey:"dbId",pIdKey:"dbOrderNum",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;a.selectedDBLink(i),a.handleClose()}}},treeData:null,clickNode:null},selectedDBLinkData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDBLinkModelDialogWrap)},beginSelectDBLink:function(){var e=this.$refs.selectDBLinkModelDialogWrap;this.getDBLinkDataInitTree(),DialogUtility.DialogElemObj(e,{modal:!0,width:470,height:500,title:"选择数据库连接"})},getDBLinkDataInitTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDBLinkDataUrl,{},function(e){if(e.success){i.dbLinkTree.treeData=e.data;for(var t=0;t<i.dbLinkTree.treeData.length;t++)i.dbLinkTree.treeData[t].icon="/Themes/Png16X16/database_connect.png";i.$refs.dbLinkZTreeUL.setAttribute("id","select-dbLink-single-comp-"+StringUtility.Guid()),i.dbLinkTree.treeObj=$.fn.zTree.init($(i.$refs.dbLinkZTreeUL),i.dbLinkTree.treeSetting,i.dbLinkTree.treeData),i.dbLinkTree.treeObj.expandAll(!0),i.dbLinkTree.treeObj._host=i,fuzzySearchTreeObj(i.dbLinkTree.treeObj,i.$refs.txt_dbLink_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedDBLink:function(e){this.selectedDBLinkData=e,this.$emit("on-selected-dblink",e)},getSelectedDBLinkName:function(){return null==this.selectedDBLinkData?"请选择数据库连接":this.selectedDBLinkData.dbLinkName},setOldSelectedDBLink:function(e){var t=this;AjaxUtility.Post(this.acInterface.getSingleDBLinkDataUrl,{recordId:e},function(e){e.success?t.selectedDBLinkData=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},template:'<div>\n                    <div class="select-view-dblink-wrap">\n                        <div class="text">{{getSelectedDBLinkName()}}</div>\n                        <div class="value"></div>\n                        <div class="id"></div>\n                        <div class="button" @click="beginSelectDBLink()"><Icon type="ios-funnel" />&nbsp;选择</div>\n                    </div>\n                    <div ref="selectDBLinkModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                        <div class="c1-select-model-source-wrap">\n                            <i-input search class="input_border_bottom" ref="txt_dbLink_search_text" placeholder="请输入数据库连接名称">\n                            </i-input>\n                            <div class="inner-wrap div-custom-scroll">\n                                <ul ref="dbLinkZTreeUL" class="ztree"></ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("select-site-single-comp",{data:function(){return{acInterface:{getDBLinkDataUrl:"/Rest/Builder/SiteInfo/GetFullSite",getSingleDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetDetailData"},jsEditorInstance:null,siteTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"siteName"},simpleData:{enable:!0,idKey:"siteId",pIdKey:"siteOrderNum",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;a.selectedSite(i),a.handleClose()}}},treeData:null,clickNode:null},selectedSiteData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectSiteModelDialogWrap)},beginSelectSite:function(){var e=this.$refs.selectSiteModelDialogWrap;this.getSiteDataInitTree(),DialogUtility.DialogElemObj(e,{modal:!0,width:470,height:500,title:"选择站点"})},getSiteDataInitTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDBLinkDataUrl,{},function(e){if(e.success){i.siteTree.treeData=e.data;for(var t=0;t<i.siteTree.treeData.length;t++)i.siteTree.treeData[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/database_connect.png";i.$refs.siteZTreeUL.setAttribute("id","select-dbLink-single-comp-"+StringUtility.Guid()),i.siteTree.treeObj=$.fn.zTree.init($(i.$refs.siteZTreeUL),i.siteTree.treeSetting,i.siteTree.treeData),i.siteTree.treeObj.expandAll(!0),i.siteTree.treeObj._host=i,fuzzySearchTreeObj(i.siteTree.treeObj,i.$refs.txt_site_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedSite:function(e){this.selectedSiteData=e,this.$emit("on-selected-site",e)},getSelectedSiteName:function(){return null==this.selectedSiteData?"请选择站点":this.selectedSiteData.siteName},setOldSelectedSite:function(e){var t=this;AjaxUtility.Post(this.acInterface.getSingleDBLinkDataUrl,{recordId:e},function(e){e.success?t.selectedSiteData=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},template:'<div>\n                    <div class="select-view-dblink-wrap">\n                        <div class="text">{{getSelectedSiteName()}}</div>\n                        <div class="value"></div>\n                        <div class="id"></div>\n                        <div class="button" @click="beginSelectSite()"><Icon type="ios-funnel" />&nbsp;选择</div>\n                    </div>\n                    <div ref="selectSiteModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                        <div class="c1-select-model-source-wrap">\n                            <i-input search class="input_border_bottom" ref="txt_site_search_text" placeholder="请输入站点名称">\n                            </i-input>\n                            <div class="inner-wrap div-custom-scroll">\n                                <ul ref="siteZTreeUL" class="ztree"></ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("dataset-expand-row",{props:["row"],data:function(){return{}},mounted:function(){},methods:{},template:'<div>\n        <row>\n            <i-col span="1">\n                <div>应用于：</div>\n            </i-col>\n            <i-col span="11">\n                <div v-for="item in row.userForDescList" class="font-color-peter-river-v04">{{ item }}</div>\n            </i-col>\n            <i-col span="1">\n                <div>备注：</div>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.dsDesc }}</div>\n            </i-col>\n        </row>\n        <row style="margin-top: 8px">\n            <i-col span="1">\n                 <span>sql：</span>\n            </i-col>\n            <i-col span="23">\n                <span>【{{ row.dsSqlSelectText }}】</span>\n            </i-col>\n        </row>\n    </div>'}),Vue.component("instance-manager-expand-row",{props:["row"],data:function(){return{}},mounted:function(){},methods:{},template:'<div>\n        <row>\n            <i-col span="1">\n                <div>模型名称：</div>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.modelIntegratedEntity.modelName }}</div>\n            </i-col>\n            <i-col span="1">\n                <div>模型ID：</div>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.modelIntegratedEntity.modelId }}</div>\n            </i-col>\n        </row>\n        <row style="margin-top: 8px">\n            <i-col span="1">\n                <div>部署人：</div>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.modelIntegratedEntity.modelCreator }}</div>\n            </i-col>\n            <i-col span="1">\n                <div>部署时间：</div>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.modelIntegratedEntity.modelCreateTime }}</div>\n            </i-col>\n        </row>\n        <row style="margin-top: 8px">\n            <i-col span="1">\n                 <span>部署模型ID：</span>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.modelIntegratedEntity.modelReId }}</div>\n            </i-col>\n            <i-col span="1">\n                 <span>实例ID：</span>\n            </i-col>\n            <i-col span="11">\n                <div>{{ row.instId }}</div>\n            </i-col>\n        </row>\n        <row style="margin-top: 8px">\n            <i-col span="1">\n                 <span>当前活动任务：</span>\n            </i-col>\n            <i-col span="23">\n                 <div v-if="row.activeExecutionTaskEntityList.length==0">无</div>\n                 <div v-for="activeExecutionTask in row.activeExecutionTaskEntityList" style="border: solid 1px #85C1E9;padding: 4px">\n                    <div style="width: 120px;display: inline-block">接收人：{{ activeExecutionTask.extaskReceiverName }}</div>\n                    <div style="width: 200px;display: inline-block">环节名称：{{ activeExecutionTask.extaskCurNodeName }}</div>\n                    <div style="width: 120px;display: inline-block">发送人：{{ activeExecutionTask.extaskSenderName }}</div>\n                    <div style="width: 200px;display: inline-block">发送时间：{{ activeExecutionTask.extaskSendTime }}</div>\n                    <div style="width: 200px;display: inline-block">发送环节：{{ activeExecutionTask.extaskPreNodeName }}</div>\n                 </div>\n            </i-col>\n        </row>\n    </div>'}),Vue.component("weblist-expand-row",{props:["row"],data:function(){return{}},mounted:function(){},methods:{editDataSet:function(e){var t=BaseUtility.BuildView("/HTML/Builder/DataSet/DataSetEdit.html",{op:"update",groupId:e.dsGroupId,recordId:e.dsId});DialogUtility.Frame_OpenIframeWindow(window,DialogUtility.DialogId,t,{title:"数据集设计"},0)}},template:'<div>\n        <div v-for="dataSet in row.dataSetPOList">\n            <row>\n                <i-col span="1">\n                    <div>数据集：</div>\n                </i-col>\n                <i-col span="23">\n                    <div class="font-color-concrete-v10">{{ dataSet.dsCode }}【{{ dataSet.dsCaption }}】{{ dataSet.dsDesc }} <a @click="editDataSet(dataSet)">编辑</a></div>\n                </i-col>\n            </row>\n            <row style="margin-top: 8px">\n                <i-col span="1">\n                     <span>数据集sql：</span>\n                </i-col>\n                <i-col span="23">\n                    <div class="font-color-concrete-v10">{{ dataSet.dsSqlSelectText }}</div>\n                </i-col>\n            </row>\n            <row style="margin-top: 8px">\n                <i-col span="1">\n                     <span>数据集用于：</span>\n                </i-col>\n                <i-col span="23">\n                    <div  v-for="userForDesc in dataSet.userForDescList" class="font-color-concrete-v10">{{userForDesc}}</div>\n                </i-col>\n            </row>\n        </div>\n    </div>'});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbXAvZGF0YXNldC1zaW1wbGUtc2VsZWN0LWNvbXAuanMiLCJDb21wL3NpdGUtdGVtcGxhdGUtcmVsYXRpb24tY29tcC5qcyIsIkNvbXAvanMtZGVzaWduLWNvZGUtZnJhZ21lbnQuanMiLCJDb21wL3NxbC1nZW5lcmFsLWRlc2lnbi1jb21wLmpzIiwiQ29tcC90YWJsZS1yZWxhdGlvbi1jb250ZW50LWNvbXAuanMiLCJEaWFsb2cvc2VsZWN0LWRlZmF1bHQtdmFsdWUtZGlhbG9nLmpzIiwiRGlhbG9nL3NlbGVjdC1zaW5nbGUtdGFibGUtZGlhbG9nLmpzIiwiRGlhbG9nL3NlbGVjdC1zaW5nbGUtd2ViZm9ybS1kaWFsb2cuanMiLCJEaWFsb2cvc2VsZWN0LXZhbGlkYXRlLXJ1bGUtZGlhbG9nLmpzIiwiRGlhbG9nL3RhYmxlLXJlbGF0aW9uLWNvbm5lY3QtdHdvLXRhYmxlLWRpYWxvZy5qcyIsIkhUTUxEZXNpZ24vZGItdGFibGUtcmVsYXRpb24tY29tcC5qcyIsIkhUTUxEZXNpZ24vZGVzaWduLWh0bWwtZWxlbS1saXN0LmpzIiwiSFRNTERlc2lnbi9mZC1jb250cm9sLWJhc2UtaW5mby5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1iaW5kLXRvLmpzIiwiSFRNTERlc2lnbi9mZC1jb250cm9sLWRhdGFzb3VyY2UuanMiLCJIVE1MRGVzaWduL2ZkLWNvbnRyb2wtZmllbGQtYW5kLWFwaS5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1tdWx0aWxldmVsLmpzIiwiSFRNTERlc2lnbi9mZC1jb250cm9sLXNlbGVjdC1iaW5kLXRvLXNpbmdsZS1maWVsZC1kaWFsb2cuanMiLCJIVE1MRGVzaWduL2lubmVyLWZvcm0tYnV0dG9uLWxpc3QtY29tcC5qcyIsIkhUTUxEZXNpZ24vbGlzdC1zZWFyY2gtY29udHJvbC1iaW5kLXRvLWNvbXAuanMiLCJIVE1MRGVzaWduL2xpc3QtdGFibGUtbGFiZWwtYmluZC10by1jb21wLmpzIiwiTW9kdWxlL21vZHVsZS1saXN0LXdlYmZvcm0tY29tcC5qcyIsIk1vZHVsZS9tb2R1bGUtbGlzdC13ZWJsaXN0LWNvbXAuanMiLCJNb2R1bGUvbW9kdWxlLWxpc3Qtd29ya2Zsb3ctY29tcC5qcyIsIlNlbGVjdEJ1dHRvbi9zZWxlY3QtZGJsaW5rLXNpbmdsZS1jb21wLmpzIiwiU2VsZWN0QnV0dG9uL3NlbGVjdC1zaXRlLXNpbmdsZS1jb21wLmpzIiwiVGFibGVFeHBhbmRSb3cvZGF0YXNldC1leHBhbmQtcm93LmpzIiwiVGFibGVFeHBhbmRSb3cvaW5zdGFuY2UtbWFuYWdlci1leHBhbmQtcm93LmpzIiwiVGFibGVFeHBhbmRSb3cvd2VibGlzdC1leHBhbmQtcm93LmpzIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJWdWUiLCJjb21wb25lbnQiLCJkYXRhIiwiX3NlbGYiLCJ0aGlzIiwiYWNJbnRlcmZhY2UiLCJnZXREYXRhU2V0RGF0YSIsImRhdGFTZXRUcmVlIiwidHJlZU9iaiIsInRyZWVTZXR0aW5nIiwidmlldyIsImRibENsaWNrRXhwYW5kIiwic2hvd0xpbmUiLCJmb250Q3NzIiwiY29sb3IiLCJmb250LXdlaWdodCIsImNoZWNrIiwiZW5hYmxlIiwibm9jaGVja0luaGVyaXQiLCJjaGtTdHlsZSIsInJhZGlvVHlwZSIsIm5hbWUiLCJzaW1wbGVEYXRhIiwiaWRLZXkiLCJwSWRLZXkiLCJyb290UElkIiwiY2FsbGJhY2siLCJvbkNsaWNrIiwiZXZlbnQiLCJ0cmVlSWQiLCJ0cmVlTm9kZSIsIm5vZGVUeXBlTmFtZSIsInNlbGVjdGVkTm9kZSIsInRyZWVEYXRhIiwic2VsZWN0ZWRUYWJsZU5hbWUiLCJtb3VudGVkIiwiYmluZERhdGFTZXRUcmVlIiwibWV0aG9kcyIsIkFqYXhVdGlsaXR5IiwiUG9zdCIsInJlc3VsdCIsInN1Y2Nlc3MiLCJsZW5ndGgiLCJpIiwiaWNvbiIsIiQiLCJmbiIsInpUcmVlIiwiaW5pdCIsImV4cGFuZEFsbCIsImZ1enp5U2VhcmNoVHJlZU9iaiIsIiRyZWZzIiwidHh0X3NlYXJjaF90ZXh0IiwiaW5wdXQiLCJEaWFsb2dVdGlsaXR5IiwiQWxlcnQiLCJ3aW5kb3ciLCJEaWFsb2dBbGVydElkIiwibWVzc2FnZSIsIiRlbWl0IiwidGVtcGxhdGUiLCJqc0VkaXRvckluc3RhbmNlIiwic2V0SlNFZGl0b3JJbnN0YW5jZSIsImdldEpzRWRpdG9ySW5zdCIsImluc2VydEpzIiwianMiLCJkb2MiLCJnZXREb2MiLCJjdXJzb3IiLCJnZXRDdXJzb3IiLCJyZXBsYWNlUmFuZ2UiLCJmb3JtYXRKUyIsIkNvZGVNaXJyb3IiLCJjb21tYW5kcyIsInJhbmdlIiwiZnJvbSIsInRvIiwiYXV0b0Zvcm1hdFJhbmdlIiwiYWxlcnREZXNjIiwicmVmU2NyaXB0IiwiY2FsbFNlcnZpY2VNZXRob2QiLCJwcm9wcyIsImVkaXRWaWV3IiwiZGlhZ3JhbU9iaiIsInJlbGF0aW9uQ29udGVudE91dGVyV3JhcCIsImNzcyIsIlBhZ2VTdHlsZVV0aWxpdHkiLCJHZXRQYWdlSGVpZ2h0IiwiYWRkRW1wdHlUZW1wbGF0ZUV2ZW50IiwiZSIsImFkb3JubWVudCIsInBhcnQiLCJkaWFncmFtIiwic3RhcnRUcmFuc2FjdGlvbiIsImZyb21Ob2RlIiwiYWRvcm5lZFBhcnQiLCJmcm9tRGF0YSIsInRvRGF0YSIsInRleHQiLCJwIiwibG9jYXRpb24iLCJjb3B5IiwieCIsImxvYyIsImdvIiwiUG9pbnQiLCJzdHJpbmdpZnkiLCJtb2RlbCIsImFkZE5vZGVEYXRhIiwibGlua2RhdGEiLCJnZXRLZXlGb3JOb2RlRGF0YSIsImFkZExpbmtEYXRhIiwibmV3bm9kZSIsImZpbmROb2RlRm9yRGF0YSIsInNlbGVjdCIsImNvbW1pdFRyYW5zYWN0aW9uIiwic2Nyb2xsVG9SZWN0IiwiYWN0dWFsQm91bmRzIiwiYmVnaW5FZGl0VGVtcGxhdGVFdmVudCIsInVybCIsIkJhc2VVdGlsaXR5IiwiQnVpbGRWaWV3Iiwib3AiLCJ0ZW1wbGF0ZUlkIiwiaWQiLCJPcGVuTmV3VGFiV2luZG93IiwicmVtb3ZlVGVtcGxhdGVFdmVudCIsInJlbW92ZSIsImdldERpYWdyYW1JbnN0YW5jZSIsIkRpYWdyYW0iLCJhbmltYXRpb25NYW5hZ2VyLmluaXRpYWxBbmltYXRpb25TdHlsZSIsIkFuaW1hdGlvbk1hbmFnZXIiLCJOb25lIiwiSW5pdGlhbEFuaW1hdGlvblN0YXJ0aW5nIiwiYW5pbWF0aW9uIiwic3ViamVjdCIsImRlZmF1bHRBbmltYXRpb24iLCJlYXNpbmciLCJBbmltYXRpb24iLCJFYXNlT3V0RXhwbyIsImR1cmF0aW9uIiwiYWRkIiwidG9vbE1hbmFnZXIubW91c2VXaGVlbEJlaGF2aW9yIiwiVG9vbE1hbmFnZXIiLCJXaGVlbFpvb20iLCJjbGlja0NyZWF0aW5nVG9vbC5hcmNoZXR5cGVOb2RlRGF0YSIsInVuZG9NYW5hZ2VyLmlzRW5hYmxlZCIsInBvc2l0aW9uQ29tcHV0YXRpb24iLCJwdCIsIk1hdGgiLCJmbG9vciIsInkiLCJnZXREaWFncmFtTm9kZVRlbXBsYXRlIiwicm91bmRlZFJlY3RhbmdsZVBhcmFtcyIsInBhcmFtZXRlcjEiLCJzcG90MSIsIlNwb3QiLCJUb3BMZWZ0Iiwic3BvdDIiLCJCb3R0b21SaWdodCIsIk5vZGUiLCJsb2NhdGlvblNwb3QiLCJUb3AiLCJpc1NoYWRvd2VkIiwic2hhZG93Qmx1ciIsInNoYWRvd09mZnNldCIsInNoYWRvd0NvbG9yIiwiQmluZGluZyIsInBhcnNlIiwibWFrZVR3b1dheSIsIlNoYXBlIiwiZmlsbCIsInN0cm9rZVdpZHRoIiwic3Ryb2tlIiwicG9ydElkIiwiZnJvbUxpbmthYmxlIiwiZnJvbUxpbmthYmxlU2VsZk5vZGUiLCJmcm9tTGlua2FibGVEdXBsaWNhdGVzIiwidG9MaW5rYWJsZSIsInRvTGlua2FibGVTZWxmTm9kZSIsInRvTGlua2FibGVEdXBsaWNhdGVzIiwiUGFuZWwiLCJkZWZhdWx0QWxpZ25tZW50IiwiVGV4dEJsb2NrIiwiZm9udCIsIm1hcmdpbiIsImVkaXRhYmxlIiwiYWxpZ25tZW50IiwiQ2VudGVyIiwiZ2V0RGlhZ3JhbUFjdGl2ZU5vZGVUZW1wbGF0ZSIsIkFkb3JubWVudCIsIlBsYWNlaG9sZGVyIiwiVG9wUmlnaHQiLCJhbGlnbm1lbnRGb2N1cyIsImNsaWNrIiwidG9vbFRpcCIsIm1ha2VEaWFncmFtVG9vbHRpcCIsIndpZHRoIiwiaGVpZ2h0IiwiQm90dG9tQ2VudGVyIiwiZ2V0RGlhZ3JhbVN0YXJ0Tm9kZVRlbXBsYXRlIiwiZGVzaXJlZFNpemUiLCJTaXplIiwiZ2V0RGlhZ3JhbUVuZE5vZGVUZW1wbGF0ZSIsImdldERpYWdyYW1MaW5rVGVtcGxhdGUiLCJMaW5rIiwiY3VydmUiLCJCZXppZXIiLCJhZGp1c3RpbmciLCJTdHJldGNoIiwicmVzaGFwYWJsZSIsInJlbGlua2FibGVGcm9tIiwicmVsaW5rYWJsZVRvIiwidG9TaG9ydExlbmd0aCIsInByb2dyZXNzIiwidG9BcnJvdyIsIkJydXNoIiwiMCIsIjAuNyIsIjEiLCJ0ZXh0QWxpZ24iLCJ0b29sdGlwIiwiZ29TYW1wbGVzIiwiR3JhcGhPYmplY3QiLCJtYWtlIiwibm9kZVRlbXBsYXRlIiwic2VsZWN0aW9uQWRvcm5tZW50VGVtcGxhdGUiLCJub2RlVGVtcGxhdGVNYXAiLCJsaW5rVGVtcGxhdGUiLCJNb2RlbCIsImZyb21Kc29uIiwiY2xhc3MiLCJub2RlS2V5UHJvcGVydHkiLCJub2RlRGF0YUFycmF5IiwiY2F0ZWdvcnkiLCJkZXNjIiwidGV4dDIiLCJsaW5rRGF0YUFycmF5IiwiY3VydmluZXNzIiwiYWRkRGlhZ3JhbUxpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsIkpzb25VdGlsaXR5IiwiSnNvblRvU3RyaW5nIiwic2VsZWN0aW9uIiwiZmlyc3QiLCJ0b1N0cmluZyIsImxvY2F0aW9uT2JqZWN0Iiwic3FsVGV4dCIsInNlbGVjdGVkSXRlbVZhbHVlIiwic2VsZlRhYmxlRmllbGRzIiwicGFyZW50VGFibGVGaWVsZHMiLCJ3YXRjaCIsIm5ld1ZhbCIsInNxbENvZGVNaXJyb3IiLCJmcm9tVGV4dEFyZWEiLCJtb2RlIiwibGluZU51bWJlcnMiLCJsaW5lV3JhcHBpbmciLCJmb2xkR3V0dGVyIiwidGhlbWUiLCJzcWxEZXNpZ25lckhlaWdodCIsInNldFNpemUiLCJvbiIsImNNaXJyb3IiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic2V0QWJvdXRUYWJsZUZpZWxkcyIsImluc2VydEVudlRvRWRpdG9yIiwiY29kZSIsImluc2VydENvZGVBdEN1cnNvciIsImluc2VydEZpZWxkVG9FZGl0b3IiLCJzb3VyY2VUeXBlIiwic291cmNlRmllbGRzIiwiZmllbGROYW1lIiwidGFibGVOYW1lIiwiZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcyIsInNhdmVEaWFncmFtIiwiZ2V0U2luZ2xlRGlhZ3JhbURhdGEiLCJ0YWJsZVZpZXciLCJ0YWJsZVJlbGF0aW9uRGlhZ3JhbSIsImRpc3BsYXlEZXNjIiwiZm9ybWF0SnNvbiIsInJlY29yZElkIiwicmVsYXRpb24iLCJyZWxhdGlvbklkIiwiR2V0UGFnZVdpZHRoIiwiaW5pdERpYWdyYW0iLCJsb2FkUmVsYXRpb25EZXRhaWxEYXRhIiwibXlEaWFncmFtIiwiYWxsb3dEZWxldGUiLCJhbGxvd0NvcHkiLCJsYXlvdXQiLCJGb3JjZURpcmVjdGVkTGF5b3V0IiwiYmx1ZWdyYWQiLCIwLjUiLCJncmVlbmdyYWQiLCJyZWRncmFkIiwieWVsbG93Z3JhZCIsImxpZ2h0Z3JhZCIsIml0ZW1UZW1wbCIsInNlbGVjdGlvbkFkb3JuZWQiLCJyZXNpemFibGUiLCJsYXlvdXRDb25kaXRpb25zIiwiUGFydCIsIkxheW91dFN0YW5kYXJkIiwiTGF5b3V0Tm9kZVNpemVkIiwiZnJvbVNwb3QiLCJBbGxTaWRlcyIsInRvU3BvdCIsInYiLCJOYU4iLCJvZk9iamVjdCIsInN0cmV0Y2giLCJGaWxsIiwiUm93Q29sdW1uRGVmaW5pdGlvbiIsInJvdyIsInNpemluZyIsIk1hcmdpbiIsInBhZGRpbmciLCJMZWZ0IiwiSG9yaXpvbnRhbCIsIml0ZW1UZW1wbGF0ZSIsImxheWVyTmFtZSIsInJvdXRpbmciLCJBdm9pZHNOb2RlcyIsImNvcm5lciIsIkp1bXBPdmVyIiwic2VnbWVudEluZGV4Iiwic2VnbWVudE9mZnNldCIsInNlZ21lbnRPcmllbnRhdGlvbiIsIk9yaWVudFVwcmlnaHQiLCJpdGVtcyIsImlza2V5IiwiZmlndXJlIiwiR3JhcGhMaW5rc01vZGVsIiwiY29waWVzQXJyYXlzIiwiY29waWVzQXJyYXlPYmplY3RzIiwidG9UZXh0Iiwic2hvd1NlbGVjdFRhYmxlRGlhbG9nIiwic2VsZWN0U2luZ2xlVGFibGVEaWFsb2ciLCJiZWdpblNlbGVjdFRhYmxlIiwic2hvd1NlbGVjdEZpZWxkQ29ubmVjdERpYWxvZyIsImZyb21UYWJsZUlkIiwidG9UYWJsZUlkIiwiZWFjaCIsInRhYmxlSWQiLCJ0YWJsZVJlbGF0aW9uQ29ubmVjdFR3b1RhYmxlRGlhbG9nIiwiYmVnaW5TZWxlY3RDb25uZWN0IiwiQWxlcnRUZXh0IiwiYWRkVGFibGVUb0RpYWdyYW0iLCJ0YWJsZURhdGEiLCJ0YWJsZUlkcyIsInRhYmxlSXNFeGlzdEluRGlhZ3JhbSIsImFsbEZpZWxkcyIsInNpbmdsZVRhYmxlIiwiZXhLVkRhdGEiLCJUYWJsZXMiLCJhbGxGaWVsZHNTdHlsZSIsImRpc3BsYXlUZXh0IiwiZmllbGRDYXB0aW9uIiwicHVzaCIsInJlbmRlcmVyRmllbGRTdHlsZSIsIm1vZGVsTm9kZURhdGEiLCJmaWVsZHMiLCJ0YWJsZUNhcHRpb24iLCJ0YWJsZURpc3BsYXlUZXh0IiwiZGVsZXRlU2VsZWN0aW9uIiwiY29tbWFuZEhhbmRsZXIiLCJjYW5EZWxldGVTZWxlY3Rpb24iLCJjb25uZWN0U2VsZWN0aW9uTm9kZSIsImNvbm5lY3REYXRhIiwibGluZURhdGEiLCJsaW5lSWQiLCJTdHJpbmdVdGlsaXR5IiwiR3VpZCIsImZyb21UZXh0Iiwic2F2ZU1vZGVsVG9TZXJ2ZXIiLCJzZW5kRGF0YSIsInJlbGF0aW9uQ29udGVudCIsImdldERhdGFKc29uIiwicmVsYXRpb25EaWFncmFtSnNvbiIsImdldERpYWdyYW1Kc29uIiwiaXNPbmdvaW5nIiwiZG91YmxlQ2xpY2siLCJub2RlIiwiRnJhbWVfT3BlbklmcmFtZVdpbmRvdyIsIkRpYWxvZ0lkIiwidGl0bGUiLCJkYXRhSnNvbiIsIlN0cmluZ1RvSnNvbiIsInNldERhdGFKc29uIiwiY29udmVydFRvRnVsbEpzb24iLCJkcmF3T2JqSW5EaWFncmFtIiwiZnVsbEpzb24iLCJsaW5lTGlzdCIsInRhYmxlTGlzdCIsInNldFRpbWVvdXQiLCJzaW1wbGVKc29uIiwiZnVuYyIsIkNsb25lU2ltcGxlIiwiQXJyYXkiLCJhbGxUYWJsZXMiLCJzaW5nbGVUYWJsZURhdGEiLCJnZXRTaW5nbGVUYWJsZURhdGEiLCJzaW5nbGVUYWJsZUZpZWxkc0RhdGEiLCJnZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEiLCJmaWVsZFRhYmxlSWQiLCJmaWVsZCIsImZpZWxkSXNQayIsImdldEtleUZpZWxkQnJ1c2giLCJnZXROb3JGaWVsZEJydXNoIiwibm9kZXMiLCJhbGVydCIsImxpbmtzIiwianNvbiIsInRvSnNvbiIsImFsZXJ0RGF0YUpzb24iLCJBbGVydEpzb25Db2RlIiwiYWxlcnREaWFncmFtSnNvbiIsImRpYWdyYW1Kc29uIiwiZG93bkxvYWRNb2RlbFBORyIsIm1ha2VJbWFnZURhdGEiLCJiYWNrZ3JvdW5kIiwicmV0dXJuVHlwZSIsInNjYWxlIiwiYmxvYiIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImZpbGVuYW1lIiwiYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiaHJlZiIsImRvd25sb2FkIiwidW5kZWZpbmVkIiwibmF2aWdhdG9yIiwibXNTYXZlQmxvYiIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInJldm9rZU9iamVjdFVSTCIsInJlbW92ZUNoaWxkIiwiZ2V0R3JvdXBUcmVlRGF0YSIsInJlbG9hZExpc3REYXRhIiwic2VsZWN0VHlwZSIsInNlbGVjdFZhbHVlIiwic2VsZWN0VGV4dCIsImNvbnN0VmFsdWUiLCJsaXN0SGVpZ2h0IiwidHJlZSIsInRyZWVJZEZpZWxkTmFtZSIsInRyZWVTZWxlY3RlZE5vZGUiLCJhc3luYyIsInJvb3RJZCIsImdldFpUcmVlT2JqIiwiX2hvc3QiLCJ0cmVlTm9kZVNlbGVjdGVkIiwib25Bc3luY1N1Y2Nlc3MiLCJtc2ciLCJhcHBMaXN0IiwiY29sdW1uc0NvbmZpZyIsImFsaWduIiwicmVuZGVyIiwiaCIsInBhcmFtcyIsIkxpc3RQYWdlVXRpbGl0eSIsIklWaWV3VGFibGVJbm5lckJ1dHRvbiIsIlNlbGVjdGVkQnV0dG9uIiwic2VhcmNoQ29uZGl0aW9uIiwiZW52VmFyR3JvdXBJZCIsInR5cGUiLCJTZWFyY2hVdGlsaXR5IiwiU2VhcmNoRmllbGRUeXBlIiwiU3RyaW5nVHlwZSIsInBhZ2VUb3RhbCIsInBhZ2VTaXplIiwicGFnZU51bSIsImxvYWREYXRhIiwiYmVnaW5TZWxlY3QiLCJvbGREYXRhIiwiZWxlbSIsInNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ1dyYXAiLCJEaWFsb2dFbGVtT2JqIiwibW9kYWwiLCJmaW5kIiwiZ2V0U2VsZWN0SW5zdGFuY2VOYW1lIiwiR2V0VXJsUGFyYVZhbHVlIiwic2VsZWN0Q29tcGxldGUiLCJUeXBlIiwiVmFsdWUiLCJUZXh0IiwiaGFuZGxlQ2xvc2UiLCJjbGVhckNvbXBsZXRlIiwiQ2xvc2VEaWFsb2dFbGVtIiwic2VsZWN0aW9uQ2hhbmdlIiwiY2xlYXJTZWFyY2hDb25kaXRpb24iLCJyZWxvYWREYXRhIiwiSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2giLCJwYWdlQXBwT2JqIiwiaWRGaWVsZCIsImF1dG9TZWxlY3RlZE9sZFJvd3MiLCJzdWNjZXNzRnVuYyIsImxvYWREaWN0IiwiY3VzdFBhcmFzIiwic2VsZWN0ZWQiLCJlbnZWYXJWYWx1ZSIsImVudlZhclRleHQiLCJEZWZhdWx0VmFsdWVVdGlsaXR5IiwiZm9ybWF0VGV4dCIsImdldFRhYmxlRGF0YVVybCIsInRhYmxlVHJlZSIsInNlbGVjdGVkVGFibGUiLCJjbGlja05vZGUiLCJzZWxlY3RlZFRhYmxlRGF0YSIsInNlbGVjdFRhYmxlTW9kZWxEaWFsb2dXcmFwIiwiZ2V0VGFibGVEYXRhSW5pdFRyZWUiLCJ0YWJsZVpUcmVlVUwiLCJzZXRBdHRyaWJ1dGUiLCJ0eHRfdGFibGVfc2VhcmNoX3RleHQiLCJjb21wbGV0ZWQiLCJzZWxlY3RlZEZvcm0iLCJzZWxlY3RlZEZvcm1EYXRhIiwib2xkU2VsZWN0ZWRGb3JtSWQiLCJzZWxlY3RNb2RlbERpYWxvZ1dyYXAiLCJiZWdpblNlbGVjdEZvcm0iLCJmb3JtSWQiLCJnZXRGb3JtRGF0YUluaXRUcmVlIiwiZm9ybVpUcmVlVUwiLCJ0eHRfZm9ybV9zZWFyY2hfdGV4dCIsImdldE5vZGVCeVBhcmFtIiwic2VsZWN0Tm9kZSIsImZvcm1EYXRhIiwiZm9ybU1vZHVsZUlkIiwiYXR0cjQiLCJmb3JtTW9kdWxlTmFtZSIsImF0dHIzIiwiZm9ybU5hbWUiLCJhdHRyMSIsImZvcm1Db2RlIiwiYXR0cjIiLCJzZWxlY3RWYWxpZGF0ZVR5cGUiLCJydWxlUGFyYXMiLCJudW1MZW5ndGgiLCJkZWNpbWFsTGVuZ3RoIiwianNNZXRob2ROYW1lIiwicmVndWxhclRleHQiLCJyZWd1bGFyTXNnIiwiYWRkZWRWYWxpZGF0ZVJ1bGUiLCJ2YWxpZGF0ZUNvbHVtbnNDb25maWciLCJkZWxWYWxpZGF0ZSIsInNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ1dyYXAiLCJiaW5kT2xkU2VsZWN0ZWRWYWx1ZSIsIm9sZFNlbGVjdGVkVmFsdWUiLCJydWxlcyIsImFkZFZhbGlkYXRlUnVsZSIsInZhbGlkYXRlUGFyYXMiLCJuZXdWYWxpZGF0ZVJ1bGUiLCJ2YWxpZGF0ZUlkIiwiVGltZXN0YW1wIiwidmFsaWRhdGVUeXBlIiwic3BsaWNlIiwiZnJvbVRhYmxlRmllbGQiLCJmaWVsZERhdGEiLCJ0b1RhYmxlRmllbGQiLCJkaWFsb2dIZWlnaHQiLCJyZXN1bHREYXRhIiwiY29ubmVjdFRhYmxlRmllbGRNb2RlbERpYWxvZ1dyYXAiLCJnZXRGaWVsZHNBbmRCaW5kIiwiZnJvbVRhYmxlRmllbGRzIiwidG9UYWJsZUZpZWxkcyIsInNlbGVjdGVkRnJvbUZpZWxkIiwiaW5kZXgiLCJzZWxlY3RlZFRvRmllbGQiLCJnZXRUYWJsZXNEYXRhVXJsIiwiZ2V0VGFibGVGaWVsZHNVcmwiLCJyZWxhdGlvblRhYmxlVHJlZSIsInRhYmxlVHJlZVNldHRpbmciLCJfZGJ0YWJsZXJlbGF0aW9uY29tcCIsInNlbGVjdGVkUmVsYXRpb25UYWJsZU5vZGUiLCJ0YWJsZVRyZWVSb290RGF0YSIsInBhcmVudElkIiwiX25vZGVFeFR5cGUiLCJjdXJyZW50U2VsZWN0ZWROb2RlIiwicmVsYXRpb25UYWJsZUVkaXRvclZpZXciLCJpc1Nob3dUYWJsZUVkaXREZXRhaWwiLCJpc1N1YkVkaXRUciIsImlzTWFpbkVkaXRUciIsInNlbFBLRGF0YSIsInNlbFNlbGZLZXlEYXRhIiwic2VsRm9yZWlnbktleURhdGEiLCJlbXB0eUVkaXRvckRhdGEiLCJzaW5nbGVOYW1lIiwicGtGaWVsZE5hbWUiLCJzZWxmS2V5RmllbGROYW1lIiwib3V0ZXJLZXlGaWVsZE5hbWUiLCJyZWxhdGlvblR5cGUiLCJpc1NhdmUiLCJjb25kaXRpb24iLCJjdXJyZW50RWRpdG9yRGF0YSIsInNlbGVjdFRhYmxlVHJlZSIsIm9sZFNlbGVjdGVkREJMaW5rSWQiLCJkaXNhYmxlZERCTGluayIsImRiTGlua0VudGl0aWVzIiwidGFibGVUcmVlT2JqIiwiZGlhbG9nIiwiYWRkVGFibGVUb1JlbGF0aW9uVGFibGVUcmVlIiwidGFibGVUcmVlRGF0YSIsImFsbFRhYmxlVHJlZURhdGEiLCJ0ZW1wRGF0YVN0b3JlIiwidHJlZU5vZGVTZXR0aW5nIiwiTWFpblRhYmxlTm9kZUltZyIsIlN1YlRhYmxlTm9kZUltZyIsImdldFRhYmxlc0FuZEJpbmRPbGRTZWxlY3RlZCIsImhhbmRsZXIiLCJ2YWwiLCJvbGRWYWwiLCJyZXN1bHRJdGVtQ29weUVkaXRFbmFibGVWYWx1ZSIsImRlZXAiLCJ0b09iaiIsImZyb21PYmoiLCJnZXRUYWJsZUZpZWxkc0J5VGFibGVJZCIsIlBvc3RTeW5jIiwiZ2V0RW1wdHlSZXN1bHRJdGVtIiwiZ2V0RXhpc3RSZXN1bHRJdGVtIiwiZGJMaW5rRW50aXR5TGlzdCIsImJpbmRTZWxlY3RUYWJsZVRyZWUiLCJpc0dldENvb2tpZU9sZFNlbGVjdGVkIiwiQ29va2llVXRpbGl0eSIsIkdldENvb2tpZSIsImJpbmRUb1RyZWVEYXRhIiwib3V0ZXJJZCIsImNoYW5nZURCTGluayIsImRiTGlua0lkIiwiU2V0Q29va2llMU1vbnRoIiwiZ2V0TWFpblRhYmxlREJMaW5rSWQiLCJnZXRNYWluVGFibGVJZCIsImRlbGV0ZVNlbGVjdGVkUmVsYXRpb25UcmVlTm9kZSIsImlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUiLCJpc1BhcmVudCIsInNxbEdlbmVyYWxEZXNpZ25Db21wIiwicmVtb3ZlTm9kZSIsImJlZ2luU2VsZWN0VGFibGVUb1JlbGF0aW9uVGFibGUiLCJtYWluVGFibGVEQkxpbmtJZCIsImFwcGVuZE1haW5UYWJsZU5vZGVQcm9wIiwiYXBwZW5kU3ViVGFibGVOb2RlUHJvcCIsImJ1aWxkUmVsYXRpb25UYWJsZU5vZGUiLCJzb3VyY2VOb2RlIiwidHJlZU5vZGVJZCIsImdldE1haW5SZWxhdGlvblRhYmxlTm9kZSIsImdldE1haW5UYWJsZU5hbWUiLCJnZXRNYWluVGFibGVDYXB0aW9uIiwiaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSIsIm5ld05vZGUiLCJhZGROb2RlcyIsIm5ld1Jlc3VsdEl0ZW0iLCJ0YWJsZUNvZGUiLCJwYXJlbnROb2RlIiwiZ2V0UGFyZW50Tm9kZSIsImV4aXN0UmVzdWx0SXRlbSIsImdldFJlc3VsdERhdGEiLCJzZXJpYWxpemVSZWxhdGlvbiIsImlzRm9ybWF0IiwiZGVzZXJpYWxpemVSZWxhdGlvbiIsImpzb25TdHJpbmciLCJtYWluVGFibGVJZCIsIm1haW5UYWJsZU5hbWUiLCJtYWluVGFibGVDYXB0aW9uIiwicmVsYXRpb25EYXRhIiwidGVtcERhdGEiLCJ0cmVlTm9kZURhdGEiLCJhbGVydFNlcmlhbGl6ZVJlbGF0aW9uIiwiaW5wdXREZXNlcmlhbGl6ZVJlbGF0aW9uIiwiUHJvbXB0IiwiRGlhbG9nUHJvbXB0SWQiLCJiYXNlSW5mbyIsInNlcmlhbGl6ZSIsImNsYXNzTmFtZSIsInBsYWNlaG9sZGVyIiwiY3VzdFJlYWRvbmx5IiwiY3VzdERpc2FibGVkIiwic3RhdHVzIiwiZ3JvdXBOYW1lIiwiYmluZFRvRmllbGQiLCJmaWVsZERhdGFUeXBlIiwiZmllbGRMZW5ndGgiLCJ2YWxpZGF0ZVJ1bGVzIiwiZGVmYXVsdFZhbHVlIiwiZGVmYXVsdFR5cGUiLCJkZWZhdWx0VGV4dCIsImRlZmF1bHREaXNwbGF5VGV4dCIsImJpbmRUb1Byb3AiLCJuZXdWYWx1ZSIsImJpbmRUb0ZpZWxkUHJvcCIsImRlZmF1bHRWYWx1ZVByb3AiLCJJc051bGxPckVtcHR5IiwidmFsaWRhdGVSdWxlc1Byb3AiLCJzZXRDb21wbGV0ZWQiLCJzZWxlY3RCaW5kRmllbGRWaWV3IiwiX1NlbGVjdEJpbmRPYmoiLCJwYXJlbnQiLCJhcHBGb3JtIiwic2VsZWN0QmluZFRvU2luZ2xlRmllbGREaWFsb2dCZWdpbiIsImdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUiLCJzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlIiwic2VsZWN0RGVmYXVsdFZhbHVlVmlldyIsInNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ0JlZ2luIiwic2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZSIsInNlbGVjdFZhbGlkYXRlUnVsZVZpZXciLCJzZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dCZWdpbiIsImdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlIiwic2V0U2VsZWN0VmFsaWRhdGVSdWxlUmVzdWx0VmFsdWUiLCJnZXREREdyb3VwVHJlZURhdGEiLCJkZEdyb3VwVHJlZU9iaiIsImRkR3JvdXBUcmVlU2V0dGluZyIsInNlbGVjdGVkRGljdGlvbmFyeUdyb3VwIiwiZGljdEdyb3VwSWQiLCJkaWN0R3JvdXBUZXh0Iiwibm9ybWFsRGF0YVNvdXJjZSIsImRlZmF1bHRJc051bGwiLCJzcWxEYXRhU291cmNlIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZUlkIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZVRleHQiLCJyZXN0RGF0YVNvdXJjZSIsImludGVyZmFjZURhdGFTb3VyY2UiLCJzdGF0aWNEYXRhU291cmNlIiwiZGVmYXVsdFNlbGVjdGVkIiwibGF5b3V0RGlyZWN0aW9uIiwicm93TnVtIiwiZGlzcGxheVZhbHVlSW5UZXh0Iiwic2hvd1NlbGVjdERpY3Rpb25hcnkiLCJzaG93RWRpdFN0YXRpYyIsInNob3dQcm9wIiwiaW5pdERER3JvdXBUcmVlIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwib2xkVmFsdWUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJiZWdpblNlbGVjdERpY3Rpb25hcnlHcm91cCIsImFwaSIsImdldEFQSURhdGEiLCJhcGlUcmVlT2JqIiwiYXBpVHJlZVNldHRpbmciLCJhcGlTZWxlY3REYXRhIiwiYXBpRGF0YSIsImVkaXRUYWJsZU9iamVjdCIsImVkaXRUYWJsZUNvbmZpZyIsIlN0YXR1cyIsIkFkZEFmdGVyUm93RXZlbnQiLCJEYXRhRmllbGQiLCJUZW1wbGF0ZXMiLCJUaXRsZSIsIkJpbmROYW1lIiwiUmVuZGVyZXIiLCJUaXRsZUNlbGxDbGFzc05hbWUiLCJGb3JtYXRlciIsImdldEFQSVRleHQiLCJDbGllbnREYXRhU291cmNlIiwiV2lkdGgiLCJSb3dJZENyZWF0ZXIiLCJUYWJsZUNsYXNzIiwiUmVuZGVyZXJUbyIsIlRhYmxlSWQiLCJUYWJsZUF0dHJzIiwiY2VsbHBhZGRpbmciLCJjZWxsc3BhY2luZyIsImJvcmRlciIsImdldERhdGFTZXRNYWluVGFibGVGaWVsZHMiLCJIaWRkZW4iLCJvbGRGb3JtSWQiLCJyZWFkeSIsImRhdGFTZXRJZCIsImJpbmRUYWJsZUZpZWxkcyIsImJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZSIsImdldEpzb24iLCJDb21wbGV0ZWRFZGl0aW5nUm93IiwiYXBpcyIsIkdldFNlcmlhbGl6ZUpzb24iLCJzZXREYXRhIiwiYXBpT2xkRGF0YSIsImZpbGVkT2xkRGF0YSIsIkxvYWRKc29uRGF0YSIsImRpYWxvZ0VsZW0iLCJmaWVsZHNEYXRhIiwiRGVmYXVsdFZhbHVlIiwiY3JlYXRlIiwiRWRpdFRhYmxlIiwiSW5pdGlhbGl6YXRpb24iLCJSZW1vdmVBbGxSb3ciLCJhZGRGaWVsZCIsIkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlIiwicmVtb3ZlRmllbGQiLCJSZW1vdmVSb3ciLCJhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbiIsImNsb3NlQnV0dG9uRGF0YSIsImNhcHRpb24iLCJidXR0b25UeXBlIiwiZ3JvdXBUeXBlIiwidHh0X3NlYXJjaF9hcGlfdGV4dCIsImdldEFwaUNvbmZpZ0FuZEJpbmRUb1RhYmxlIiwiYWRkQVBJIiwicnVuVGltZSIsInJlbW92ZUFQSSIsImNsZWFyQVBJIiwibXVsdGlsZXZlbFByb3BzIiwibGV2ZWwyQmluZENvbnRyb2xJZCIsImdldFRhYmxlRmllbGRzRGF0YVVybCIsInNlbGVjdGVkRGF0YSIsImZpZWxkVGFibGUiLCJmaWx0ZXJBbGxGaWVsZHNUb1RhYmxlIiwib25EYmxDbGljayIsInRhYmxlSGVpZ2h0IiwiaXNTZWxlY3RlZFRvQmluZCIsIm9sZFJlbGF0aW9uRGF0YVN0cmluZyIsIm9sZEJpbmRGaWVsZERhdGEiLCJmZENvbnRyb2xTZWxlY3RCaW5kVG9TaW5nbGVGaWVsZERpYWxvZ1dyYXAiLCJnZXRBbGxUYWJsZXNGaWVsZHMiLCJyZXNldEZpZWxkVG9TZWxlY3RlZFN0YXR1cyIsIl9hbGxGaWVsZHMiLCJzZWxlY3RlZEZpZWxkIiwiZmllbGREYXRhTGVuZ3RoIiwiT3BlbmVyV2luZG93T2JqIiwiYnV0dG9ucyIsIkVkaXRCdXR0b24iLCJEZWxldGVCdXR0b24iLCJNb3ZlVXBCdXR0b24iLCJNb3ZlRG93bkJ1dHRvbiIsImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhIiwic2F2ZUFuZENsb3NlIiwiY3VzdFNlcnZlclJlc29sdmVNZXRob2QiLCJjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFBhcmEiLCJjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2QiLCJjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhIiwiY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2QiLCJjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmEiLCJjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2QiLCJjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RQYXJhIiwiZ2V0Rm9ybU1haW5UYWJsZUZpZWxkcyIsImlubmVySnNDbGllbnRCdXR0b25FZGl0RGF0YSIsImV4ZWNBbmRDbG9zZSIsImFjdGlvblR5cGUiLCJjYWxsSnNNZXRob2QiLCJ0YWJsZURhdGFKc29uIiwiZWRpdCIsImVkaXRJbm5lckZvcm1TYXZlQnV0dG9uIiwiZWRpdElubmVyRm9ybUpzQ2xpZW50QnV0dG9uIiwiZGVsIiwiQXJyYXlVdGlsaXR5IiwiRGVsZXRlIiwibW92ZVVwIiwiTW92ZVVwIiwibW92ZURvd24iLCJNb3ZlRG93biIsImFkZElubmVyRm9ybVNhdmVCdXR0b24iLCJlZGl0U2F2ZUJ1dHRvblN0YXR1YyIsInJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YSIsImlubmVyRm9ybVNhdmVCdXR0b25XcmFwIiwiQ2xvbmVTdHJpbmdpZnkiLCJzYXZlSW5uZXJTYXZlQnV0dG9uVG9MaXN0Iiwic2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSIsInNldCIsImFkZElubmVyRm9ybUpzQ2xpZW50QnV0dG9uIiwiZWRpdEpzQ2xpZW50QnV0dG9uU3RhdHVjIiwicmVzZXRJbm5lckpzQ2xpZW50QnV0dG9uRGF0YSIsImlubmVyRm9ybUpzQ2xpZW50QnV0dG9uV3JhcCIsInNhdmVJbm5lckpzQ2xpZW50QnV0dG9uVG9MaXN0IiwiYmluZFRvU2VhcmNoRmllbGQiLCJjb2x1bW5UaXRsZSIsImNvbHVtblRhYmxlTmFtZSIsImNvbHVtbk5hbWUiLCJjb2x1bW5DYXB0aW9uIiwiY29sdW1uRGF0YVR5cGVOYW1lIiwiY29sdW1uT3BlcmF0b3IiLCJzZWxlY3RDb2x1bW4iLCJiaW5kVG9TZWFyY2hGaWVsZFByb3AiLCJkYXRhU2V0UE8iLCJ0cmVlTm9kZUFycmF5Iiwicm9vdE5vZGUiLCJwaWQiLCJkc05hbWUiLCJkc0lkIiwibm9kZVR5cGUiLCJyZWxhdGVkVGFibGVWb0xpc3QiLCJydFRhYmxlQ2FwdGlvbiIsInJ0VGFibGVJZCIsImoiLCJ0YWJsZUZpZWxkUE9MaXN0Iiwic2luZ2xlTm9kZSIsImZpZWxkSWQiLCJ6VHJlZVVMIiwiZmllbGRQTyIsImdldERhdGEiLCJsaXN0RGVzaWduIiwiYmluZFByb3AiLCJ0YXJnZXRCdXR0b25JZCIsImNvbHVtbkFsaWduIiwiYmluZFByb3BQcm9wIiwiZGF0YVNldFZvIiwiY29sdW1uVm9MaXN0IiwiY29sdW1uSWQiLCJjb2x1bW5WbyIsInByZXZpZXdXZWJGb3JtVXJsIiwiZGVsZXRlIiwibW92ZSIsImNvcHlGb3JtIiwiaWRGaWVsZE5hbWUiLCJJVmlld1RhYmxlUmVuZGVyZXIiLCJUb0RhdGVZWVlZX01NX0REIiwiZm9ybVVwZGF0ZVRpbWUiLCJ0YWJsZURhdGFPcmlnaW5hbCIsInNlbGVjdGlvblJvd3MiLCJzZWFyY2hUZXh0IiwiX21vZHVsZWxpc3R3ZWJmb3JtY29tcCIsIm1vZHVsZURhdGEiLCJhY3RpdmVUYWJOYW1lIiwiZmlsdGVyVGFibGVEYXRhIiwiaW5kZXhPZiIsImdldE1vZHVsZU5hbWUiLCJtb2R1bGVUZXh0IiwibW9kdWxlSWQiLCJsaXN0IiwiSVZpZXdUYWJsZURlbGV0ZVJvdyIsInN0YXR1c0VuYWJsZSIsInN0YXR1c05hbWUiLCJJVmlld0NoYW5nZVNlcnZlclN0YXR1c0ZhY2UiLCJzdGF0dXNDaGFuZ2UiLCJJVmlld01vdmVGYWNlIiwicHJldmlld1dlYkZvcm0iLCJJVmlld1RhYmxlTWFyZVN1cmVTZWxlY3RlZE9uZSIsInRoZW4iLCJwcmV2aWV3VXJsIiwiRm9ybUlkIiwiT3BlcmF0aW9uVHlwZSIsIlJlY29yZElkIiwiY29weUxpc3QiLCJsaXN0TW9kdWxlSWQiLCJsaXN0VXBkYXRlVGltZSIsIl9tb2R1bGVsaXN0d2VibGlzdGNvbXAiLCJfZXhwYW5kZWRBTEwiLCJsaXN0SWQiLCJtb2RlbE1vZHVsZUlkIiwibW9kZWxDcmVhdGVUaW1lIiwiX21vZHVsZWxpc3R3b3JrZmxvd2xpc3Rjb21wIiwiSW5zZXJ0IiwiYWRkTmV3RnJvbVRlbXBsYXRlIiwidGVtcGxhdGVOYW1lIiwibW9kZWxSZUtleSIsImNvcHlUZXh0IiwiVG9hc3RJbmZvTWVzc2FnZSIsImdldERCTGlua0RhdGFVcmwiLCJnZXRTaW5nbGVEQkxpbmtEYXRhVXJsIiwiZGJMaW5rVHJlZSIsInNlbGVjdGVkREJMaW5rIiwic2VsZWN0ZWREQkxpbmtEYXRhIiwic2VsZWN0REJMaW5rTW9kZWxEaWFsb2dXcmFwIiwiYmVnaW5TZWxlY3REQkxpbmsiLCJnZXREQkxpbmtEYXRhSW5pdFRyZWUiLCJkYkxpbmtaVHJlZVVMIiwidHh0X2RiTGlua19zZWFyY2hfdGV4dCIsImRiTGlua0RhdGEiLCJnZXRTZWxlY3RlZERCTGlua05hbWUiLCJkYkxpbmtOYW1lIiwic2V0T2xkU2VsZWN0ZWREQkxpbmsiLCJzaXRlVHJlZSIsInNlbGVjdGVkU2l0ZSIsInNlbGVjdGVkU2l0ZURhdGEiLCJzZWxlY3RTaXRlTW9kZWxEaWFsb2dXcmFwIiwiYmVnaW5TZWxlY3RTaXRlIiwiZ2V0U2l0ZURhdGFJbml0VHJlZSIsIkdldFJvb3RQYXRoIiwic2l0ZVpUcmVlVUwiLCJ0eHRfc2l0ZV9zZWFyY2hfdGV4dCIsInNpdGVEYXRhIiwiZ2V0U2VsZWN0ZWRTaXRlTmFtZSIsInNpdGVOYW1lIiwic2V0T2xkU2VsZWN0ZWRTaXRlIiwiZWRpdERhdGFTZXQiLCJkYXRhU2V0IiwiZ3JvdXBJZCIsImRzR3JvdXBJZCJdLCJtYXBwaW5ncyI6IkFBQUEsYUNFQSxTQUFBQSxnQkFBQUMsRUFBQUMsRUFBQUMsR0FB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LGlCQUFBTyxFQUNBeDhCLEtBQUF1RCxNQUFBLG1CQUFBaTVCLElBRUFDLG9CQUFBLFdBQ0EsT0FBQSxNQUFBejhCLEtBQUFpOEIsaUJBQ0EsUUFFQWo4QixLQUFBaThCLGlCQUFBUyxVQUdBQyxtQkFBQSxTQUFBclYsR0FDQSxJQUFBdm5CLEVBQUFDLEtBRUFrQyxZQUFBQyxLQUFBbkMsS0FBQUMsWUFBQWk3Qix1QkFBQSxDQUNBM3BCLFNBQUErVixHQUNBLFNBQUFsbEIsR0FDQUEsRUFBQUMsUUFDQXRDLEVBQUFrOEIsaUJBQUE3NUIsRUFBQXRDLEtBRUFvRCxjQUFBQyxNQUFBQyxPQUFBRixjQUFBRyxjQUFBLEdBQUFqQixFQUFBa0IsUUFBQSxPQUVBdEQsUUFHQXdELFNBQUEscy9CQ3BIQTVELElBQUFDLFVBQUEscUJBQUEsQ0FDQWdGLE1BQUEsQ0FBQSxPQUNBL0UsS0FBQSxXQUNBLE1BQUEsSUFFQWlDLFFBQUEsYUFDQUUsUUFBQSxHQUNBdUIsU0FBQSxpdUJDUEE1RCxJQUFBQyxVQUFBLDhCQUFBLENBQ0FnRixNQUFBLENBQUEsT0FDQS9FLEtBQUEsV0FDQSxNQUFBLElBRUFpQyxRQUFBLGFBQ0FFLFFBQUEsR0FDQXVCLFNBQUEsKzVFQ1BBNUQsSUFBQUMsVUFBQSxxQkFBQSxDQUNBZ0YsTUFBQSxDQUFBLE9BQ0EvRSxLQUFBLFdBQ0EsTUFBQSxJQUVBaUMsUUFBQSxhQUNBRSxRQUFBLENBQ0EyNkIsWUFBQSxTQUFBQyxHQUNBLElBQUExMUIsRUFBQUMsWUFBQUMsVUFBQSx5Q0FBQSxDQUNBQyxHQUFBLFNBQ0F3MUIsUUFBQUQsRUFBQUUsVUFDQXhyQixTQUFBc3JCLEVBQUFqRyxPQUVBMXpCLGNBQUE0VSx1QkFBQTFVLE9BQUFGLGNBQUE2VSxTQUFBNVEsRUFBQSxDQUNBNlEsTUFBQSxTQUNBLEtBR0F4VSxTQUFBIiwiZmlsZSI6IkJ1aWxkZXJWdWVFWENvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZGF0YXNldC1zaW1wbGUtc2VsZWN0LWNvbXBcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0RGF0YVNldERhdGE6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU2V0L0RhdGFTZXRNYWluL0dldERhdGFTZXRzRm9yWlRyZWVOb2RlTGlzdFwiXG4gICAgICB9LFxuICAgICAgZGF0YVNldFRyZWU6IHtcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIGlmICh0cmVlTm9kZS5ub2RlVHlwZU5hbWUgPT0gXCJEYXRhU2V0XCIpIHtcbiAgICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZE5vZGUodHJlZU5vZGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0cmVlRGF0YTogbnVsbCxcbiAgICAgICAgc2VsZWN0ZWRUYWJsZU5hbWU6IFwi5pegXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuYmluZERhdGFTZXRUcmVlKCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBiaW5kRGF0YVNldFRyZWU6IGZ1bmN0aW9uIGJpbmREYXRhU2V0VHJlZSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXREYXRhU2V0RGF0YSwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgaWYgKHJlc3VsdC5kYXRhICE9IG51bGwgJiYgcmVzdWx0LmRhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiRGF0YVNldEdyb3VwXCIpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuZGF0YVtpXS5pY29uID0gXCIvVGhlbWVzL1BuZzE2WDE2L3BhY2thZ2UucG5nXCI7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IFwiL1RoZW1lcy9QbmcxNlgxNi9hcHBsaWNhdGlvbl92aWV3X2NvbHVtbnMucG5nXCI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfc2VsZi5kYXRhU2V0VHJlZS50cmVlRGF0YSA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgIF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNkYXRhU2V0WlRyZWVVTFwiKSwgX3NlbGYuZGF0YVNldFRyZWUudHJlZVNldHRpbmcsIF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuXG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVPYmosIF9zZWxmLiRyZWZzLnR4dF9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBzZWxlY3RlZE5vZGU6IGZ1bmN0aW9uIHNlbGVjdGVkTm9kZSh0cmVlTm9kZSkge1xuICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtZGF0YXNldCcsIHRyZWVOb2RlKTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtd3JhcFwiPlxcXG4gICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cImlucHV0X2JvcmRlcl9ib3R0b21cIiByZWY9XCJ0eHRfc2VhcmNoX3RleHRcIiBwbGFjZWhvbGRlcj1cIuivt+i+k+WFpeihqOWQjeaIluiAheagh+mimFwiPjwvaS1pbnB1dD5cXFxuICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XCJkYXRhU2V0WlRyZWVVTFwiIGNsYXNzPVwienRyZWVcIj48L3VsPlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cblZ1ZS5jb21wb25lbnQoXCJzaXRlLXRlbXBsYXRlLXJlbGF0aW9uLWNvbXBcIiwge1xuICBwcm9wczogW1wicmVsYXRpb25cIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML0J1aWxkZXIvU2l0ZS9UZW1wbGF0ZS9UZW1wbGF0ZURlc2lnbi5odG1sXCJcbiAgICAgIH0sXG4gICAgICBkaWFncmFtT2JqOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICAkKHRoaXMuJHJlZnMucmVsYXRpb25Db250ZW50T3V0ZXJXcmFwKS5jc3MoXCJoZWlnaHRcIiwgUGFnZVN0eWxlVXRpbGl0eS5HZXRQYWdlSGVpZ2h0KCkgLSA3NSk7XG4gICAgdGhpcy5pbml0KCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBhZGRFbXB0eVRlbXBsYXRlRXZlbnQ6IGZ1bmN0aW9uIGFkZEVtcHR5VGVtcGxhdGVFdmVudChlLCBvYmopIHtcbiAgICAgIHZhciBhZG9ybm1lbnQgPSBvYmoucGFydDtcbiAgICAgIHZhciBkaWFncmFtID0gZS5kaWFncmFtO1xuICAgICAgZGlhZ3JhbS5zdGFydFRyYW5zYWN0aW9uKFwiQWRkIFN0YXRlXCIpO1xuICAgICAgdmFyIGZyb21Ob2RlID0gYWRvcm5tZW50LmFkb3JuZWRQYXJ0O1xuICAgICAgdmFyIGZyb21EYXRhID0gZnJvbU5vZGUuZGF0YTtcbiAgICAgIHZhciB0b0RhdGEgPSB7XG4gICAgICAgIHRleHQ6IFwibmV3XCJcbiAgICAgIH07XG4gICAgICB2YXIgcCA9IGZyb21Ob2RlLmxvY2F0aW9uLmNvcHkoKTtcbiAgICAgIHAueCArPSAyMDA7XG4gICAgICB0b0RhdGEubG9jID0gZ28uUG9pbnQuc3RyaW5naWZ5KHApO1xuICAgICAgdmFyIG1vZGVsID0gZGlhZ3JhbS5tb2RlbDtcbiAgICAgIG1vZGVsLmFkZE5vZGVEYXRhKHRvRGF0YSk7XG4gICAgICB2YXIgbGlua2RhdGEgPSB7XG4gICAgICAgIGZyb206IG1vZGVsLmdldEtleUZvck5vZGVEYXRhKGZyb21EYXRhKSxcbiAgICAgICAgdG86IG1vZGVsLmdldEtleUZvck5vZGVEYXRhKHRvRGF0YSksXG4gICAgICAgIHRleHQ6IFwidHJhbnNpdGlvblwiXG4gICAgICB9O1xuICAgICAgbW9kZWwuYWRkTGlua0RhdGEobGlua2RhdGEpO1xuICAgICAgdmFyIG5ld25vZGUgPSBkaWFncmFtLmZpbmROb2RlRm9yRGF0YSh0b0RhdGEpO1xuICAgICAgZGlhZ3JhbS5zZWxlY3QobmV3bm9kZSk7XG4gICAgICBkaWFncmFtLmNvbW1pdFRyYW5zYWN0aW9uKFwiQWRkIFN0YXRlXCIpO1xuICAgICAgZGlhZ3JhbS5zY3JvbGxUb1JlY3QobmV3bm9kZS5hY3R1YWxCb3VuZHMpO1xuICAgIH0sXG4gICAgYmVnaW5FZGl0VGVtcGxhdGVFdmVudDogZnVuY3Rpb24gYmVnaW5FZGl0VGVtcGxhdGVFdmVudChlLCBvYmopIHtcbiAgICAgIHZhciB1cmwgPSBCYXNlVXRpbGl0eS5CdWlsZFZpZXcodGhpcy5hY0ludGVyZmFjZS5lZGl0Vmlldywge1xuICAgICAgICBcIm9wXCI6IFwiZWRpdFwiLFxuICAgICAgICBcInRlbXBsYXRlSWRcIjogb2JqLnBhcnQuZGF0YS5pZFxuICAgICAgfSk7XG4gICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdUYWJXaW5kb3codXJsKTtcbiAgICB9LFxuICAgIHJlbW92ZVRlbXBsYXRlRXZlbnQ6IGZ1bmN0aW9uIHJlbW92ZVRlbXBsYXRlRXZlbnQoZSwgb2JqKSB7XG4gICAgICB0aGlzLmRpYWdyYW1PYmouc3RhcnRUcmFuc2FjdGlvbigpO1xuICAgICAgdmFyIGFkb3JubWVudCA9IG9iai5wYXJ0O1xuICAgICAgdmFyIGRpYWdyYW0gPSBlLmRpYWdyYW07XG4gICAgICB2YXIgZnJvbU5vZGUgPSBhZG9ybm1lbnQuYWRvcm5lZFBhcnQ7XG4gICAgICB0aGlzLmRpYWdyYW1PYmoucmVtb3ZlKGZyb21Ob2RlKTtcbiAgICAgIHRoaXMuZGlhZ3JhbU9iai5jb21taXRUcmFuc2FjdGlvbihcImRlbGV0ZWQgbm9kZVwiKTtcbiAgICB9LFxuICAgIGdldERpYWdyYW1JbnN0YW5jZTogZnVuY3Rpb24gZ2V0RGlhZ3JhbUluc3RhbmNlKCQpIHtcbiAgICAgIHJldHVybiAkKGdvLkRpYWdyYW0sIFwiZGl2U2l0ZVRlbXBsYXRlUmVsYXRpb25XcmFwXCIsIHtcbiAgICAgICAgXCJhbmltYXRpb25NYW5hZ2VyLmluaXRpYWxBbmltYXRpb25TdHlsZVwiOiBnby5BbmltYXRpb25NYW5hZ2VyLk5vbmUsXG4gICAgICAgIFwiSW5pdGlhbEFuaW1hdGlvblN0YXJ0aW5nXCI6IGZ1bmN0aW9uIEluaXRpYWxBbmltYXRpb25TdGFydGluZyhlKSB7XG4gICAgICAgICAgdmFyIGFuaW1hdGlvbiA9IGUuc3ViamVjdC5kZWZhdWx0QW5pbWF0aW9uO1xuICAgICAgICAgIGFuaW1hdGlvbi5lYXNpbmcgPSBnby5BbmltYXRpb24uRWFzZU91dEV4cG87XG4gICAgICAgICAgYW5pbWF0aW9uLmR1cmF0aW9uID0gOTAwO1xuICAgICAgICAgIGFuaW1hdGlvbi5hZGQoZS5kaWFncmFtLCAnc2NhbGUnLCAwLjEsIDEpO1xuICAgICAgICAgIGFuaW1hdGlvbi5hZGQoZS5kaWFncmFtLCAnb3BhY2l0eScsIDAsIDEpO1xuICAgICAgICB9LFxuICAgICAgICBcInRvb2xNYW5hZ2VyLm1vdXNlV2hlZWxCZWhhdmlvclwiOiBnby5Ub29sTWFuYWdlci5XaGVlbFpvb20sXG4gICAgICAgIFwiY2xpY2tDcmVhdGluZ1Rvb2wuYXJjaGV0eXBlTm9kZURhdGFcIjoge1xuICAgICAgICAgIHRleHQ6IFwibmV3IG5vZGVcIlxuICAgICAgICB9LFxuICAgICAgICBcInVuZG9NYW5hZ2VyLmlzRW5hYmxlZFwiOiB0cnVlLFxuICAgICAgICBwb3NpdGlvbkNvbXB1dGF0aW9uOiBmdW5jdGlvbiBwb3NpdGlvbkNvbXB1dGF0aW9uKGRpYWdyYW0sIHB0KSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBnby5Qb2ludChNYXRoLmZsb29yKHB0LngpLCBNYXRoLmZsb29yKHB0LnkpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXREaWFncmFtTm9kZVRlbXBsYXRlOiBmdW5jdGlvbiBnZXREaWFncmFtTm9kZVRlbXBsYXRlKCQpIHtcbiAgICAgIHZhciByb3VuZGVkUmVjdGFuZ2xlUGFyYW1zID0ge1xuICAgICAgICBwYXJhbWV0ZXIxOiAyLFxuICAgICAgICBzcG90MTogZ28uU3BvdC5Ub3BMZWZ0LFxuICAgICAgICBzcG90MjogZ28uU3BvdC5Cb3R0b21SaWdodFxuICAgICAgfTtcbiAgICAgIHJldHVybiAkKGdvLk5vZGUsIFwiQXV0b1wiLCB7XG4gICAgICAgIGxvY2F0aW9uU3BvdDogZ28uU3BvdC5Ub3AsXG4gICAgICAgIGlzU2hhZG93ZWQ6IHRydWUsXG4gICAgICAgIHNoYWRvd0JsdXI6IDEsXG4gICAgICAgIHNoYWRvd09mZnNldDogbmV3IGdvLlBvaW50KDAsIDEpLFxuICAgICAgICBzaGFkb3dDb2xvcjogXCJyZ2JhKDAsIDAsIDAsIC4xNClcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJsb2NhdGlvblwiLCBcImxvY1wiLCBnby5Qb2ludC5wYXJzZSkubWFrZVR3b1dheShnby5Qb2ludC5zdHJpbmdpZnkpLCAkKGdvLlNoYXBlLCBcIlJvdW5kZWRSZWN0YW5nbGVcIiwgcm91bmRlZFJlY3RhbmdsZVBhcmFtcywgX2RlZmluZVByb3BlcnR5KHtcbiAgICAgICAgbmFtZTogXCJTSEFQRVwiLFxuICAgICAgICBmaWxsOiBcIiNmZmZmZmZcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IDEsXG4gICAgICAgIHN0cm9rZTogbnVsbCxcbiAgICAgICAgcG9ydElkOiBcIlwiLFxuICAgICAgICBmcm9tTGlua2FibGU6IGZhbHNlLFxuICAgICAgICBmcm9tTGlua2FibGVTZWxmTm9kZTogdHJ1ZSxcbiAgICAgICAgZnJvbUxpbmthYmxlRHVwbGljYXRlczogdHJ1ZSxcbiAgICAgICAgdG9MaW5rYWJsZTogZmFsc2UsXG4gICAgICAgIHRvTGlua2FibGVTZWxmTm9kZTogdHJ1ZSxcbiAgICAgICAgdG9MaW5rYWJsZUR1cGxpY2F0ZXM6IHRydWUsXG4gICAgICAgIGN1cnNvcjogXCJwb2ludGVyXCJcbiAgICAgIH0sIFwic3Ryb2tlXCIsIFwiaHNsKDMwLCAxMDAlLCA1MCUpXCIpKSwgJChnby5QYW5lbCwgXCJWZXJ0aWNhbFwiLCB7XG4gICAgICAgIGRlZmF1bHRBbGlnbm1lbnQ6IGdvLlNwb3QuVG9wTGVmdFxuICAgICAgfSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgZm9udDogXCJib2xkIHNtYWxsLWNhcHMgMTFwdCBoZWx2ZXRpY2EsIGJvbGQgYXJpYWwsIHNhbnMtc2VyaWZcIixcbiAgICAgICAgbWFyZ2luOiA3LFxuICAgICAgICBzdHJva2U6IFwicmdiYSgwLCAwLCAwLCAuODcpXCIsXG4gICAgICAgIGVkaXRhYmxlOiBmYWxzZVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIpLm1ha2VUd29XYXkoKSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIGZvbnQ6IFwic21hbGwtY2FwcyAxMnB4IGhlbHZldGljYSwgYXJpYWwsIHNhbnMtc2VyaWZcIixcbiAgICAgICAgbWFyZ2luOiA3LFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuQ2VudGVyLFxuICAgICAgICBzdHJva2U6IFwicmdiYSgwLCAwLCAwLCAuODcpXCIsXG4gICAgICAgIGVkaXRhYmxlOiBmYWxzZVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwiaWRcIikubWFrZVR3b1dheSgpKSkpO1xuICAgIH0sXG4gICAgZ2V0RGlhZ3JhbUFjdGl2ZU5vZGVUZW1wbGF0ZTogZnVuY3Rpb24gZ2V0RGlhZ3JhbUFjdGl2ZU5vZGVUZW1wbGF0ZSgkKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICB2YXIgcm91bmRlZFJlY3RhbmdsZVBhcmFtcyA9IHtcbiAgICAgICAgcGFyYW1ldGVyMTogMixcbiAgICAgICAgc3BvdDE6IGdvLlNwb3QuVG9wTGVmdCxcbiAgICAgICAgc3BvdDI6IGdvLlNwb3QuQm90dG9tUmlnaHRcbiAgICAgIH07XG4gICAgICByZXR1cm4gJChnby5BZG9ybm1lbnQsIFwiU3BvdFwiLCAkKGdvLlBhbmVsLCBcIkF1dG9cIiwgJChnby5TaGFwZSwgXCJSb3VuZGVkUmVjdGFuZ2xlXCIsIHJvdW5kZWRSZWN0YW5nbGVQYXJhbXMsIHtcbiAgICAgICAgZmlsbDogbnVsbCxcbiAgICAgICAgc3Ryb2tlOiBcIiM3OTg2Y2JcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IDJcbiAgICAgIH0pLCAkKGdvLlBsYWNlaG9sZGVyKSksICQoZ28uUGFuZWwsIFwiSG9yaXpvbnRhbFwiLCB7XG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Ub3BSaWdodCxcbiAgICAgICAgYWxpZ25tZW50Rm9jdXM6IGdvLlNwb3QuVG9wTGVmdFxuICAgICAgfSwgJChcIkJ1dHRvblwiLCB7XG4gICAgICAgIGNsaWNrOiBfc2VsZi5hZGRFbXB0eVRlbXBsYXRlRXZlbnQsXG4gICAgICAgIHRvb2xUaXA6IF9zZWxmLm1ha2VEaWFncmFtVG9vbHRpcCgkLCBcIkFkZCBFeGNsdXNpdmVcIilcbiAgICAgIH0sICQoZ28uU2hhcGUsIFwiUGx1c0xpbmVcIiwge1xuICAgICAgICB3aWR0aDogMTIsXG4gICAgICAgIGhlaWdodDogMTIsXG4gICAgICAgIHN0cm9rZTogXCJoc2woMzAsIDEwMCUsIDUwJSlcIlxuICAgICAgfSkpLCAkKFwiQnV0dG9uXCIsIHtcbiAgICAgICAgY2xpY2s6IF9zZWxmLmJlZ2luRWRpdFRlbXBsYXRlRXZlbnRcbiAgICAgIH0sICQoZ28uU2hhcGUsIFwiR2VhclwiLCB7XG4gICAgICAgIHdpZHRoOiAxMixcbiAgICAgICAgaGVpZ2h0OiAxMixcbiAgICAgICAgZmlsbDogXCJoc2woMzAsIDEwMCUsIDUwJSlcIixcbiAgICAgICAgc3Ryb2tlOiBcImhzbCgzMCwgMTAwJSwgNTAlKVwiXG4gICAgICB9KSksICQoXCJCdXR0b25cIiwge1xuICAgICAgICBjbGljazogX3NlbGYucmVtb3ZlVGVtcGxhdGVFdmVudFxuICAgICAgfSwgJChnby5TaGFwZSwgXCJYTGluZVwiLCB7XG4gICAgICAgIHdpZHRoOiAxMixcbiAgICAgICAgaGVpZ2h0OiAxMixcbiAgICAgICAgc3Ryb2tlOiBcImhzbCgzMCwgMTAwJSwgNTAlKVwiXG4gICAgICB9KSkpLCAkKGdvLlBhbmVsLCBcIkF1dG9cIiwge1xuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuQm90dG9tQ2VudGVyLFxuICAgICAgICBhbGlnbm1lbnRGb2N1czogZ28uU3BvdC5Ub3BcbiAgICAgIH0sICQoZ28uU2hhcGUsIFwiUm91bmRlZFJlY3RhbmdsZVwiLCByb3VuZGVkUmVjdGFuZ2xlUGFyYW1zLCB7XG4gICAgICAgIGZpbGw6IG51bGwsXG4gICAgICAgIHN0cm9rZTogXCIjMmJmZmIzXCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxXG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgZm9udDogXCJzbWFsbC1jYXBzIDEycHggaGVsdmV0aWNhLCBhcmlhbCwgc2Fucy1zZXJpZlwiLFxuICAgICAgICBtYXJnaW46IDcsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Cb3R0b21DZW50ZXIsXG4gICAgICAgIGFsaWdubWVudEZvY3VzOiBnby5TcG90LlRvcCxcbiAgICAgICAgc3Ryb2tlOiBcInJnYmEoMCwgMCwgMCwgLjg3KVwiLFxuICAgICAgICBlZGl0YWJsZTogZmFsc2VcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcImRlc2NcIikpKSk7XG4gICAgfSxcbiAgICBnZXREaWFncmFtU3RhcnROb2RlVGVtcGxhdGU6IGZ1bmN0aW9uIGdldERpYWdyYW1TdGFydE5vZGVUZW1wbGF0ZSgkKSB7XG4gICAgICByZXR1cm4gJChnby5Ob2RlLCBcIlNwb3RcIiwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoNzUsIDc1KVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJsb2NhdGlvblwiLCBcImxvY1wiLCBnby5Qb2ludC5wYXJzZSkubWFrZVR3b1dheShnby5Qb2ludC5zdHJpbmdpZnkpLCAkKGdvLlNoYXBlLCBcIkNpcmNsZVwiLCB7XG4gICAgICAgIGZpbGw6IFwiIzUyY2U2MFwiLFxuICAgICAgICBzdHJva2U6IG51bGwsXG4gICAgICAgIHBvcnRJZDogXCJcIixcbiAgICAgICAgZnJvbUxpbmthYmxlOiBmYWxzZSxcbiAgICAgICAgZnJvbUxpbmthYmxlU2VsZk5vZGU6IHRydWUsXG4gICAgICAgIGZyb21MaW5rYWJsZUR1cGxpY2F0ZXM6IHRydWUsXG4gICAgICAgIHRvTGlua2FibGU6IGZhbHNlLFxuICAgICAgICB0b0xpbmthYmxlU2VsZk5vZGU6IHRydWUsXG4gICAgICAgIHRvTGlua2FibGVEdXBsaWNhdGVzOiB0cnVlLFxuICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiXG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIFwiU3RhcnRcIiwge1xuICAgICAgICBmb250OiBcImJvbGQgMTZwdCBoZWx2ZXRpY2EsIGJvbGQgYXJpYWwsIHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIndoaXRlc21va2VcIlxuICAgICAgfSkpO1xuICAgIH0sXG4gICAgZ2V0RGlhZ3JhbUVuZE5vZGVUZW1wbGF0ZTogZnVuY3Rpb24gZ2V0RGlhZ3JhbUVuZE5vZGVUZW1wbGF0ZSgkKSB7XG4gICAgICByZXR1cm4gJChnby5Ob2RlLCBcIlNwb3RcIiwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoNzUsIDc1KVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJsb2NhdGlvblwiLCBcImxvY1wiLCBnby5Qb2ludC5wYXJzZSkubWFrZVR3b1dheShnby5Qb2ludC5zdHJpbmdpZnkpLCAkKGdvLlNoYXBlLCBcIkNpcmNsZVwiLCB7XG4gICAgICAgIGZpbGw6IFwibWFyb29uXCIsXG4gICAgICAgIHN0cm9rZTogbnVsbCxcbiAgICAgICAgcG9ydElkOiBcIlwiLFxuICAgICAgICBmcm9tTGlua2FibGU6IGZhbHNlLFxuICAgICAgICBmcm9tTGlua2FibGVTZWxmTm9kZTogdHJ1ZSxcbiAgICAgICAgZnJvbUxpbmthYmxlRHVwbGljYXRlczogdHJ1ZSxcbiAgICAgICAgdG9MaW5rYWJsZTogZmFsc2UsXG4gICAgICAgIHRvTGlua2FibGVTZWxmTm9kZTogdHJ1ZSxcbiAgICAgICAgdG9MaW5rYWJsZUR1cGxpY2F0ZXM6IHRydWUsXG4gICAgICAgIGN1cnNvcjogXCJwb2ludGVyXCJcbiAgICAgIH0pLCAkKGdvLlNoYXBlLCBcIkNpcmNsZVwiLCB7XG4gICAgICAgIGZpbGw6IG51bGwsXG4gICAgICAgIGRlc2lyZWRTaXplOiBuZXcgZ28uU2l6ZSg2NSwgNjUpLFxuICAgICAgICBzdHJva2VXaWR0aDogMixcbiAgICAgICAgc3Ryb2tlOiBcIndoaXRlc21va2VcIlxuICAgICAgfSksICQoZ28uVGV4dEJsb2NrLCBcIkVuZFwiLCB7XG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNnB0IGhlbHZldGljYSwgYm9sZCBhcmlhbCwgc2Fucy1zZXJpZlwiLFxuICAgICAgICBzdHJva2U6IFwid2hpdGVzbW9rZVwiXG4gICAgICB9KSk7XG4gICAgfSxcbiAgICBnZXREaWFncmFtTGlua1RlbXBsYXRlOiBmdW5jdGlvbiBnZXREaWFncmFtTGlua1RlbXBsYXRlKCQpIHtcbiAgICAgIHJldHVybiAkKGdvLkxpbmssIHtcbiAgICAgICAgY3VydmU6IGdvLkxpbmsuQmV6aWVyLFxuICAgICAgICBhZGp1c3Rpbmc6IGdvLkxpbmsuU3RyZXRjaCxcbiAgICAgICAgcmVzaGFwYWJsZTogdHJ1ZSxcbiAgICAgICAgcmVsaW5rYWJsZUZyb206IHRydWUsXG4gICAgICAgIHJlbGlua2FibGVUbzogdHJ1ZSxcbiAgICAgICAgdG9TaG9ydExlbmd0aDogM1xuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJwb2ludHNcIikubWFrZVR3b1dheSgpLCBuZXcgZ28uQmluZGluZyhcImN1cnZpbmVzc1wiKSwgJChnby5TaGFwZSwge1xuICAgICAgICBzdHJva2VXaWR0aDogMS41XG4gICAgICB9LCBuZXcgZ28uQmluZGluZygnc3Ryb2tlJywgJ3Byb2dyZXNzJywgZnVuY3Rpb24gKHByb2dyZXNzKSB7XG4gICAgICAgIHJldHVybiBwcm9ncmVzcyA/IFwiIzUyY2U2MFwiIDogJ2JsYWNrJztcbiAgICAgIH0pLCBuZXcgZ28uQmluZGluZygnc3Ryb2tlV2lkdGgnLCAncHJvZ3Jlc3MnLCBmdW5jdGlvbiAocHJvZ3Jlc3MpIHtcbiAgICAgICAgcmV0dXJuIHByb2dyZXNzID8gMi41IDogMS41O1xuICAgICAgfSkpLCAkKGdvLlNoYXBlLCB7XG4gICAgICAgIHRvQXJyb3c6IFwic3RhbmRhcmRcIixcbiAgICAgICAgc3Ryb2tlOiBudWxsXG4gICAgICB9LCBuZXcgZ28uQmluZGluZygnZmlsbCcsICdwcm9ncmVzcycsIGZ1bmN0aW9uIChwcm9ncmVzcykge1xuICAgICAgICByZXR1cm4gcHJvZ3Jlc3MgPyBcIiM1MmNlNjBcIiA6ICdibGFjayc7XG4gICAgICB9KSksICQoZ28uUGFuZWwsIFwiQXV0b1wiLCAkKGdvLlNoYXBlLCB7XG4gICAgICAgIGZpbGw6ICQoZ28uQnJ1c2gsIFwiUmFkaWFsXCIsIHtcbiAgICAgICAgICAwOiBcInJnYigyNDUsIDI0NSwgMjQ1KVwiLFxuICAgICAgICAgIDAuNzogXCJyZ2IoMjQ1LCAyNDUsIDI0NSlcIixcbiAgICAgICAgICAxOiBcInJnYmEoMjQ1LCAyNDUsIDI0NSwgMClcIlxuICAgICAgICB9KSxcbiAgICAgICAgc3Ryb2tlOiBudWxsXG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIFwidHJhbnNpdGlvblwiLCB7XG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgZm9udDogXCI5cHQgaGVsdmV0aWNhLCBhcmlhbCwgc2Fucy1zZXJpZlwiLFxuICAgICAgICBtYXJnaW46IDQsXG4gICAgICAgIGVkaXRhYmxlOiB0cnVlXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIikubWFrZVR3b1dheSgpKSkpO1xuICAgIH0sXG4gICAgbWFrZURpYWdyYW1Ub29sdGlwOiBmdW5jdGlvbiBtYWtlRGlhZ3JhbVRvb2x0aXAoJCwgdG9vbHRpcCkge1xuICAgICAgcmV0dXJuICQoXCJUb29sVGlwXCIsICQoZ28uVGV4dEJsb2NrLCB0b29sdGlwKSk7XG4gICAgfSxcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgaWYgKHdpbmRvdy5nb1NhbXBsZXMpIGdvU2FtcGxlcygpO1xuICAgICAgdmFyICQgPSBnby5HcmFwaE9iamVjdC5tYWtlO1xuICAgICAgdGhpcy5kaWFncmFtT2JqID0gdGhpcy5nZXREaWFncmFtSW5zdGFuY2UoJCk7XG4gICAgICB0aGlzLmRpYWdyYW1PYmoubm9kZVRlbXBsYXRlID0gdGhpcy5nZXREaWFncmFtTm9kZVRlbXBsYXRlKCQpO1xuICAgICAgdGhpcy5kaWFncmFtT2JqLm5vZGVUZW1wbGF0ZS5zZWxlY3Rpb25BZG9ybm1lbnRUZW1wbGF0ZSA9IHRoaXMuZ2V0RGlhZ3JhbUFjdGl2ZU5vZGVUZW1wbGF0ZSgkKTtcbiAgICAgIHRoaXMuZGlhZ3JhbU9iai5ub2RlVGVtcGxhdGVNYXAuYWRkKFwiU3RhcnRcIiwgdGhpcy5nZXREaWFncmFtU3RhcnROb2RlVGVtcGxhdGUoJCkpO1xuICAgICAgdGhpcy5kaWFncmFtT2JqLm5vZGVUZW1wbGF0ZU1hcC5hZGQoXCJFbmRcIiwgdGhpcy5nZXREaWFncmFtRW5kTm9kZVRlbXBsYXRlKCQpKTtcbiAgICAgIHRoaXMuZGlhZ3JhbU9iai5saW5rVGVtcGxhdGUgPSB0aGlzLmdldERpYWdyYW1MaW5rVGVtcGxhdGUoJCk7XG4gICAgICB0aGlzLmRpYWdyYW1PYmoubW9kZWwgPSBnby5Nb2RlbC5mcm9tSnNvbih7XG4gICAgICAgIFwiY2xhc3NcIjogXCJnby5HcmFwaExpbmtzTW9kZWxcIixcbiAgICAgICAgXCJub2RlS2V5UHJvcGVydHlcIjogXCJpZFwiLFxuICAgICAgICBcIm5vZGVEYXRhQXJyYXlcIjogW3tcbiAgICAgICAgICBcImlkXCI6IC0zLFxuICAgICAgICAgIFwibG9jXCI6IFwiMTg1IC0xNThcIixcbiAgICAgICAgICBcImNhdGVnb3J5XCI6IFwiU3RhcnRcIixcbiAgICAgICAgICBcImRlc2NcIjogXCLpgqPmmK9cIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJpZFwiOiAtMSxcbiAgICAgICAgICBcImxvY1wiOiBcIi03MyAtMTUwXCIsXG4gICAgICAgICAgXCJjYXRlZ29yeVwiOiBcIlN0YXJ0XCIsXG4gICAgICAgICAgXCJkZXNjXCI6IFwi6YKj5pivXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiaWRcIjogMCxcbiAgICAgICAgICBcImxvY1wiOiBcIi0yNCAxMTZcIixcbiAgICAgICAgICBcInRleHRcIjogXCLmnIDnu4jlubvmg7NcIixcbiAgICAgICAgICBcInRleHQyXCI6IFwi5pyA57uI5bm75oOzMlwiLFxuICAgICAgICAgIFwiZGVzY1wiOiBcIumCo+aYr1wiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImlkXCI6IDEsXG4gICAgICAgICAgXCJsb2NcIjogXCIyNzMgOTRcIixcbiAgICAgICAgICBcInRleHRcIjogXCLpm6rkuK3mgo3liIDooYxcIixcbiAgICAgICAgICBcImRlc2NcIjogXCLpgqPmmK9cIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMDBBXCIsXG4gICAgICAgICAgXCJsb2NcIjogXCIzNTIgMjcwXCIsXG4gICAgICAgICAgXCJ0ZXh0XCI6IFwi6KW/6JeP5aSp6Lev5Y+o5Y+o5Y+oXCIsXG4gICAgICAgICAgXCJkZXNjXCI6IFwi6YKj5pivXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiaWRcIjogMyxcbiAgICAgICAgICBcImxvY1wiOiBcIjU5NSAtM1wiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIuWkp+S6mua5vuWPqOWPqOWPqFwiLFxuICAgICAgICAgIFwiZGVzY1wiOiBcIumCo+aYr1wiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImlkXCI6IDQsXG4gICAgICAgICAgXCJsb2NcIjogXCI4OTQgLTE5MFwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIlZpZXcgQ2FydFwiLFxuICAgICAgICAgIFwiZGVzY1wiOiBcIumCo+aYr1wiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImlkXCI6IDUsXG4gICAgICAgICAgXCJsb2NcIjogXCI4MjAgMjAyXCIsXG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiVXBkYXRlIENhcnRcIixcbiAgICAgICAgICBcImRlc2NcIjogXCLpgqPmmK9cIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJpZFwiOiA2LFxuICAgICAgICAgIFwibG9jXCI6IFwiMTA1MiA5MFwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIkNoZWNrb3V0XCIsXG4gICAgICAgICAgXCJkZXNjXCI6IFwi6YKj5pivXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiaWRcIjogLTIsXG4gICAgICAgICAgXCJsb2NcIjogXCIxMTI0IDI2M1wiLFxuICAgICAgICAgIFwiY2F0ZWdvcnlcIjogXCJFbmRcIixcbiAgICAgICAgICBcImRlc2NcIjogXCLpgqPmmK9cIlxuICAgICAgICB9XSxcbiAgICAgICAgXCJsaW5rRGF0YUFycmF5XCI6IFt7XG4gICAgICAgICAgXCJmcm9tXCI6IC0xLFxuICAgICAgICAgIFwidG9cIjogMCxcbiAgICAgICAgICBcInRleHRcIjogXCJWaXNpdCBvbmxpbmUgc3RvcmVcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJmcm9tXCI6IDAsXG4gICAgICAgICAgXCJ0b1wiOiAxLFxuICAgICAgICAgIFwicHJvZ3Jlc3NcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiQnJvd3NlXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiAwLFxuICAgICAgICAgIFwidG9cIjogXCIyMDAwQVwiLFxuICAgICAgICAgIFwicHJvZ3Jlc3NcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiVXNlIHNlYXJjaCBiYXJcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJmcm9tXCI6IDEsXG4gICAgICAgICAgXCJ0b1wiOiBcIjIwMDBBXCIsXG4gICAgICAgICAgXCJwcm9ncmVzc1wiOiBcInRydWVcIixcbiAgICAgICAgICBcInRleHRcIjogXCJVc2Ugc2VhcmNoIGJhclwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImZyb21cIjogXCIyMDAwQVwiLFxuICAgICAgICAgIFwidG9cIjogMyxcbiAgICAgICAgICBcInByb2dyZXNzXCI6IFwidHJ1ZVwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIkNsaWNrIGl0ZW1cIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJmcm9tXCI6IFwiMjAwMEFcIixcbiAgICAgICAgICBcInRvXCI6IFwiMjAwMEFcIixcbiAgICAgICAgICBcInRleHRcIjogXCJBbm90aGVyIHNlYXJjaFwiLFxuICAgICAgICAgIFwiY3VydmluZXNzXCI6IDIwXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImZyb21cIjogMSxcbiAgICAgICAgICBcInRvXCI6IDMsXG4gICAgICAgICAgXCJwcm9ncmVzc1wiOiBcInRydWVcIixcbiAgICAgICAgICBcInRleHRcIjogXCJDbGljayBpdGVtXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiAzLFxuICAgICAgICAgIFwidG9cIjogMCxcbiAgICAgICAgICBcInRleHRcIjogXCJOb3QgaW50ZXJlc3RlZFwiLFxuICAgICAgICAgIFwiY3VydmluZXNzXCI6IC0xMDBcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiAzLFxuICAgICAgICAgIFwidG9cIjogNCxcbiAgICAgICAgICBcInByb2dyZXNzXCI6IFwidHJ1ZVwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIkFkZCB0byBjYXJ0XCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiA0LFxuICAgICAgICAgIFwidG9cIjogMCxcbiAgICAgICAgICBcInRleHRcIjogXCJNb3JlIHNob3BwaW5nXCIsXG4gICAgICAgICAgXCJjdXJ2aW5lc3NcIjogLTE1MFxuICAgICAgICB9LCB7XG4gICAgICAgICAgXCJmcm9tXCI6IDQsXG4gICAgICAgICAgXCJ0b1wiOiA1LFxuICAgICAgICAgIFwidGV4dFwiOiBcIlVwZGF0ZSBuZWVkZWRcIixcbiAgICAgICAgICBcImN1cnZpbmVzc1wiOiAtNTBcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiA1LFxuICAgICAgICAgIFwidG9cIjogNCxcbiAgICAgICAgICBcInRleHRcIjogXCJVcGRhdGUgbWFkZVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBcImZyb21cIjogNCxcbiAgICAgICAgICBcInRvXCI6IDYsXG4gICAgICAgICAgXCJwcm9ncmVzc1wiOiBcInRydWVcIixcbiAgICAgICAgICBcInRleHRcIjogXCJQcm9jZWVkXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiA2LFxuICAgICAgICAgIFwidG9cIjogNSxcbiAgICAgICAgICBcInRleHRcIjogXCJVcGRhdGUgbmVlZGVkXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwiZnJvbVwiOiA2LFxuICAgICAgICAgIFwidG9cIjogLTIsXG4gICAgICAgICAgXCJwcm9ncmVzc1wiOiBcInRydWVcIixcbiAgICAgICAgICBcInRleHRcIjogXCJQdXJjaGFzZSBtYWRlXCJcbiAgICAgICAgfV1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5kaWFncmFtT2JqLmFkZERpYWdyYW1MaXN0ZW5lcihcIk9iamVjdFNpbmdsZUNsaWNrZWRcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIHBhcnQgPSBlLnN1YmplY3QucGFydDtcbiAgICAgICAgY29uc29sZS5sb2cocGFydCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZGlhZ3JhbU9iai5hZGREaWFncmFtTGlzdGVuZXIoXCJTZWxlY3Rpb25Nb3ZlZFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgc3ViamVjdCA9IGUuc3ViamVjdDtcbiAgICAgICAgY29uc29sZS5sb2coc3ViamVjdCk7XG4gICAgICAgIGNvbnNvbGUubG9nKEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyhlLmRpYWdyYW0ubW9kZWwubm9kZURhdGFBcnJheSkpO1xuICAgICAgICB2YXIgc2VsZWN0ZWROb2RlID0gZS5kaWFncmFtLnNlbGVjdGlvbi5maXJzdCgpO1xuICAgICAgICBjb25zb2xlLmxvZyhcInNlbGVjdGVkTm9kZVwiLCBzZWxlY3RlZE5vZGUpO1xuICAgICAgICBjb25zb2xlLmxvZyhcInNlbGVjdGVkTm9kZUtleVwiLCBzZWxlY3RlZE5vZGUua2V5KTtcbiAgICAgICAgY29uc29sZS5sb2coXCJzZWxlY3RlZE5vZGVcIiwgc2VsZWN0ZWROb2RlLmxvY2F0aW9uLnRvU3RyaW5nKCkpO1xuICAgICAgICBjb25zb2xlLmxvZyhcInNlbGVjdGVkTm9kZVwiLCBzZWxlY3RlZE5vZGUubG9jYXRpb24ueCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwic2VsZWN0ZWROb2RlXCIsIHNlbGVjdGVkTm9kZS5sb2NhdGlvbi55KTtcbiAgICAgICAgY29uc29sZS5sb2coXCJsb2NhdGlvbk9iamVjdFwiLCBzZWxlY3RlZE5vZGUubG9jYXRpb25PYmplY3QpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwicmVsYXRpb25Db250ZW50T3V0ZXJXcmFwXFxcIiBjbGFzcz1cXFwic2l0ZS10ZW1wbGF0ZS1yZWxhdGlvbi1jb250ZW50LW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2l0ZS10ZW1wbGF0ZS1yZWxhdGlvbi1jb250ZW50LXdyYXBcXFwiIGlkPVxcXCJkaXZTaXRlVGVtcGxhdGVSZWxhdGlvbldyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIFxcdTZBMjFcXHU3MjQ4XFx1NTE3M1xcdTdDRkJcXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJqcy1kZXNpZ24tY29kZS1mcmFnbWVudFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGpzRWRpdG9ySW5zdGFuY2U6IG51bGxcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBzZXRKU0VkaXRvckluc3RhbmNlOiBmdW5jdGlvbiBzZXRKU0VkaXRvckluc3RhbmNlKG9iaikge1xuICAgICAgdGhpcy5qc0VkaXRvckluc3RhbmNlID0gb2JqO1xuICAgIH0sXG4gICAgZ2V0SnNFZGl0b3JJbnN0OiBmdW5jdGlvbiBnZXRKc0VkaXRvckluc3QoKSB7XG4gICAgICByZXR1cm4gdGhpcy5qc0VkaXRvckluc3RhbmNlO1xuICAgIH0sXG4gICAgaW5zZXJ0SnM6IGZ1bmN0aW9uIGluc2VydEpzKGpzKSB7XG4gICAgICB2YXIgZG9jID0gdGhpcy5nZXRKc0VkaXRvckluc3QoKS5nZXREb2MoKTtcbiAgICAgIHZhciBjdXJzb3IgPSBkb2MuZ2V0Q3Vyc29yKCk7XG4gICAgICBkb2MucmVwbGFjZVJhbmdlKGpzLCBjdXJzb3IpO1xuICAgIH0sXG4gICAgZm9ybWF0SlM6IGZ1bmN0aW9uIGZvcm1hdEpTKCkge1xuICAgICAgQ29kZU1pcnJvci5jb21tYW5kc1tcInNlbGVjdEFsbFwiXSh0aGlzLmdldEpzRWRpdG9ySW5zdCgpKTtcbiAgICAgIHZhciByYW5nZSA9IHtcbiAgICAgICAgZnJvbTogdGhpcy5nZXRKc0VkaXRvckluc3QoKS5nZXRDdXJzb3IodHJ1ZSksXG4gICAgICAgIHRvOiB0aGlzLmdldEpzRWRpdG9ySW5zdCgpLmdldEN1cnNvcihmYWxzZSlcbiAgICAgIH07XG4gICAgICA7XG4gICAgICB0aGlzLmdldEpzRWRpdG9ySW5zdCgpLmF1dG9Gb3JtYXRSYW5nZShyYW5nZS5mcm9tLCByYW5nZS50byk7XG4gICAgfSxcbiAgICBhbGVydERlc2M6IGZ1bmN0aW9uIGFsZXJ0RGVzYygpIHt9LFxuICAgIHJlZlNjcmlwdDogZnVuY3Rpb24gcmVmU2NyaXB0KCkge1xuICAgICAgdmFyIGpzID0gXCI8c2NyaXB0IHR5cGU9XFxcInRleHQvamF2YXNjcmlwdFxcXCIgc3JjPVxcXCIke2NvbnRleHRQYXRofS9Kcy9Jc3N1ZXNVdGlsaXR5LmpzP3RzPSR7dGltZVN0YW1wfVxcXCI+PC9zY3JpcHQ+XCI7XG4gICAgICB0aGlzLmluc2VydEpzKGpzKTtcbiAgICB9LFxuICAgIGNhbGxTZXJ2aWNlTWV0aG9kOiBmdW5jdGlvbiBjYWxsU2VydmljZU1ldGhvZCgpIHt9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtd3JhcFwiPlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCIgQGNsaWNrPVwiZm9ybWF0SlNcIj7moLzlvI/ljJY8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuivtOaYjjE8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiIEBjbGljaz1cInJlZlNjcmlwdFwiPuW8leWFpeiEmuacrDwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCI+6I635Y+WVVJM5Y+C5pWwPC9kaXY+XFxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJqcy1jb2RlLWZyYWdtZW50LWl0ZW1cIj7osIPnlKjmnI3liqHmlrnms5U8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuWKoOi9veaVsOaNruWtl+WFuDwvZGl2PlxcXG4gICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic3FsLWdlbmVyYWwtZGVzaWduLWNvbXBcIiwge1xuICBwcm9wczogW1wic3FsRGVzaWduZXJIZWlnaHRcIiwgXCJ2YWx1ZVwiLCBcInNob3dGaWVsZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3FsVGV4dDogXCJcIixcbiAgICAgIHNlbGVjdGVkSXRlbVZhbHVlOiBcIuivtOaYjlwiLFxuICAgICAgc2VsZlRhYmxlRmllbGRzOiBbXSxcbiAgICAgIHBhcmVudFRhYmxlRmllbGRzOiBbXVxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgc3FsVGV4dDogZnVuY3Rpb24gc3FsVGV4dChuZXdWYWwpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbmV3VmFsKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShuZXdWYWwpIHtcbiAgICAgIHRoaXMuc3FsVGV4dCA9IG5ld1ZhbDtcbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5zcWxDb2RlTWlycm9yID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEoJChcIiNUZXh0QXJlYVNRTEVkaXRvclwiKVswXSwge1xuICAgICAgbW9kZTogXCJ0ZXh0L3gtc3FsXCIsXG4gICAgICBsaW5lTnVtYmVyczogdHJ1ZSxcbiAgICAgIGxpbmVXcmFwcGluZzogdHJ1ZSxcbiAgICAgIGZvbGRHdXR0ZXI6IHRydWUsXG4gICAgICB0aGVtZTogXCJtb25va2FpXCJcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLnNxbERlc2lnbmVySGVpZ2h0KTtcbiAgICB0aGlzLnNxbENvZGVNaXJyb3Iuc2V0U2l6ZShcIjEwMCVcIiwgdGhpcy5zcWxEZXNpZ25lckhlaWdodCk7XG5cbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgdGhpcy5zcWxDb2RlTWlycm9yLm9uKFwiY2hhbmdlXCIsIGZ1bmN0aW9uIChjTWlycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhjTWlycm9yLmdldFZhbHVlKCkpO1xuICAgICAgX3NlbGYuc3FsVGV4dCA9IGNNaXJyb3IuZ2V0VmFsdWUoKTtcbiAgICB9KTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldFZhbHVlOiBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIHRoaXMuc3FsQ29kZU1pcnJvci5nZXRWYWx1ZSgpO1xuICAgIH0sXG4gICAgc2V0VmFsdWU6IGZ1bmN0aW9uIHNldFZhbHVlKHZhbHVlKSB7XG4gICAgICB0aGlzLnNxbENvZGVNaXJyb3Iuc2V0VmFsdWUodmFsdWUpO1xuICAgIH0sXG4gICAgc2V0QWJvdXRUYWJsZUZpZWxkczogZnVuY3Rpb24gc2V0QWJvdXRUYWJsZUZpZWxkcyhzZWxmVGFibGVGaWVsZHMsIHBhcmVudFRhYmxlRmllbGRzKSB7XG4gICAgICB0aGlzLnNlbGZUYWJsZUZpZWxkcyA9IHNlbGZUYWJsZUZpZWxkcztcbiAgICAgIHRoaXMucGFyZW50VGFibGVGaWVsZHMgPSBwYXJlbnRUYWJsZUZpZWxkcztcbiAgICB9LFxuICAgIGluc2VydEVudlRvRWRpdG9yOiBmdW5jdGlvbiBpbnNlcnRFbnZUb0VkaXRvcihjb2RlKSB7XG4gICAgICB0aGlzLmluc2VydENvZGVBdEN1cnNvcihjb2RlKTtcbiAgICB9LFxuICAgIGluc2VydEZpZWxkVG9FZGl0b3I6IGZ1bmN0aW9uIGluc2VydEZpZWxkVG9FZGl0b3Ioc291cmNlVHlwZSwgZXZlbnQpIHtcbiAgICAgIHZhciBzb3VyY2VGaWVsZHMgPSBudWxsO1xuXG4gICAgICBpZiAoc291cmNlVHlwZSA9PSBcInNlbGZUYWJsZUZpZWxkc1wiKSB7XG4gICAgICAgIHNvdXJjZUZpZWxkcyA9IHRoaXMuc2VsZlRhYmxlRmllbGRzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc291cmNlRmllbGRzID0gdGhpcy5wYXJlbnRUYWJsZUZpZWxkcztcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2VGaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHNvdXJjZUZpZWxkc1tpXS5maWVsZE5hbWUgPT0gZXZlbnQpIHtcbiAgICAgICAgICB0aGlzLmluc2VydENvZGVBdEN1cnNvcihzb3VyY2VGaWVsZHNbaV0udGFibGVOYW1lICsgXCIuXCIgKyBzb3VyY2VGaWVsZHNbaV0uZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgaW5zZXJ0Q29kZUF0Q3Vyc29yOiBmdW5jdGlvbiBpbnNlcnRDb2RlQXRDdXJzb3IoY29kZSkge1xuICAgICAgdmFyIGRvYyA9IHRoaXMuc3FsQ29kZU1pcnJvci5nZXREb2MoKTtcbiAgICAgIHZhciBjdXJzb3IgPSBkb2MuZ2V0Q3Vyc29yKCk7XG4gICAgICBkb2MucmVwbGFjZVJhbmdlKGNvZGUsIGN1cnNvcik7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXY+XFxcbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9XCJUZXh0QXJlYVNRTEVkaXRvclwiPjwvdGV4dGFyZWE+XFxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwidGV4dC1hbGlnbjogcmlnaHQ7bWFyZ2luLXRvcDogOHB4XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbkdyb3VwIHNpemU9XCJzbWFsbFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEBjbGljaz1cImluc2VydEVudlRvRWRpdG9yKFxcJyN7QXBpVmFyLuW9k+WJjeeUqOaIt+aJgOWcqOe7hOe7h0lEfVxcJylcIj7nu4Tnu4dJZDwvQnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEBjbGljaz1cImluc2VydEVudlRvRWRpdG9yKFxcJyN7QXBpVmFyLuW9k+WJjeeUqOaIt+aJgOWcqOe7hOe7h+WQjeensH1cXCcpXCI+57uE57uH5ZCN56ewPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi3SUR9XFwnKVwiPueUqOaIt0lkPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi35ZCN56ewfVxcJylcIj7nlKjmiLflkI3np7A8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBAY2xpY2s9XCJpbnNlcnRFbnZUb0VkaXRvcihcXCcje0RhdGVUaW1lLuW5tOW5tOW5tOW5tC3mnIjmnIgt5pel5pelfVxcJylcIj55eXl5LU1NLWRkPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24+6K+05piOPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b25Hcm91cD5cXFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbi10b3A6IDhweFwiIHYtaWY9XCJzaG93RmllbGRcIj5cXFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZmxvYXQ6IGxlZnQ7bWFyZ2luOiA0cHggMTBweFwiPuacrOihqOWtl+autTwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogbGVmdFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XCLpu5jorqTkvb/nlKhJZOWtl+autVwiIHNpemU9XCJzbWFsbFwiIHN0eWxlPVwid2lkdGg6MTc1cHhcIiBAb24tY2hhbmdlPVwiaW5zZXJ0RmllbGRUb0VkaXRvcihcXCdzZWxmVGFibGVGaWVsZHNcXCcsJGV2ZW50KVwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHYtZm9yPVwiaXRlbSBpbiBzZWxmVGFibGVGaWVsZHNcIiA6dmFsdWU9XCJpdGVtLmZpZWxkTmFtZVwiIDprZXk9XCJpdGVtLmZpZWxkTmFtZVwiPnt7aXRlbS5maWVsZENhcHRpb259fTwvaS1vcHRpb24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZsb2F0OiBsZWZ0O21hcmdpbjogNHB4IDEwcHhcIj7niLbooajlrZfmrrU8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZmxvYXQ6IGxlZnRcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktc2VsZWN0IHBsYWNlaG9sZGVyPVwi6buY6K6k5L2/55SoSWTlrZfmrrVcIiBzaXplPVwic21hbGxcIiBzdHlsZT1cIndpZHRoOjE3N3B4XCIgQG9uLWNoYW5nZT1cImluc2VydEZpZWxkVG9FZGl0b3IoXFwncGFyZW50VGFibGVGaWVsZHNcXCcsJGV2ZW50KVwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHYtZm9yPVwiaXRlbSBpbiBwYXJlbnRUYWJsZUZpZWxkc1wiIDp2YWx1ZT1cIml0ZW0uZmllbGROYW1lXCIgOmtleT1cIml0ZW0uZmllbGROYW1lXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwidGFibGUtcmVsYXRpb24tY29udGVudC1jb21wXCIsIHtcbiAgcHJvcHM6IFtcInJlbGF0aW9uXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVzRmllbGRzQnlUYWJsZUlkc1wiLFxuICAgICAgICBzYXZlRGlhZ3JhbTogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL1RhYmxlUmVsYXRpb24vVGFibGVSZWxhdGlvbi9TYXZlRGlhZ3JhbVwiLFxuICAgICAgICBnZXRTaW5nbGVEaWFncmFtRGF0YTogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL1RhYmxlUmVsYXRpb24vVGFibGVSZWxhdGlvbi9HZXREZXRhaWxEYXRhXCIsXG4gICAgICAgIHRhYmxlVmlldzogXCIvSFRNTC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlRWRpdC5odG1sXCJcbiAgICAgIH0sXG4gICAgICB0YWJsZVJlbGF0aW9uRGlhZ3JhbTogbnVsbCxcbiAgICAgIGRpc3BsYXlEZXNjOiB0cnVlLFxuICAgICAgZm9ybWF0SnNvbjogbnVsbCxcbiAgICAgIHJlY29yZElkOiB0aGlzLnJlbGF0aW9uLnJlbGF0aW9uSWRcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgICQodGhpcy4kcmVmcy5yZWxhdGlvbkNvbnRlbnRPdXRlcldyYXApLmNzcyhcImhlaWdodFwiLCBQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VIZWlnaHQoKSAtIDc1KTtcblxuICAgIGlmIChQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VXaWR0aCgpIDwgMTAwMCkge1xuICAgICAgdGhpcy5kaXNwbGF5RGVzYyA9IGZhbHNlO1xuICAgICAgJChcIi50YWJsZS1yZWxhdGlvbi1vcC1idXR0b25zLW91dGVyLXdyYXBcIikuY3NzKFwid2lkdGhcIiwgXCIxMDAlXCIpO1xuICAgIH1cblxuICAgIHRoaXMuaW5pdERpYWdyYW0oKTtcbiAgICB0aGlzLmxvYWRSZWxhdGlvbkRldGFpbERhdGEoKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICBpZiAod2luZG93LmdvU2FtcGxlcykgZ29TYW1wbGVzKCk7XG4gICAgICB2YXIgJCA9IGdvLkdyYXBoT2JqZWN0Lm1ha2U7XG4gICAgICB2YXIgbXlEaWFncmFtID0gJChnby5EaWFncmFtLCBcInRhYmxlUmVsYXRpb25EaWFncmFtRGl2XCIsIHtcbiAgICAgICAgYWxsb3dEZWxldGU6IGZhbHNlLFxuICAgICAgICBhbGxvd0NvcHk6IGZhbHNlLFxuICAgICAgICBsYXlvdXQ6ICQoZ28uRm9yY2VEaXJlY3RlZExheW91dCksXG4gICAgICAgIFwidW5kb01hbmFnZXIuaXNFbmFibGVkXCI6IHRydWVcbiAgICAgIH0pO1xuICAgICAgdmFyIGJsdWVncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigxNTAsIDE1MCwgMjUwKVwiLFxuICAgICAgICAwLjU6IFwicmdiKDg2LCA4NiwgMTg2KVwiLFxuICAgICAgICAxOiBcInJnYig4NiwgODYsIDE4NilcIlxuICAgICAgfSk7XG4gICAgICB2YXIgZ3JlZW5ncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigxNTgsIDIwOSwgMTU5KVwiLFxuICAgICAgICAxOiBcInJnYig2NywgMTAxLCA1NilcIlxuICAgICAgfSk7XG4gICAgICB2YXIgcmVkZ3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjA2LCAxMDYsIDEwMClcIixcbiAgICAgICAgMTogXCJyZ2IoMTgwLCA1NiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIHllbGxvd2dyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDI1NCwgMjIxLCA1MClcIixcbiAgICAgICAgMTogXCJyZ2IoMjU0LCAxODIsIDUwKVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBsaWdodGdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDE6IFwiI0U2RTZGQVwiLFxuICAgICAgICAwOiBcIiNGRkZBRjBcIlxuICAgICAgfSk7XG4gICAgICB2YXIgaXRlbVRlbXBsID0gJChnby5QYW5lbCwgXCJIb3Jpem9udGFsXCIsICQoZ28uU2hhcGUsIHtcbiAgICAgICAgZGVzaXJlZFNpemU6IG5ldyBnby5TaXplKDEwLCAxMClcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwiZmlndXJlXCIsIFwiZmlndXJlXCIpLCBuZXcgZ28uQmluZGluZyhcImZpbGxcIiwgXCJjb2xvclwiKSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIHN0cm9rZTogXCIjMzMzMzMzXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwibmFtZVwiKSkpO1xuICAgICAgbXlEaWFncmFtLm5vZGVUZW1wbGF0ZSA9ICQoZ28uTm9kZSwgXCJBdXRvXCIsIHtcbiAgICAgICAgc2VsZWN0aW9uQWRvcm5lZDogdHJ1ZSxcbiAgICAgICAgcmVzaXphYmxlOiB0cnVlLFxuICAgICAgICBsYXlvdXRDb25kaXRpb25zOiBnby5QYXJ0LkxheW91dFN0YW5kYXJkICYgfmdvLlBhcnQuTGF5b3V0Tm9kZVNpemVkLFxuICAgICAgICBmcm9tU3BvdDogZ28uU3BvdC5BbGxTaWRlcyxcbiAgICAgICAgdG9TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICBpc1NoYWRvd2VkOiB0cnVlLFxuICAgICAgICBzaGFkb3dDb2xvcjogXCIjQzVDMUFBXCJcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwibG9jYXRpb25cIiwgXCJsb2NhdGlvblwiKS5tYWtlVHdvV2F5KCksIG5ldyBnby5CaW5kaW5nKFwiZGVzaXJlZFNpemVcIiwgXCJ2aXNpYmxlXCIsIGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIHJldHVybiBuZXcgZ28uU2l6ZShOYU4sIE5hTik7XG4gICAgICB9KS5vZk9iamVjdChcIkxJU1RcIiksICQoZ28uU2hhcGUsIFwiUmVjdGFuZ2xlXCIsIHtcbiAgICAgICAgZmlsbDogbGlnaHRncmFkLFxuICAgICAgICBzdHJva2U6IFwiIzc1Njg3NVwiLFxuICAgICAgICBzdHJva2VXaWR0aDogM1xuICAgICAgfSksICQoZ28uUGFuZWwsIFwiVGFibGVcIiwge1xuICAgICAgICBtYXJnaW46IDgsXG4gICAgICAgIHN0cmV0Y2g6IGdvLkdyYXBoT2JqZWN0LkZpbGxcbiAgICAgIH0sICQoZ28uUm93Q29sdW1uRGVmaW5pdGlvbiwge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIHNpemluZzogZ28uUm93Q29sdW1uRGVmaW5pdGlvbi5Ob25lXG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgcm93OiAwLFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuQ2VudGVyLFxuICAgICAgICBtYXJnaW46IG5ldyBnby5NYXJnaW4oMCwgMTQsIDAsIDIpLFxuICAgICAgICBmb250OiBcImJvbGQgMTZweCBzYW5zLXNlcmlmXCJcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcImtleVwiKSksICQoXCJQYW5lbEV4cGFuZGVyQnV0dG9uXCIsIFwiTElTVFwiLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgYWxpZ25tZW50OiBnby5TcG90LlRvcFJpZ2h0XG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJWZXJ0aWNhbFwiLCB7XG4gICAgICAgIG5hbWU6IFwiTElTVFwiLFxuICAgICAgICByb3c6IDEsXG4gICAgICAgIHBhZGRpbmc6IDMsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Ub3BMZWZ0LFxuICAgICAgICBkZWZhdWx0QWxpZ25tZW50OiBnby5TcG90LkxlZnQsXG4gICAgICAgIHN0cmV0Y2g6IGdvLkdyYXBoT2JqZWN0Lkhvcml6b250YWwsXG4gICAgICAgIGl0ZW1UZW1wbGF0ZTogaXRlbVRlbXBsXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcIml0ZW1BcnJheVwiLCBcIml0ZW1zXCIpKSkpO1xuICAgICAgbXlEaWFncmFtLmxpbmtUZW1wbGF0ZSA9ICQoZ28uTGluaywge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICBsYXllck5hbWU6IFwiRm9yZWdyb3VuZFwiLFxuICAgICAgICByZXNoYXBhYmxlOiB0cnVlLFxuICAgICAgICByb3V0aW5nOiBnby5MaW5rLkF2b2lkc05vZGVzLFxuICAgICAgICBjb3JuZXI6IDUsXG4gICAgICAgIGN1cnZlOiBnby5MaW5rLkp1bXBPdmVyXG4gICAgICB9LCAkKGdvLlNoYXBlLCB7XG4gICAgICAgIHN0cm9rZTogXCIjMzAzQjQ1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAyLjVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMxOTY3QjNcIixcbiAgICAgICAgc2VnbWVudEluZGV4OiAwLFxuICAgICAgICBzZWdtZW50T2Zmc2V0OiBuZXcgZ28uUG9pbnQoTmFOLCBOYU4pLFxuICAgICAgICBzZWdtZW50T3JpZW50YXRpb246IGdvLkxpbmsuT3JpZW50VXByaWdodFxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwidGV4dFwiKSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiLFxuICAgICAgICBzdHJva2U6IFwiIzE5NjdCM1wiLFxuICAgICAgICBzZWdtZW50SW5kZXg6IC0xLFxuICAgICAgICBzZWdtZW50T2Zmc2V0OiBuZXcgZ28uUG9pbnQoTmFOLCBOYU4pLFxuICAgICAgICBzZWdtZW50T3JpZW50YXRpb246IGdvLkxpbmsuT3JpZW50VXByaWdodFxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwidG9UZXh0XCIpKSk7XG4gICAgICB2YXIgbm9kZURhdGFBcnJheSA9IFt7XG4gICAgICAgIGtleTogXCJQcm9kdWN0c1wiLFxuICAgICAgICBpdGVtczogW3tcbiAgICAgICAgICBuYW1lOiBcIlByb2R1Y3RJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlByb2R1Y3ROYW1lXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJDdWJlMVwiLFxuICAgICAgICAgIGNvbG9yOiBibHVlZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJTdXBwbGllcklEXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiBcInB1cnBsZVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIkNhdGVnb3J5SURcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IFwicHVycGxlXCJcbiAgICAgICAgfV1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiBcIlN1cHBsaWVyc1wiLFxuICAgICAgICBpdGVtczogW3tcbiAgICAgICAgICBuYW1lOiBcIlN1cHBsaWVySURcIixcbiAgICAgICAgICBpc2tleTogdHJ1ZSxcbiAgICAgICAgICBmaWd1cmU6IFwiRGVjaXNpb25cIixcbiAgICAgICAgICBjb2xvcjogeWVsbG93Z3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJDb21wYW55TmFtZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQ29udGFjdE5hbWVcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkN1YmUxXCIsXG4gICAgICAgICAgY29sb3I6IGJsdWVncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIkFkZHJlc3NcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkN1YmUxXCIsXG4gICAgICAgICAgY29sb3I6IGJsdWVncmFkXG4gICAgICAgIH1dXG4gICAgICB9LCB7XG4gICAgICAgIGtleTogXCJDYXRlZ29yaWVzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIkNhdGVnb3J5TmFtZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiRGVzY3JpcHRpb25cIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkN1YmUxXCIsXG4gICAgICAgICAgY29sb3I6IGJsdWVncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlBpY3R1cmVcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIlRyaWFuZ2xlVXBcIixcbiAgICAgICAgICBjb2xvcjogcmVkZ3JhZFxuICAgICAgICB9XVxuICAgICAgfSwge1xuICAgICAgICBrZXk6IFwiT3JkZXIgRGV0YWlsc1wiLFxuICAgICAgICBpdGVtczogW3tcbiAgICAgICAgICBuYW1lOiBcIk9yZGVySURcIixcbiAgICAgICAgICBpc2tleTogdHJ1ZSxcbiAgICAgICAgICBmaWd1cmU6IFwiRGVjaXNpb25cIixcbiAgICAgICAgICBjb2xvcjogeWVsbG93Z3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJQcm9kdWN0SURcIixcbiAgICAgICAgICBpc2tleTogdHJ1ZSxcbiAgICAgICAgICBmaWd1cmU6IFwiRGVjaXNpb25cIixcbiAgICAgICAgICBjb2xvcjogeWVsbG93Z3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJVbml0UHJpY2VcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIk1hZ25ldGljRGF0YVwiLFxuICAgICAgICAgIGNvbG9yOiBncmVlbmdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiUXVhbnRpdHlcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIk1hZ25ldGljRGF0YVwiLFxuICAgICAgICAgIGNvbG9yOiBncmVlbmdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiRGlzY291bnRcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIk1hZ25ldGljRGF0YVwiLFxuICAgICAgICAgIGNvbG9yOiBncmVlbmdyYWRcbiAgICAgICAgfV1cbiAgICAgIH1dO1xuICAgICAgdmFyIGxpbmtEYXRhQXJyYXkgPSBbe1xuICAgICAgICBmcm9tOiBcIlByb2R1Y3RzXCIsXG4gICAgICAgIHRvOiBcIlN1cHBsaWVyc1wiLFxuICAgICAgICB0ZXh0OiBcIjAuLk5cIixcbiAgICAgICAgdG9UZXh0OiBcIjFcIlxuICAgICAgfSwge1xuICAgICAgICBmcm9tOiBcIlByb2R1Y3RzXCIsXG4gICAgICAgIHRvOiBcIkNhdGVnb3JpZXNcIixcbiAgICAgICAgdGV4dDogXCIwLi5OXCIsXG4gICAgICAgIHRvVGV4dDogXCIxXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZnJvbTogXCJPcmRlciBEZXRhaWxzXCIsXG4gICAgICAgIHRvOiBcIlByb2R1Y3RzXCIsXG4gICAgICAgIHRleHQ6IFwiMC4uTlwiLFxuICAgICAgICB0b1RleHQ6IFwiMVwiXG4gICAgICB9XTtcbiAgICAgIG15RGlhZ3JhbS5tb2RlbCA9ICQoZ28uR3JhcGhMaW5rc01vZGVsLCB7XG4gICAgICAgIGNvcGllc0FycmF5czogdHJ1ZSxcbiAgICAgICAgY29waWVzQXJyYXlPYmplY3RzOiB0cnVlLFxuICAgICAgICBub2RlRGF0YUFycmF5OiBub2RlRGF0YUFycmF5LFxuICAgICAgICBsaW5rRGF0YUFycmF5OiBsaW5rRGF0YUFycmF5XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNob3dTZWxlY3RUYWJsZURpYWxvZzogZnVuY3Rpb24gc2hvd1NlbGVjdFRhYmxlRGlhbG9nKCkge1xuICAgICAgdGhpcy4kcmVmcy5zZWxlY3RTaW5nbGVUYWJsZURpYWxvZy5iZWdpblNlbGVjdFRhYmxlKCk7XG4gICAgfSxcbiAgICBzaG93U2VsZWN0RmllbGRDb25uZWN0RGlhbG9nOiBmdW5jdGlvbiBzaG93U2VsZWN0RmllbGRDb25uZWN0RGlhbG9nKCkge1xuICAgICAgdmFyIGZyb21UYWJsZUlkID0gXCJcIjtcbiAgICAgIHZhciB0b1RhYmxlSWQgPSBcIlwiO1xuICAgICAgdmFyIGkgPSAwO1xuICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5zZWxlY3Rpb24uZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLk5vZGUpIHtcbiAgICAgICAgICBpZiAoaSA9PSAwKSB7XG4gICAgICAgICAgICBmcm9tVGFibGVJZCA9IHBhcnQuZGF0YS50YWJsZUlkO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b1RhYmxlSWQgPSBwYXJ0LmRhdGEudGFibGVJZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXRvVGFibGVJZCkge1xuICAgICAgICB0b1RhYmxlSWQgPSBmcm9tVGFibGVJZDtcbiAgICAgIH1cblxuICAgICAgaWYgKGZyb21UYWJsZUlkICE9IFwiXCIgJiYgdG9UYWJsZUlkICE9IFwiXCIpIHtcbiAgICAgICAgdGhpcy4kcmVmcy50YWJsZVJlbGF0aW9uQ29ubmVjdFR3b1RhYmxlRGlhbG9nLmJlZ2luU2VsZWN0Q29ubmVjdChmcm9tVGFibGVJZCwgdG9UYWJsZUlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+35YWI6YCJ5LitMuS4quiKgueCuVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZFRhYmxlVG9EaWFncmFtOiBmdW5jdGlvbiBhZGRUYWJsZVRvRGlhZ3JhbSh0YWJsZURhdGEpIHtcbiAgICAgIHZhciB0YWJsZUlkID0gdGFibGVEYXRhLmlkO1xuICAgICAgdmFyIHRhYmxlSWRzID0gW3RhYmxlSWRdO1xuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBpZiAoIXRoaXMudGFibGVJc0V4aXN0SW5EaWFncmFtKHRhYmxlSWQpKSB7XG4gICAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzLCB7XG4gICAgICAgICAgXCJ0YWJsZUlkc1wiOiB0YWJsZUlkc1xuICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgICB2YXIgYWxsRmllbGRzID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgICB2YXIgc2luZ2xlVGFibGUgPSByZXN1bHQuZXhLVkRhdGEuVGFibGVzWzBdO1xuICAgICAgICAgICAgdmFyIGFsbEZpZWxkc1N0eWxlID0gW107XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGFsbEZpZWxkc1tpXS5kaXNwbGF5VGV4dCA9IGFsbEZpZWxkc1tpXS5maWVsZE5hbWUgKyBcIltcIiArIGFsbEZpZWxkc1tpXS5maWVsZENhcHRpb24gKyBcIl1cIjtcbiAgICAgICAgICAgICAgYWxsRmllbGRzU3R5bGUucHVzaChfc2VsZi5yZW5kZXJlckZpZWxkU3R5bGUoYWxsRmllbGRzW2ldKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBtb2RlbE5vZGVEYXRhID0ge1xuICAgICAgICAgICAgICB0YWJsZUlkOiB0YWJsZUlkLFxuICAgICAgICAgICAgICBsb2M6IFwiMCAwXCIsXG4gICAgICAgICAgICAgIGZpZWxkczogYWxsRmllbGRzU3R5bGUsXG4gICAgICAgICAgICAgIHRhYmxlRGF0YTogc2luZ2xlVGFibGUsXG4gICAgICAgICAgICAgIHRhYmxlTmFtZTogc2luZ2xlVGFibGUudGFibGVOYW1lLFxuICAgICAgICAgICAgICB0YWJsZUNhcHRpb246IHNpbmdsZVRhYmxlLnRhYmxlQ2FwdGlvbixcbiAgICAgICAgICAgICAgdGFibGVEaXNwbGF5VGV4dDogc2luZ2xlVGFibGUudGFibGVOYW1lICsgXCJbXCIgKyBzaW5nbGVUYWJsZS50YWJsZUNhcHRpb24gKyBcIl1cIixcbiAgICAgICAgICAgICAga2V5OiBzaW5nbGVUYWJsZS50YWJsZUlkXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBfc2VsZi50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC5zdGFydFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG5cbiAgICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmFkZE5vZGVEYXRhKG1vZGVsTm9kZURhdGEpO1xuXG4gICAgICAgICAgICBfc2VsZi50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC5jb21taXRUcmFuc2FjdGlvbihcImZsYXNoXCIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivpeeUu+W4g+S4reW3sue7j+WtmOWcqOihqDpcIiArIHRhYmxlRGF0YS50ZXh0KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGRlbGV0ZVNlbGVjdGlvbjogZnVuY3Rpb24gZGVsZXRlU2VsZWN0aW9uKCkge1xuICAgICAgaWYgKHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0uY29tbWFuZEhhbmRsZXIuY2FuRGVsZXRlU2VsZWN0aW9uKCkpIHtcbiAgICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5jb21tYW5kSGFuZGxlci5kZWxldGVTZWxlY3Rpb24oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gICAgY29ubmVjdFNlbGVjdGlvbk5vZGU6IGZ1bmN0aW9uIGNvbm5lY3RTZWxlY3Rpb25Ob2RlKGNvbm5lY3REYXRhKSB7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLnN0YXJ0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcbiAgICAgIHZhciBsaW5lRGF0YSA9IHtcbiAgICAgICAgbGluZUlkOiBTdHJpbmdVdGlsaXR5Lkd1aWQoKSxcbiAgICAgICAgZnJvbTogY29ubmVjdERhdGEuZnJvbS50YWJsZUlkLFxuICAgICAgICB0bzogY29ubmVjdERhdGEudG8udGFibGVJZCxcbiAgICAgICAgZnJvbVRleHQ6IGNvbm5lY3REYXRhLmZyb20udGV4dCxcbiAgICAgICAgdG9UZXh0OiBjb25uZWN0RGF0YS50by50ZXh0XG4gICAgICB9O1xuICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC5hZGRMaW5rRGF0YShsaW5lRGF0YSk7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmNvbW1pdFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG4gICAgfSxcbiAgICBzYXZlTW9kZWxUb1NlcnZlcjogZnVuY3Rpb24gc2F2ZU1vZGVsVG9TZXJ2ZXIoKSB7XG4gICAgICBpZiAodGhpcy5yZWNvcmRJZCkge1xuICAgICAgICB2YXIgc2VuZERhdGEgPSB7XG4gICAgICAgICAgcmVjb3JkSWQ6IHRoaXMucmVjb3JkSWQsXG4gICAgICAgICAgcmVsYXRpb25Db250ZW50OiBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcodGhpcy5nZXREYXRhSnNvbigpKSxcbiAgICAgICAgICByZWxhdGlvbkRpYWdyYW1Kc29uOiB0aGlzLmdldERpYWdyYW1Kc29uKClcbiAgICAgICAgfTtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLnNhdmVEaWFncmFtLCBzZW5kRGF0YSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfVxuICAgIH0sXG4gICAgaW5pdERpYWdyYW06IGZ1bmN0aW9uIGluaXREaWFncmFtKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgaWYgKHdpbmRvdy5nb1NhbXBsZXMpIGdvU2FtcGxlcygpO1xuICAgICAgdmFyICQgPSBnby5HcmFwaE9iamVjdC5tYWtlO1xuICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbSA9ICQoZ28uRGlhZ3JhbSwgXCJ0YWJsZVJlbGF0aW9uRGlhZ3JhbURpdlwiLCB7XG4gICAgICAgIGFsbG93RGVsZXRlOiB0cnVlLFxuICAgICAgICBhbGxvd0NvcHk6IGZhbHNlLFxuICAgICAgICBsYXlvdXQ6ICQoZ28uRm9yY2VEaXJlY3RlZExheW91dCwge1xuICAgICAgICAgIGlzT25nb2luZzogZmFsc2VcbiAgICAgICAgfSksXG4gICAgICAgIFwidW5kb01hbmFnZXIuaXNFbmFibGVkXCI6IHRydWVcbiAgICAgIH0pO1xuICAgICAgdmFyIHRhYmxlUmVsYXRpb25EaWFncmFtID0gdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbTtcbiAgICAgIHZhciBsaWdodGdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDE6IFwiI0U2RTZGQVwiLFxuICAgICAgICAwOiBcIiNGRkZBRjBcIlxuICAgICAgfSk7XG4gICAgICB2YXIgaXRlbVRlbXBsID0gJChnby5QYW5lbCwgXCJIb3Jpem9udGFsXCIsICQoZ28uU2hhcGUsIHtcbiAgICAgICAgZGVzaXJlZFNpemU6IG5ldyBnby5TaXplKDEwLCAxMClcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwiZmlndXJlXCIsIFwiZmlndXJlXCIpLCBuZXcgZ28uQmluZGluZyhcImZpbGxcIiwgXCJjb2xvclwiKSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIHN0cm9rZTogXCIjMzMzMzMzXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwiZGlzcGxheVRleHRcIikpKTtcbiAgICAgIHRhYmxlUmVsYXRpb25EaWFncmFtLm5vZGVUZW1wbGF0ZSA9ICQoZ28uTm9kZSwgXCJBdXRvXCIsIHtcbiAgICAgICAgc2VsZWN0aW9uQWRvcm5lZDogdHJ1ZSxcbiAgICAgICAgcmVzaXphYmxlOiB0cnVlLFxuICAgICAgICBsYXlvdXRDb25kaXRpb25zOiBnby5QYXJ0LkxheW91dFN0YW5kYXJkICYgfmdvLlBhcnQuTGF5b3V0Tm9kZVNpemVkLFxuICAgICAgICBmcm9tU3BvdDogZ28uU3BvdC5BbGxTaWRlcyxcbiAgICAgICAgdG9TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICBpc1NoYWRvd2VkOiB0cnVlLFxuICAgICAgICBzaGFkb3dDb2xvcjogXCIjQzVDMUFBXCIsXG4gICAgICAgIGRvdWJsZUNsaWNrOiBmdW5jdGlvbiBkb3VibGVDbGljayhlLCBub2RlKSB7XG4gICAgICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyhfc2VsZi5hY0ludGVyZmFjZS50YWJsZVZpZXcsIHtcbiAgICAgICAgICAgIFwib3BcIjogXCJ2aWV3XCIsXG4gICAgICAgICAgICBcInJlY29yZElkXCI6IG5vZGUuZGF0YS50YWJsZUlkXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5GcmFtZV9PcGVuSWZyYW1lV2luZG93KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dJZCwgdXJsLCB7XG4gICAgICAgICAgICB0aXRsZTogXCLooajorr7orqFcIlxuICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcImxvY2F0aW9uXCIsIFwibG9jXCIsIGdvLlBvaW50LnBhcnNlKSwgbmV3IGdvLkJpbmRpbmcoXCJkZXNpcmVkU2l6ZVwiLCBcInZpc2libGVcIiwgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBnby5TaXplKE5hTiwgTmFOKTtcbiAgICAgIH0pLm9mT2JqZWN0KFwiTElTVFwiKSwgJChnby5TaGFwZSwgXCJSb3VuZGVkUmVjdGFuZ2xlXCIsIHtcbiAgICAgICAgZmlsbDogbGlnaHRncmFkLFxuICAgICAgICBzdHJva2U6IFwiIzc1Njg3NVwiLFxuICAgICAgICBzdHJva2VXaWR0aDogMVxuICAgICAgfSksICQoZ28uUGFuZWwsIFwiVGFibGVcIiwge1xuICAgICAgICBtYXJnaW46IDgsXG4gICAgICAgIHN0cmV0Y2g6IGdvLkdyYXBoT2JqZWN0LkZpbGxcbiAgICAgIH0sICQoZ28uUm93Q29sdW1uRGVmaW5pdGlvbiwge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIHNpemluZzogZ28uUm93Q29sdW1uRGVmaW5pdGlvbi5Ob25lXG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgcm93OiAwLFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuQ2VudGVyLFxuICAgICAgICBtYXJnaW46IG5ldyBnby5NYXJnaW4oMCwgMTQsIDAsIDIpLFxuICAgICAgICBmb250OiBcImJvbGQgMTZweCBzYW5zLXNlcmlmXCJcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcInRhYmxlRGlzcGxheVRleHRcIikpLCAkKFwiUGFuZWxFeHBhbmRlckJ1dHRvblwiLCBcIkxJU1RcIiwge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Ub3BSaWdodFxuICAgICAgfSksICQoZ28uUGFuZWwsIFwiVmVydGljYWxcIiwge1xuICAgICAgICBuYW1lOiBcIkxJU1RcIixcbiAgICAgICAgcm93OiAxLFxuICAgICAgICBwYWRkaW5nOiAzLFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuVG9wTGVmdCxcbiAgICAgICAgZGVmYXVsdEFsaWdubWVudDogZ28uU3BvdC5MZWZ0LFxuICAgICAgICBzdHJldGNoOiBnby5HcmFwaE9iamVjdC5Ib3Jpem9udGFsLFxuICAgICAgICBpdGVtVGVtcGxhdGU6IGl0ZW1UZW1wbFxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJpdGVtQXJyYXlcIiwgXCJmaWVsZHNcIikpKSk7XG4gICAgICB0YWJsZVJlbGF0aW9uRGlhZ3JhbS5saW5rVGVtcGxhdGUgPSAkKGdvLkxpbmssIHtcbiAgICAgICAgc2VsZWN0aW9uQWRvcm5lZDogdHJ1ZSxcbiAgICAgICAgbGF5ZXJOYW1lOiBcIkZvcmVncm91bmRcIixcbiAgICAgICAgcmVzaGFwYWJsZTogdHJ1ZSxcbiAgICAgICAgcm91dGluZzogZ28uTGluay5Bdm9pZHNOb2RlcyxcbiAgICAgICAgY29ybmVyOiA1LFxuICAgICAgICBjdXJ2ZTogZ28uTGluay5KdW1wT3ZlclxuICAgICAgfSwgJChnby5TaGFwZSwge1xuICAgICAgICBzdHJva2U6IFwiIzMwM0I0NVwiLFxuICAgICAgICBzdHJva2VXaWR0aDogMS41XG4gICAgICB9KSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICBmb250OiBcImJvbGQgMTRweCBzYW5zLXNlcmlmXCIsXG4gICAgICAgIHN0cm9rZTogXCIjMTk2N0IzXCIsXG4gICAgICAgIHNlZ21lbnRJbmRleDogMCxcbiAgICAgICAgc2VnbWVudE9mZnNldDogbmV3IGdvLlBvaW50KE5hTiwgTmFOKSxcbiAgICAgICAgc2VnbWVudE9yaWVudGF0aW9uOiBnby5MaW5rLk9yaWVudFVwcmlnaHRcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcImZyb21UZXh0XCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICBmb250OiBcImJvbGQgMTRweCBzYW5zLXNlcmlmXCIsXG4gICAgICAgIHN0cm9rZTogXCIjMTk2N0IzXCIsXG4gICAgICAgIHNlZ21lbnRJbmRleDogLTEsXG4gICAgICAgIHNlZ21lbnRPZmZzZXQ6IG5ldyBnby5Qb2ludChOYU4sIE5hTiksXG4gICAgICAgIHNlZ21lbnRPcmllbnRhdGlvbjogZ28uTGluay5PcmllbnRVcHJpZ2h0XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJ0b1RleHRcIikpKTtcbiAgICB9LFxuICAgIGxvYWRSZWxhdGlvbkRldGFpbERhdGE6IGZ1bmN0aW9uIGxvYWRSZWxhdGlvbkRldGFpbERhdGEoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0U2luZ2xlRGlhZ3JhbURhdGEsIHtcbiAgICAgICAgcmVjb3JkSWQ6IHRoaXMucmVjb3JkSWQsXG4gICAgICAgIG9wOiBcIkVkaXRcIlxuICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LmRhdGEucmVsYXRpb25Db250ZW50KSB7XG4gICAgICAgICAgICB2YXIgZGF0YUpzb24gPSBKc29uVXRpbGl0eS5TdHJpbmdUb0pzb24ocmVzdWx0LmRhdGEucmVsYXRpb25Db250ZW50KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGFKc29uKTtcblxuICAgICAgICAgICAgX3NlbGYuc2V0RGF0YUpzb24oZGF0YUpzb24pO1xuXG4gICAgICAgICAgICBfc2VsZi5jb252ZXJ0VG9GdWxsSnNvbihkYXRhSnNvbiwgX3NlbGYuZHJhd09iakluRGlhZ3JhbSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZHJhd09iakluRGlhZ3JhbTogZnVuY3Rpb24gZHJhd09iakluRGlhZ3JhbShmdWxsSnNvbikge1xuICAgICAgdmFyICQgPSBnby5HcmFwaE9iamVjdC5tYWtlO1xuICAgICAgdmFyIGJsdWVncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigxNTAsIDE1MCwgMjUwKVwiLFxuICAgICAgICAwLjU6IFwicmdiKDg2LCA4NiwgMTg2KVwiLFxuICAgICAgICAxOiBcInJnYig4NiwgODYsIDE4NilcIlxuICAgICAgfSk7XG4gICAgICB2YXIgZ3JlZW5ncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigxNTgsIDIwOSwgMTU5KVwiLFxuICAgICAgICAxOiBcInJnYig2NywgMTAxLCA1NilcIlxuICAgICAgfSk7XG4gICAgICB2YXIgcmVkZ3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjA2LCAxMDYsIDEwMClcIixcbiAgICAgICAgMTogXCJyZ2IoMTgwLCA1NiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIHllbGxvd2dyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDI1NCwgMjIxLCA1MClcIixcbiAgICAgICAgMTogXCJyZ2IoMjU0LCAxODIsIDUwKVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBsaW5rRGF0YUFycmF5ID0gZnVsbEpzb24ubGluZUxpc3Q7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsID0gJChnby5HcmFwaExpbmtzTW9kZWwsIHtcbiAgICAgICAgY29waWVzQXJyYXlzOiB0cnVlLFxuICAgICAgICBjb3BpZXNBcnJheU9iamVjdHM6IHRydWUsXG4gICAgICAgIG5vZGVEYXRhQXJyYXk6IGZ1bGxKc29uLnRhYmxlTGlzdFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuc3RhcnRUcmFuc2FjdGlvbihcImZsYXNoXCIpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZnVsbEpzb24ubGluZUxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgbGluZURhdGEgPSBmdWxsSnNvbi5saW5lTGlzdFtpXTtcblxuICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmFkZExpbmtEYXRhKGxpbmVEYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmNvbW1pdFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG4gICAgICB9LCA1MDApO1xuICAgIH0sXG4gICAgY29udmVydFRvRnVsbEpzb246IGZ1bmN0aW9uIGNvbnZlcnRUb0Z1bGxKc29uKHNpbXBsZUpzb24sIGZ1bmMpIHtcbiAgICAgIHZhciBmdWxsSnNvbiA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHNpbXBsZUpzb24pO1xuICAgICAgdmFyIHRhYmxlSWRzID0gbmV3IEFycmF5KCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2ltcGxlSnNvbi50YWJsZUxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGFibGVJZHMucHVzaChzaW1wbGVKc29uLnRhYmxlTGlzdFtpXS50YWJsZUlkKTtcbiAgICAgIH1cblxuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHMsIHtcbiAgICAgICAgXCJ0YWJsZUlkc1wiOiB0YWJsZUlkc1xuICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICB2YXIgYWxsRmllbGRzID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgdmFyIGFsbFRhYmxlcyA9IHJlc3VsdC5leEtWRGF0YS5UYWJsZXM7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZ1bGxKc29uLnRhYmxlTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHNpbmdsZVRhYmxlRGF0YSA9IF9zZWxmLmdldFNpbmdsZVRhYmxlRGF0YShhbGxUYWJsZXMsIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZUlkKTtcblxuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlRGF0YSA9IHNpbmdsZVRhYmxlRGF0YTtcbiAgICAgICAgICAgIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZU5hbWUgPSBzaW5nbGVUYWJsZURhdGEudGFibGVOYW1lO1xuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlQ2FwdGlvbiA9IHNpbmdsZVRhYmxlRGF0YS50YWJsZUNhcHRpb247XG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVEaXNwbGF5VGV4dCA9IHNpbmdsZVRhYmxlRGF0YS5kaXNwbGF5VGV4dDtcblxuICAgICAgICAgICAgdmFyIHNpbmdsZVRhYmxlRmllbGRzRGF0YSA9IF9zZWxmLmdldFNpbmdsZVRhYmxlRmllbGRzRGF0YShhbGxGaWVsZHMsIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZUlkKTtcblxuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLmZpZWxkcyA9IHNpbmdsZVRhYmxlRmllbGRzRGF0YTtcbiAgICAgICAgICAgIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS5rZXkgPSBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVJZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfc2VsZi5kcmF3T2JqSW5EaWFncmFtKGZ1bGxKc29uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGdldFNpbmdsZVRhYmxlRGF0YTogZnVuY3Rpb24gZ2V0U2luZ2xlVGFibGVEYXRhKGFsbFRhYmxlcywgdGFibGVJZCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxUYWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFsbFRhYmxlc1tpXS50YWJsZUlkID09IHRhYmxlSWQpIHtcbiAgICAgICAgICBhbGxUYWJsZXNbaV0uZGlzcGxheVRleHQgPSBhbGxUYWJsZXNbaV0udGFibGVOYW1lICsgXCJbXCIgKyBhbGxUYWJsZXNbaV0udGFibGVDYXB0aW9uICsgXCJdXCI7XG4gICAgICAgICAgcmV0dXJuIGFsbFRhYmxlc1tpXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGdldFNpbmdsZVRhYmxlRmllbGRzRGF0YTogZnVuY3Rpb24gZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgdGFibGVJZCkge1xuICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbEZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYWxsRmllbGRzW2ldLmZpZWxkVGFibGVJZCA9PSB0YWJsZUlkKSB7XG4gICAgICAgICAgYWxsRmllbGRzW2ldLmRpc3BsYXlUZXh0ID0gYWxsRmllbGRzW2ldLmZpZWxkTmFtZSArIFwiW1wiICsgYWxsRmllbGRzW2ldLmZpZWxkQ2FwdGlvbiArIFwiXVwiO1xuICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMucmVuZGVyZXJGaWVsZFN0eWxlKGFsbEZpZWxkc1tpXSkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICByZW5kZXJlckZpZWxkU3R5bGU6IGZ1bmN0aW9uIHJlbmRlcmVyRmllbGRTdHlsZShmaWVsZCkge1xuICAgICAgaWYgKGZpZWxkLmZpZWxkSXNQayA9PSBcIuaYr1wiKSB7XG4gICAgICAgIGZpZWxkLmNvbG9yID0gdGhpcy5nZXRLZXlGaWVsZEJydXNoKCk7XG4gICAgICAgIGZpZWxkLmZpZ3VyZSA9IFwiRGVjaXNpb25cIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpZWxkLmNvbG9yID0gdGhpcy5nZXROb3JGaWVsZEJydXNoKCk7XG4gICAgICAgIGZpZWxkLmZpZ3VyZSA9IFwiQ3ViZTFcIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZpZWxkO1xuICAgIH0sXG4gICAgZ2V0S2V5RmllbGRCcnVzaDogZnVuY3Rpb24gZ2V0S2V5RmllbGRCcnVzaCgpIHtcbiAgICAgIHJldHVybiBnby5HcmFwaE9iamVjdC5tYWtlKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDI1NCwgMjIxLCA1MClcIixcbiAgICAgICAgMTogXCJyZ2IoMjU0LCAxODIsIDUwKVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldE5vckZpZWxkQnJ1c2g6IGZ1bmN0aW9uIGdldE5vckZpZWxkQnJ1c2goKSB7XG4gICAgICByZXR1cm4gZ28uR3JhcGhPYmplY3QubWFrZShnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigxNTAsIDE1MCwgMjUwKVwiLFxuICAgICAgICAwLjU6IFwicmdiKDg2LCA4NiwgMTg2KVwiLFxuICAgICAgICAxOiBcInJnYig4NiwgODYsIDE4NilcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXREYXRhSnNvbjogZnVuY3Rpb24gZ2V0RGF0YUpzb24oKSB7XG4gICAgICB2YXIgZGF0YUpzb24gPSB7XG4gICAgICAgIHRhYmxlTGlzdDogW10sXG4gICAgICAgIGxpbmVMaXN0OiBbXVxuICAgICAgfTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubm9kZXMuZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLk5vZGUpIHtcbiAgICAgICAgICBkYXRhSnNvbi50YWJsZUxpc3QucHVzaCh7XG4gICAgICAgICAgICB0YWJsZUlkOiBwYXJ0LmRhdGEudGFibGVJZCxcbiAgICAgICAgICAgIGxvYzogcGFydC5sb2NhdGlvbi54ICsgXCIgXCIgKyBwYXJ0LmxvY2F0aW9uLnlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmIChwYXJ0IGluc3RhbmNlb2YgZ28uTGluaykge1xuICAgICAgICAgIGFsZXJ0KFwibGluZVwiKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLmxpbmtzLmVhY2goZnVuY3Rpb24gKHBhcnQpIHtcbiAgICAgICAgaWYgKHBhcnQgaW5zdGFuY2VvZiBnby5MaW5rKSB7XG4gICAgICAgICAgZGF0YUpzb24ubGluZUxpc3QucHVzaCh7XG4gICAgICAgICAgICBsaW5lSWQ6IHBhcnQuZGF0YS5saW5lSWQsXG4gICAgICAgICAgICBmcm9tOiBwYXJ0LmRhdGEuZnJvbSxcbiAgICAgICAgICAgIHRvOiBwYXJ0LmRhdGEudG8sXG4gICAgICAgICAgICBmcm9tVGV4dDogcGFydC5kYXRhLmZyb21UZXh0LFxuICAgICAgICAgICAgdG9UZXh0OiBwYXJ0LmRhdGEudG9UZXh0XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRhdGFKc29uO1xuICAgIH0sXG4gICAgc2V0RGF0YUpzb246IGZ1bmN0aW9uIHNldERhdGFKc29uKGpzb24pIHtcbiAgICAgIHRoaXMuZm9ybWF0SnNvbiA9IGpzb247XG4gICAgfSxcbiAgICBnZXREaWFncmFtSnNvbjogZnVuY3Rpb24gZ2V0RGlhZ3JhbUpzb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC50b0pzb24oKTtcbiAgICB9LFxuICAgIGFsZXJ0RGF0YUpzb246IGZ1bmN0aW9uIGFsZXJ0RGF0YUpzb24oKSB7XG4gICAgICB2YXIgZGF0YUpzb24gPSB0aGlzLmdldERhdGFKc29uKCk7XG4gICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0SnNvbkNvZGUoZGF0YUpzb24pO1xuICAgIH0sXG4gICAgYWxlcnREaWFncmFtSnNvbjogZnVuY3Rpb24gYWxlcnREaWFncmFtSnNvbigpIHtcbiAgICAgIHZhciBkaWFncmFtSnNvbiA9IHRoaXMuZ2V0RGlhZ3JhbUpzb24oKTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRKc29uQ29kZShkaWFncmFtSnNvbik7XG4gICAgfSxcbiAgICB0YWJsZUlzRXhpc3RJbkRpYWdyYW06IGZ1bmN0aW9uIHRhYmxlSXNFeGlzdEluRGlhZ3JhbSh0YWJsZUlkKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gZmFsc2U7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm5vZGVzLmVhY2goZnVuY3Rpb24gKHBhcnQpIHtcbiAgICAgICAgaWYgKHBhcnQgaW5zdGFuY2VvZiBnby5Ob2RlKSB7XG4gICAgICAgICAgaWYgKHBhcnQuZGF0YS50YWJsZUlkID09IHRhYmxlSWQpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBkb3duTG9hZE1vZGVsUE5HOiBmdW5jdGlvbiBkb3duTG9hZE1vZGVsUE5HKCkge1xuICAgICAgZnVuY3Rpb24gbXlDYWxsYmFjayhibG9iKSB7XG4gICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcbiAgICAgICAgdmFyIGZpbGVuYW1lID0gXCJteUJsb2JGaWxlMS5wbmdcIjtcbiAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgICAgICAgYS5zdHlsZSA9IFwiZGlzcGxheTogbm9uZVwiO1xuICAgICAgICBhLmhyZWYgPSB1cmw7XG4gICAgICAgIGEuZG93bmxvYWQgPSBmaWxlbmFtZTtcblxuICAgICAgICBpZiAod2luZG93Lm5hdmlnYXRvci5tc1NhdmVCbG9iICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZUJsb2IoYmxvYiwgZmlsZW5hbWUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgYS5jbGljaygpO1xuICAgICAgICAgIHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBibG9iID0gdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tYWtlSW1hZ2VEYXRhKHtcbiAgICAgICAgYmFja2dyb3VuZDogXCJ3aGl0ZVwiLFxuICAgICAgICByZXR1cm5UeXBlOiBcImJsb2JcIixcbiAgICAgICAgc2NhbGU6IDEsXG4gICAgICAgIGNhbGxiYWNrOiBteUNhbGxiYWNrXG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgcmVmPVxcXCJyZWxhdGlvbkNvbnRlbnRPdXRlcldyYXBcXFwiIGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1jb250ZW50LW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tY29udGVudC1oZWFkZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tZGVzYy1vdXRlci13cmFwXFxcIiB2LWlmPVxcXCJkaXNwbGF5RGVzY1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLWRlc2NcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NTkwN1xcdTZDRThcXHVGRjFBe3tyZWxhdGlvbi5yZWxhdGlvbkRlc2N9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1vcC1idXR0b25zLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1vcC1idXR0b25zLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCBzaGFwZT1cXFwiY2lyY2xlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJzaG93U2VsZWN0VGFibGVEaWFsb2dcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJzaG93U2VsZWN0RmllbGRDb25uZWN0RGlhbG9nXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJsb2dvLXN0ZWFtXFxcIj5cXHU4RkRFXFx1NjNBNTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIGRpc2FibGVkIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLXJldHVybi1sZWZ0XFxcIj5cXHU1RjE1XFx1NTE2NTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIGRpc2FibGVkIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLXFyLXNjYW5uZXJcXFwiPlxcdTUxNjhcXHU1QzRGPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtZ2l0LWNvbXBhcmVcXFwiPlxcdTUzODZcXHU1M0YyPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJhbGVydERhdGFKc29uXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1jb2RlXFxcIj5cXHU2NTcwXFx1NjM2RUpzb248L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImFsZXJ0RGlhZ3JhbUpzb25cXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNvZGUtd29ya2luZ1xcXCI+XFx1NTZGRVxcdTVGNjJKc29uPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJkb3duTG9hZE1vZGVsUE5HXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1jbG91ZC1kb3dubG9hZFxcXCI+XFx1NEUwQlxcdThGN0Q8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcInNhdmVNb2RlbFRvU2VydmVyXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJsb2dvLWluc3RhZ3JhbVxcXCI+XFx1NEZERFxcdTVCNTg8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImRlbGV0ZVNlbGVjdGlvblxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLWNvbnRlbnQtd3JhcFxcXCIgaWQ9XFxcInRhYmxlUmVsYXRpb25EaWFncmFtRGl2XFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qtc2luZ2xlLXRhYmxlLWRpYWxvZyByZWY9XFxcInNlbGVjdFNpbmdsZVRhYmxlRGlhbG9nXFxcIiBAb24tc2VsZWN0ZWQtdGFibGU9XFxcImFkZFRhYmxlVG9EaWFncmFtXFxcIj48L3NlbGVjdC1zaW5nbGUtdGFibGUtZGlhbG9nPlxcbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlLXJlbGF0aW9uLWNvbm5lY3QtdHdvLXRhYmxlLWRpYWxvZyByZWY9XFxcInRhYmxlUmVsYXRpb25Db25uZWN0VHdvVGFibGVEaWFsb2dcXFwiIEBvbi1jb21wbGV0ZWQtY29ubmVjdD1cXFwiY29ubmVjdFNlbGVjdGlvbk5vZGVcXFwiPjwvdGFibGUtcmVsYXRpb24tY29ubmVjdC10d28tdGFibGUtZGlhbG9nPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzZWxlY3QtZGVmYXVsdC12YWx1ZS1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0R3JvdXBUcmVlRGF0YTogXCIvUmVzdC9CdWlsZGVyL0VudlZhcmlhYmxlR3JvdXAvR2V0VHJlZURhdGFcIixcbiAgICAgICAgcmVsb2FkTGlzdERhdGE6IFwiL1Jlc3QvQnVpbGRlci9FbnZWYXJpYWJsZS9HZXRMaXN0RGF0YVwiXG4gICAgICB9LFxuICAgICAgc2VsZWN0VHlwZTogXCJDb25zdFwiLFxuICAgICAgc2VsZWN0VmFsdWU6IFwiXCIsXG4gICAgICBzZWxlY3RUZXh0OiBcIlwiLFxuICAgICAgY29uc3RWYWx1ZTogXCJcIixcbiAgICAgIGxpc3RIZWlnaHQ6IDQ3MCxcbiAgICAgIHRyZWU6IHtcbiAgICAgICAgdHJlZUlkRmllbGROYW1lOiBcImVudkdyb3VwSWRcIixcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNlbGVjdGVkTm9kZTogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICBhc3luYzoge1xuICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgdXJsOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJlbnZHcm91cFRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJlbnZHcm91cElkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJlbnZHcm91cFBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RJZDogMFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICAgIF9zZWxmLnRyZWVOb2RlU2VsZWN0ZWQoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uQXN5bmNTdWNjZXNzOiBmdW5jdGlvbiBvbkFzeW5jU3VjY2VzcyhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgbXNnKSB7XG4gICAgICAgICAgICAgIGFwcExpc3QudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHRpdGxlOiAn5Y+Y6YeP5ZCN56ewJyxcbiAgICAgICAga2V5OiAnZW52VmFyVGV4dCcsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5Y+Y6YeP5YC8JyxcbiAgICAgICAga2V5OiAnZW52VmFyVmFsdWUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgIGtleTogJ2VudlZhcklkJyxcbiAgICAgICAgd2lkdGg6IDEyMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgIH0sIFtMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLlNlbGVjdGVkQnV0dG9uKGgsIHBhcmFtcywgXCJlbnZWYXJJZFwiLCBfc2VsZildKTtcbiAgICAgICAgfVxuICAgICAgfV0sXG4gICAgICBzZWFyY2hDb25kaXRpb246IHtcbiAgICAgICAgZW52VmFyR3JvdXBJZDoge1xuICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgIHR5cGU6IFNlYXJjaFV0aWxpdHkuU2VhcmNoRmllbGRUeXBlLlN0cmluZ1R5cGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHBhZ2VUb3RhbDogMCxcbiAgICAgIHBhZ2VTaXplOiAxMDAsXG4gICAgICBwYWdlTnVtOiAxXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmxvYWREYXRhKCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBiZWdpblNlbGVjdDogZnVuY3Rpb24gYmVnaW5TZWxlY3Qob2xkRGF0YSkge1xuICAgICAgY29uc29sZS5sb2cob2xkRGF0YSk7XG4gICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nV3JhcDtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgaGVpZ2h0OiA2ODAsXG4gICAgICAgIHdpZHRoOiA5ODAsXG4gICAgICAgIHRpdGxlOiBcIuiuvue9rum7mOiupOWAvFwiXG4gICAgICB9KTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcblxuICAgICAgaWYgKG9sZERhdGEgPT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNlbGVjdFZhbHVlID0gXCJcIjtcbiAgICAgICAgdGhpcy5zZWxlY3RUZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy5jb25zdFZhbHVlID0gXCJcIjtcbiAgICAgIH1cblxuICAgICAgO1xuICAgIH0sXG4gICAgbG9hZERhdGE6IGZ1bmN0aW9uIGxvYWREYXRhKCkge1xuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldEdyb3VwVHJlZURhdGEsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG5cbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgaWYgKHJlc3VsdC5kYXRhICE9IG51bGwgJiYgcmVzdWx0LmRhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge31cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLnRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI3pUcmVlVUxcIiksIHRoaXMudHJlZS50cmVlU2V0dGluZywgcmVzdWx0LmRhdGEpO1xuICAgICAgICAgIHRoaXMudHJlZS50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICAgICAgICB0aGlzLnRyZWUudHJlZU9iai5faG9zdCA9IHRoaXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBmdW5jdGlvbiAoKSB7fSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZ2V0U2VsZWN0SW5zdGFuY2VOYW1lOiBmdW5jdGlvbiBnZXRTZWxlY3RJbnN0YW5jZU5hbWUoKSB7XG4gICAgICByZXR1cm4gQmFzZVV0aWxpdHkuR2V0VXJsUGFyYVZhbHVlKFwiaW5zdGFuY2VOYW1lXCIpO1xuICAgIH0sXG4gICAgc2VsZWN0Q29tcGxldGU6IGZ1bmN0aW9uIHNlbGVjdENvbXBsZXRlKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gICAgICBpZiAodGhpcy5zZWxlY3RUeXBlID09IFwiQ29uc3RcIikge1xuICAgICAgICBpZiAodGhpcy5jb25zdFZhbHVlID09IFwiXCIpIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLor7forr7nva7luLjph4/pu5jorqTlgLzvvIFcIiwgbnVsbCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0LlR5cGUgPSBcIkNvbnN0XCI7XG4gICAgICAgIHJlc3VsdC5WYWx1ZSA9IHRoaXMuY29uc3RWYWx1ZTtcbiAgICAgICAgcmVzdWx0LlRleHQgPSB0aGlzLmNvbnN0VmFsdWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQuVHlwZSA9IFwiRW52VmFyXCI7XG4gICAgICAgIHJlc3VsdC5WYWx1ZSA9IHRoaXMuc2VsZWN0VmFsdWU7XG4gICAgICAgIHJlc3VsdC5UZXh0ID0gdGhpcy5zZWxlY3RUZXh0O1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1kZWZhdWx0LXZhbHVlJywgcmVzdWx0KTtcbiAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICB9LFxuICAgIGNsZWFyQ29tcGxldGU6IGZ1bmN0aW9uIGNsZWFyQ29tcGxldGUoKSB7XG4gICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1kZWZhdWx0LXZhbHVlJywgbnVsbCk7XG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgfSxcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLnNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgc2VsZWN0aW9uQ2hhbmdlOiBmdW5jdGlvbiBzZWxlY3Rpb25DaGFuZ2UoKSB7fSxcbiAgICBjbGVhclNlYXJjaENvbmRpdGlvbjogZnVuY3Rpb24gY2xlYXJTZWFyY2hDb25kaXRpb24oKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5zZWFyY2hDb25kaXRpb24pIHtcbiAgICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb25ba2V5XS52YWx1ZSA9IFwiXCI7XG4gICAgICB9XG4gICAgfSxcbiAgICB0cmVlTm9kZVNlbGVjdGVkOiBmdW5jdGlvbiB0cmVlTm9kZVNlbGVjdGVkKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICB0aGlzLnBhZ2VOdW0gPSAxO1xuICAgICAgdGhpcy5jbGVhclNlYXJjaENvbmRpdGlvbigpO1xuICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb24uZW52VmFyR3JvdXBJZC52YWx1ZSA9IHRyZWVOb2RlW3RoaXMudHJlZS50cmVlSWRGaWVsZE5hbWVdO1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICByZWxvYWREYXRhOiBmdW5jdGlvbiByZWxvYWREYXRhKCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVCaW5kRGF0YUJ5U2VhcmNoKHtcbiAgICAgICAgdXJsOiB0aGlzLmFjSW50ZXJmYWNlLnJlbG9hZExpc3REYXRhLFxuICAgICAgICBwYWdlTnVtOiB0aGlzLnBhZ2VOdW0sXG4gICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICBzZWFyY2hDb25kaXRpb246IHRoaXMuc2VhcmNoQ29uZGl0aW9uLFxuICAgICAgICBwYWdlQXBwT2JqOiB0aGlzLFxuICAgICAgICB0YWJsZUxpc3Q6IHRoaXMsXG4gICAgICAgIGlkRmllbGQ6IFwiZW52VmFySWRcIixcbiAgICAgICAgYXV0b1NlbGVjdGVkT2xkUm93czogdHJ1ZSxcbiAgICAgICAgc3VjY2Vzc0Z1bmM6IG51bGwsXG4gICAgICAgIGxvYWREaWN0OiBmYWxzZSxcbiAgICAgICAgY3VzdFBhcmFzOiB7fVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBzZWxlY3RlZDogZnVuY3Rpb24gc2VsZWN0ZWQoaWQsIHBhcmFtcykge1xuICAgICAgY29uc29sZS5sb2cocGFyYW1zKTtcbiAgICAgIHRoaXMuc2VsZWN0VmFsdWUgPSBwYXJhbXMucm93LmVudlZhclZhbHVlO1xuICAgICAgdGhpcy5zZWxlY3RUZXh0ID0gcGFyYW1zLnJvdy5lbnZWYXJUZXh0O1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiAgcmVmPVxcXCJzZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7bWFyZ2luLXRvcDogMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDx0YWJzIDp2YWx1ZT1cXFwic2VsZWN0VHlwZVxcXCIgdi1tb2RlbD1cXFwic2VsZWN0VHlwZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRhYi1wYW5lIGxhYmVsPVxcXCJcXHU1RTM4XFx1OTFDRlxcXCIgbmFtZT1cXFwiQ29uc3RcXFwiID5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktZm9ybSA6bGFiZWwtd2lkdGg9XFxcIjgwXFxcIiBzdHlsZT1cXFwid2lkdGg6IDgwJTttYXJnaW46IDUwcHggYXV0byBhdXRvO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtIGxhYmVsPVxcXCJcXHU1RTM4XFx1OTFDRlxcdUZGMUFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImNvbnN0VmFsdWVcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktZm9ybT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYi1wYW5lPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSBsYWJlbD1cXFwiXFx1NzNBRlxcdTU4ODNcXHU1M0Q4XFx1OTFDRlxcXCIgbmFtZT1cXFwiRW52VmFyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiA0NXB4O2JvcmRlci1ib3R0b206IGRvdHRlZCAxcHggIzhhOGE4YTttYXJnaW4tYm90dG9tOiAxMHB4O1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7cGFkZGluZzogOHB4O2JvcmRlci1yYWRpdXM6IDhweDtjb2xvcjpvcmFuZ2VyZWQ7Ym9yZGVyOiBzb2xpZCAxcHggI2FkYmVkODtcXFwiPlxcdTVERjJcXHU3RUNGXFx1OTAwOVxcdTYyRTlcXHVGRjFBe3tzZWxlY3RUZXh0fX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJ3aWR0aDogMzAlO2Zsb2F0OiBsZWZ0O2hlaWdodDogNTE0cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJ6VHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJ3aWR0aDogNjglO2Zsb2F0OiBsZWZ0O2hlaWdodDogNTE0cHhcXFwiIGNsYXNzPVxcXCJpdi1saXN0LXBhZ2Utd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgOmhlaWdodD1cXFwibGlzdEhlaWdodFxcXCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cXFwiY29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcInRhYmxlRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG9uLXNlbGVjdGlvbi1jaGFuZ2U9XFxcInNlbGVjdGlvbkNoYW5nZVxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICA8L3RhYnM+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwic2VsZWN0Q29tcGxldGUoKVxcXCI+IFxcdTc4NkUgXFx1OEJBNCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY2xlYXJDb21wbGV0ZSgpXFxcIj4gXFx1NkUwNSBcXHU3QTdBIDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIj5cXHU1MTczIFxcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7XG52YXIgRGVmYXVsdFZhbHVlVXRpbGl0eSA9IHtcbiAgZm9ybWF0VGV4dDogZnVuY3Rpb24gZm9ybWF0VGV4dCh0eXBlLCB0ZXh0KSB7XG4gICAgaWYgKHR5cGUgPT0gXCJDb25zdFwiKSB7XG4gICAgICByZXR1cm4gXCLpnZnmgIHlgLw644CQXCIgKyB0ZXh0ICsgXCLjgJFcIjtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT0gXCJFbnZWYXJcIikge1xuICAgICAgcmV0dXJuIFwi546v5aKD5Y+Y6YePOuOAkFwiICsgdGV4dCArIFwi44CRXCI7XG4gICAgfSBlbHNlIGlmICh0eXBlID09IFwiXCIpIHtcbiAgICAgIHJldHVybiBcIuOAkOaXoOOAkVwiO1xuICAgIH1cblxuICAgIHJldHVybiBcIuacquefpeexu+Wei1wiICsgdGV4dDtcbiAgfVxufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcInNlbGVjdC1zaW5nbGUtdGFibGUtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0VGFibGVEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVzRm9yWlRyZWVOb2RlTGlzdFwiXG4gICAgICB9LFxuICAgICAganNFZGl0b3JJbnN0YW5jZTogbnVsbCxcbiAgICAgIHRhYmxlVHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzLmdldFpUcmVlT2JqKHRyZWVJZCkuX2hvc3Q7XG5cbiAgICAgICAgICAgICAgaWYgKHRyZWVOb2RlLm5vZGVUeXBlTmFtZSA9PSBcIlRhYmxlXCIpIHtcbiAgICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZFRhYmxlKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZFRhYmxlKGV2ZW50LCB0cmVlSWQsIG51bGwpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0cmVlRGF0YTogbnVsbCxcbiAgICAgICAgY2xpY2tOb2RlOiBudWxsXG4gICAgICB9LFxuICAgICAgc2VsZWN0ZWRUYWJsZURhdGE6IG51bGxcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLnNlbGVjdFRhYmxlTW9kZWxEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGJlZ2luU2VsZWN0VGFibGU6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0VGFibGUoKSB7XG4gICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuc2VsZWN0VGFibGVNb2RlbERpYWxvZ1dyYXA7XG4gICAgICB0aGlzLmdldFRhYmxlRGF0YUluaXRUcmVlKCk7XG4gICAgICB2YXIgaGVpZ2h0ID0gNDUwO1xuXG4gICAgICBpZiAoUGFnZVN0eWxlVXRpbGl0eS5HZXRQYWdlSGVpZ2h0KCkgPiA1NTApIHtcbiAgICAgICAgaGVpZ2h0ID0gNjAwO1xuICAgICAgfVxuXG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgd2lkdGg6IDU3MCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqeihqFwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFRhYmxlRGF0YUluaXRUcmVlOiBmdW5jdGlvbiBnZXRUYWJsZURhdGFJbml0VHJlZSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZURhdGFVcmwsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLnRhYmxlVHJlZS50cmVlRGF0YSA9IHJlc3VsdC5kYXRhO1xuXG4gICAgICAgICAgX3NlbGYuJHJlZnMudGFibGVaVHJlZVVMLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic2VsZWN0LXRhYmxlLXNpbmdsZS1jb21wLVwiICsgU3RyaW5nVXRpbGl0eS5HdWlkKCkpO1xuXG4gICAgICAgICAgX3NlbGYudGFibGVUcmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChfc2VsZi4kcmVmcy50YWJsZVpUcmVlVUwpLCBfc2VsZi50YWJsZVRyZWUudHJlZVNldHRpbmcsIF9zZWxmLnRhYmxlVHJlZS50cmVlRGF0YSk7XG5cbiAgICAgICAgICBfc2VsZi50YWJsZVRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG5cbiAgICAgICAgICBfc2VsZi50YWJsZVRyZWUudHJlZU9iai5faG9zdCA9IF9zZWxmO1xuICAgICAgICAgIGZ1enp5U2VhcmNoVHJlZU9iaihfc2VsZi50YWJsZVRyZWUudHJlZU9iaiwgX3NlbGYuJHJlZnMudHh0X3RhYmxlX3NlYXJjaF90ZXh0LiRyZWZzLmlucHV0LCBudWxsLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIHNlbGVjdGVkVGFibGU6IGZ1bmN0aW9uIHNlbGVjdGVkVGFibGUoZXZlbnQsIHRyZWVJZCwgdGFibGVEYXRhKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkVGFibGVEYXRhID0gdGFibGVEYXRhO1xuICAgIH0sXG4gICAgY29tcGxldGVkOiBmdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZFRhYmxlRGF0YSkge1xuICAgICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC10YWJsZScsIHRoaXMuc2VsZWN0ZWRUYWJsZURhdGEpO1xuICAgICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+mAieaLqeihqCFcIik7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwic2VsZWN0VGFibGVNb2RlbERpYWxvZ1dyYXBcXFwiIGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtd3JhcCBnZW5lcmFsLWVkaXQtcGFnZS13cmFwXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtc291cmNlLXdyYXAgYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS1oYXMtYnV0dG9ucy13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X3RhYmxlX3NlYXJjaF90ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1XFx1ODg2OFxcdTU0MERcXHU2MjE2XFx1ODAwNVxcdTY4MDdcXHU5ODk4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaW5uZXItd3JhcCBkaXYtY3VzdG9tLXNjcm9sbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcInRhYmxlWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCIgc3R5bGU9XFxcImJvdHRvbTogMTJweDtyaWdodDogMTJweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY29tcGxldGVkKClcXFwiIGljb249XFxcIm1kLWNoZWNrbWFya1xcXCI+XFx1Nzg2RVxcdThCQTQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoKVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiPlxcdTUxNzNcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzZWxlY3Qtc2luZ2xlLXdlYmZvcm0tZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0VGFibGVEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRm9ybS9HZXRXZWJGb3JtRm9yWlRyZWVOb2RlTGlzdFwiXG4gICAgICB9LFxuICAgICAganNFZGl0b3JJbnN0YW5jZTogbnVsbCxcbiAgICAgIHRyZWU6IHtcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICAgIGlmICh0cmVlTm9kZS5ub2RlVHlwZU5hbWUgPT0gXCJXZWJGb3JtXCIpIHtcbiAgICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZEZvcm0oZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0cmVlRGF0YTogbnVsbFxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkRm9ybURhdGE6IG51bGwsXG4gICAgICBvbGRTZWxlY3RlZEZvcm1JZDogXCJcIlxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0TW9kZWxEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGJlZ2luU2VsZWN0Rm9ybTogZnVuY3Rpb24gYmVnaW5TZWxlY3RGb3JtKGZvcm1JZCkge1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLnNlbGVjdE1vZGVsRGlhbG9nV3JhcDtcbiAgICAgIHRoaXMuZ2V0Rm9ybURhdGFJbml0VHJlZSgpO1xuICAgICAgdGhpcy5vbGRTZWxlY3RlZEZvcm1JZCA9IGZvcm1JZDtcbiAgICAgIHZhciBoZWlnaHQgPSA1MDA7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgd2lkdGg6IDU3MCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqeeql+S9k1wiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEZvcm1EYXRhSW5pdFRyZWU6IGZ1bmN0aW9uIGdldEZvcm1EYXRhSW5pdFRyZWUoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVEYXRhVXJsLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi50cmVlLnRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9zZWxmLnRyZWUudHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChfc2VsZi50cmVlLnRyZWVEYXRhW2ldLm5vZGVUeXBlTmFtZSA9PSBcIldlYkZvcm1cIikge1xuICAgICAgICAgICAgICBfc2VsZi50cmVlLnRyZWVEYXRhW2ldLmljb24gPSBcIi9UaGVtZXMvUG5nMTZYMTYvdGFibGUucG5nXCI7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKF9zZWxmLnRyZWUudHJlZURhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiTW9kdWxlXCIpIHtcbiAgICAgICAgICAgICAgX3NlbGYudHJlZS50cmVlRGF0YVtpXS5pY29uID0gXCIvVGhlbWVzL1BuZzE2WDE2L2ZvbGRlci10YWJsZS5wbmdcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfc2VsZi4kcmVmcy5mb3JtWlRyZWVVTC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlbGVjdC1mb3JtLXNpbmdsZS1jb21wLVwiICsgU3RyaW5nVXRpbGl0eS5HdWlkKCkpO1xuXG4gICAgICAgICAgX3NlbGYudHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoX3NlbGYuJHJlZnMuZm9ybVpUcmVlVUwpLCBfc2VsZi50cmVlLnRyZWVTZXR0aW5nLCBfc2VsZi50cmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG5cbiAgICAgICAgICBfc2VsZi50cmVlLnRyZWVPYmouX2hvc3QgPSBfc2VsZjtcbiAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmooX3NlbGYudHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfZm9ybV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG5cbiAgICAgICAgICBpZiAoX3NlbGYub2xkU2VsZWN0ZWRGb3JtSWQgIT0gbnVsbCAmJiBfc2VsZi5vbGRTZWxlY3RlZEZvcm1JZCAhPSBcIlwiKSB7XG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWROb2RlID0gX3NlbGYudHJlZS50cmVlT2JqLmdldE5vZGVCeVBhcmFtKFwiaWRcIiwgX3NlbGYub2xkU2VsZWN0ZWRGb3JtSWQpO1xuXG4gICAgICAgICAgICBfc2VsZi50cmVlLnRyZWVPYmouc2VsZWN0Tm9kZShzZWxlY3RlZE5vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIHNlbGVjdGVkRm9ybTogZnVuY3Rpb24gc2VsZWN0ZWRGb3JtKGV2ZW50LCB0cmVlSWQsIGZvcm1EYXRhKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRm9ybURhdGEgPSBmb3JtRGF0YTtcbiAgICB9LFxuICAgIGNvbXBsZXRlZDogZnVuY3Rpb24gY29tcGxldGVkKCkge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRGb3JtRGF0YSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgIGZvcm1Nb2R1bGVJZDogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmF0dHI0LFxuICAgICAgICAgIGZvcm1Nb2R1bGVOYW1lOiB0aGlzLnNlbGVjdGVkRm9ybURhdGEuYXR0cjMsXG4gICAgICAgICAgZm9ybUlkOiB0aGlzLnNlbGVjdGVkRm9ybURhdGEuaWQsXG4gICAgICAgICAgZm9ybU5hbWU6IHRoaXMuc2VsZWN0ZWRGb3JtRGF0YS5hdHRyMSxcbiAgICAgICAgICBmb3JtQ29kZTogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmF0dHIyXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWZvcm0nLCByZXN1bHQpO1xuICAgICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+mAieaLqeeql+S9kyFcIik7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwic2VsZWN0TW9kZWxEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXdyYXAgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC1zb3VyY2Utd3JhcCBjMS1zZWxlY3QtbW9kZWwtc291cmNlLWhhcy1idXR0b25zLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfZm9ybV9zZWFyY2hfdGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTg4NjhcXHU1MzU1XFx1NTQwRFxcdTc5RjBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwIGRpdi1jdXN0b20tc2Nyb2xsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHJlZj1cXFwiZm9ybVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiIHN0eWxlPVxcXCJib3R0b206IDEycHg7cmlnaHQ6IDEycHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNvbXBsZXRlZCgpXFxcIiBpY29uPVxcXCJtZC1jaGVja21hcmtcXFwiPlxcdTc4NkVcXHU4QkE0PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIj5cXHU1MTczXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LXZhbGlkYXRlLXJ1bGUtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbGVjdFZhbGlkYXRlVHlwZTogXCJOb0VtcHR5XCIsXG4gICAgICBydWxlUGFyYXM6IHtcbiAgICAgICAgbXNnOiBcIuWtl+autVwiLFxuICAgICAgICBudW1MZW5ndGg6IDQsXG4gICAgICAgIGRlY2ltYWxMZW5ndGg6IDAsXG4gICAgICAgIGpzTWV0aG9kTmFtZTogXCJcIixcbiAgICAgICAgcmVndWxhclRleHQ6IFwiXCIsXG4gICAgICAgIHJlZ3VsYXJNc2c6IFwiXCJcbiAgICAgIH0sXG4gICAgICBhZGRlZFZhbGlkYXRlUnVsZTogW10sXG4gICAgICB2YWxpZGF0ZUNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHRpdGxlOiAn57G75Z6LJyxcbiAgICAgICAga2V5OiAndmFsaWRhdGVUeXBlJyxcbiAgICAgICAgd2lkdGg6IDE1MCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflj4LmlbAnLFxuICAgICAgICBrZXk6ICd2YWxpZGF0ZVBhcmFzJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfliKDpmaQnLFxuICAgICAgICBrZXk6ICd2YWxpZGF0ZUlkJyxcbiAgICAgICAgd2lkdGg6IDEyMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uIGRlbFwiLFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgICAgIF9zZWxmLmRlbFZhbGlkYXRlKHBhcmFtcy5yb3dbXCJ2YWxpZGF0ZUlkXCJdKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXSk7XG4gICAgICAgIH1cbiAgICAgIH1dXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgYmVnaW5TZWxlY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0KG9sZERhdGEpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dXcmFwO1xuICAgICAgdmFyIGhlaWdodCA9IDQ1MDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICBoZWlnaHQ6IDY4MCxcbiAgICAgICAgd2lkdGg6IDk4MCxcbiAgICAgICAgdGl0bGU6IFwi6K6+572u6aqM6K+B6KeE5YiZXCJcbiAgICAgIH0pO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuICAgICAgdGhpcy5ydWxlUGFyYXMubXNnID0gXCJhdXRvXCI7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5udW1MZW5ndGggPSA0O1xuICAgICAgdGhpcy5ydWxlUGFyYXMuZGVjaW1hbExlbmd0aCA9IDA7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5qc01ldGhvZE5hbWUgPSBcIlwiO1xuICAgICAgdGhpcy5ydWxlUGFyYXMucmVndWxhclRleHQgPSBcIlwiO1xuICAgICAgdGhpcy5ydWxlUGFyYXMucmVndWxhck1zZyA9IFwiXCI7XG4gICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlID0gW107XG4gICAgICB0aGlzLmJpbmRPbGRTZWxlY3RlZFZhbHVlKG9sZERhdGEpO1xuICAgIH0sXG4gICAgYmluZE9sZFNlbGVjdGVkVmFsdWU6IGZ1bmN0aW9uIGJpbmRPbGRTZWxlY3RlZFZhbHVlKG9sZERhdGEpIHtcbiAgICAgIHZhciBvbGRTZWxlY3RlZFZhbHVlID0gb2xkRGF0YTtcblxuICAgICAgaWYgKG9sZFNlbGVjdGVkVmFsdWUucnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlID0gb2xkU2VsZWN0ZWRWYWx1ZS5ydWxlcztcbiAgICAgICAgdGhpcy5ydWxlUGFyYXMubXNnID0gb2xkU2VsZWN0ZWRWYWx1ZS5tc2c7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRTZWxlY3RJbnN0YW5jZU5hbWU6IGZ1bmN0aW9uIGdldFNlbGVjdEluc3RhbmNlTmFtZSgpIHtcbiAgICAgIHJldHVybiBCYXNlVXRpbGl0eS5HZXRVcmxQYXJhVmFsdWUoXCJpbnN0YW5jZU5hbWVcIik7XG4gICAgfSxcbiAgICBzZWxlY3RDb21wbGV0ZTogZnVuY3Rpb24gc2VsZWN0Q29tcGxldGUoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdGhpcy5hZGRlZFZhbGlkYXRlUnVsZTtcblxuICAgICAgaWYgKHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgIG1zZzogdGhpcy5ydWxlUGFyYXMubXNnLFxuICAgICAgICAgIHJ1bGVzOiB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLXZhbGlkYXRlLXJ1bGUnLCBKc29uVXRpbGl0eS5DbG9uZVNpbXBsZShyZXN1bHQpKTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jbGVhckNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBjbGVhckNvbXBsZXRlOiBmdW5jdGlvbiBjbGVhckNvbXBsZXRlKCkge1xuICAgICAgdGhpcy4kZW1pdCgnb24tY2xlYXItdmFsaWRhdGUtcnVsZScpO1xuICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5zZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGFkZFZhbGlkYXRlUnVsZTogZnVuY3Rpb24gYWRkVmFsaWRhdGVSdWxlKCkge1xuICAgICAgdmFyIHZhbGlkYXRlUGFyYXMgPSBcIlwiO1xuXG4gICAgICBpZiAodGhpcy5zZWxlY3RWYWxpZGF0ZVR5cGUgPT0gXCJOdW1iZXJcIikge1xuICAgICAgICB2YWxpZGF0ZVBhcmFzID0gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHtcbiAgICAgICAgICBudW1MZW5ndGg6IHRoaXMucnVsZVBhcmFzLm51bUxlbmd0aCxcbiAgICAgICAgICBkZWNpbWFsTGVuZ3RoOiB0aGlzLnJ1bGVQYXJhcy5kZWNpbWFsTGVuZ3RoXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdFZhbGlkYXRlVHlwZSA9PSBcIlJlZ3VsYXJcIikge1xuICAgICAgICB2YWxpZGF0ZVBhcmFzID0gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHtcbiAgICAgICAgICByZWd1bGFyVGV4dDogdGhpcy5ydWxlUGFyYXMucmVndWxhclRleHQsXG4gICAgICAgICAgcmVndWxhck1zZzogdGhpcy5ydWxlUGFyYXMucmVndWxhck1zZ1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RWYWxpZGF0ZVR5cGUgPT0gXCJKc01ldGhvZFwiKSB7XG4gICAgICAgIHZhbGlkYXRlUGFyYXMgPSBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcoe1xuICAgICAgICAgIGpzTWV0aG9kTmFtZTogdGhpcy5ydWxlUGFyYXMuanNNZXRob2ROYW1lXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB2YXIgbmV3VmFsaWRhdGVSdWxlID0ge1xuICAgICAgICBcInZhbGlkYXRlSWRcIjogU3RyaW5nVXRpbGl0eS5UaW1lc3RhbXAoKSxcbiAgICAgICAgXCJ2YWxpZGF0ZVR5cGVcIjogdGhpcy5zZWxlY3RWYWxpZGF0ZVR5cGUsXG4gICAgICAgIFwidmFsaWRhdGVQYXJhc1wiOiB2YWxpZGF0ZVBhcmFzXG4gICAgICB9O1xuICAgICAgdGhpcy5hZGRlZFZhbGlkYXRlUnVsZS5wdXNoKG5ld1ZhbGlkYXRlUnVsZSk7XG4gICAgfSxcbiAgICBkZWxWYWxpZGF0ZTogZnVuY3Rpb24gZGVsVmFsaWRhdGUodmFsaWRhdGVJZCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmFkZGVkVmFsaWRhdGVSdWxlW2ldLnZhbGlkYXRlSWQgPT0gdmFsaWRhdGVJZCkge1xuICAgICAgICAgIHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUuc3BsaWNlKGksIDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwic2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nV3JhcFxcXCIgdi1jbG9hayBjbGFzcz1cXFwiZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGNhcmQgc3R5bGU9XFxcIm1hcmdpbi10b3A6IDEwcHhcXFwiID5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBzbG90PVxcXCJ0aXRsZVxcXCI+XFx1OEJCRVxcdTdGNkVcXHU5QThDXFx1OEJDMVxcdTg5QzRcXHU1MjE5PC9wPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcInNlbGVjdFZhbGlkYXRlVHlwZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIk5vRW1wdHlcXFwiPlxcdTRFMERcXHU0RTNBXFx1N0E3QTwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIk51bWJlclxcXCI+XFx1NjU3MFxcdTVCNTc8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJNb2JpbGVcXFwiPlxcdTYyNEJcXHU2NzNBPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiRGF0ZVxcXCI+XFx1NjVFNVxcdTY3MUY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJUaW1lXFxcIj5cXHU2NUY2XFx1OTVGNDwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIkRhdGVUaW1lXFxcIj5cXHU2NUU1XFx1NjcxRlxcdTY1RjZcXHU5NUY0PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiRU1haWxcXFwiPlxcdTkwQUVcXHU0RUY2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiSURDYXJkXFxcIj5cXHU4RUFCXFx1NEVGRFxcdThCQzE8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJVUkxcXFwiPlVSTDwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIkVOQ29kZVxcXCI+XFx1ODJGMVxcdTY1ODc8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJTaW1wbGVDb2RlXFxcIj5cXHU3Mjc5XFx1NkI4QVxcdTVCNTdcXHU3QjI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiUmVndWxhclxcXCI+XFx1NkI2M1xcdTUyMTlcXHU4ODY4XFx1OEZCRVxcdTVGMEY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJKc01ldGhvZFxcXCI+SlNcXHU2NUI5XFx1NkNENTwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBzaGFwZT1cXFwiY2lyY2xlXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiIHN0eWxlPVxcXCJtYXJnaW4tbGVmdDogMTVweDtjdXJzb3I6IHBvaW50ZXJcXFwiIEBjbGljaz1cXFwiYWRkVmFsaWRhdGVSdWxlXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZpZGVyIG9yaWVudGF0aW9uPVxcXCJsZWZ0XFxcIiA6ZGFzaGVkPVxcXCJ0cnVlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOiAxMnB4XFxcIj5cXHU1M0MyXFx1NjU3MFxcdThCQkVcXHU3RjZFPC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tXFx1NjU3MFxcdTVCNTdcXHU3QzdCXFx1NTc4QlxcdTUzQzJcXHU2NTcwXFx1OEJCRVxcdTdGNkUtLT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJzZWxlY3RWYWxpZGF0ZVR5cGU9PSdOdW1iZXInXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWZvcm0gOmxhYmVsLXdpZHRoPVxcXCI4MFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbSBsYWJlbD1cXFwiXFx1OTU3RlxcdTVFQTZcXHVGRjFBXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0LW51bWJlciA6bWF4PVxcXCIxMFxcXCIgOm1pbj1cXFwiMVxcXCIgdi1tb2RlbD1cXFwicnVsZVBhcmFzLm51bUxlbmd0aFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHN0eWxlPVxcXCJ3aWR0aDogODAlXFxcIj48L2lucHV0LW51bWJlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiNFxcXCIgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFx1NUMwRlxcdTY1NzBcXHU0RjREXFx1NjU3MFxcdUZGMUE8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjEwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQtbnVtYmVyIDptYXg9XFxcIjEwXFxcIiA6bWluPVxcXCIwXFxcIiB2LW1vZGVsPVxcXCJydWxlUGFyYXMuZGVjaW1hbExlbmd0aFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHN0eWxlPVxcXCJ3aWR0aDogODAlXFxcIj48L2lucHV0LW51bWJlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcm93PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWZvcm0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tXFx1NkI2M1xcdTUyMTlcXHU4ODY4XFx1OEZCRVxcdTVGMEZcXHU3QzdCXFx1NTc4QlxcdTUzQzJcXHU2NTcwXFx1OEJCRVxcdTdGNkUtLT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJzZWxlY3RWYWxpZGF0ZVR5cGU9PSdSZWd1bGFyJ1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1mb3JtIDpsYWJlbC13aWR0aD1cXFwiODBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0gbGFiZWw9XFxcIlxcdTg4NjhcXHU4RkJFXFx1NUYwRlxcdUZGMUFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm93PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjEwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIkVudGVyIHNvbWV0aGluZy4uLlxcXCIgdi1tb2RlbD1cXFwicnVsZVBhcmFzLnJlZ3VsYXJUZXh0XFxcIiBzdHlsZT1cXFwid2lkdGg6IDgwJVxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCI0XFxcIiBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXHU2M0QwXFx1NzkzQVxcdTRGRTFcXHU2MDZGXFx1RkYxQTwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgc29tZXRoaW5nLi4uXFxcIiB2LW1vZGVsPVxcXCJydWxlUGFyYXMucmVndWxhck1zZ1xcXCIgc3R5bGU9XFxcIndpZHRoOiA4MCVcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcm93PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWZvcm0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tSlNcXHU2NUI5XFx1NkNENVxcdTdDN0JcXHU1NzhCXFx1NTNDMlxcdTY1NzBcXHU4QkJFXFx1N0Y2RS0tPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcInNlbGVjdFZhbGlkYXRlVHlwZT09J0pzTWV0aG9kJ1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1mb3JtIDpsYWJlbC13aWR0aD1cXFwiODBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0gbGFiZWw9XFxcIlxcdTY1QjlcXHU2Q0Q1XFx1NTQwRFxcdUZGMUFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIkVudGVyIHNvbWV0aGluZy4uLlxcXCIgdi1tb2RlbD1cXFwicnVsZVBhcmFzLmpzTWV0aG9kTmFtZVxcXCIgc3R5bGU9XFxcIndpZHRoOiA5MCVcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1mb3JtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvY2FyZD5cXG4gICAgICAgICAgICAgICAgICAgIDxjYXJkIHN0eWxlPVxcXCJtYXJnaW4tdG9wOiAxMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBzbG90PVxcXCJ0aXRsZVxcXCI+XFx1NURGMlxcdTZERkJcXHU1MkEwXFx1ODlDNFxcdTUyMTk8L3A+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHg7bWFyZ2luLXRvcDogMHB4O21hcmdpbi1ib3R0b206IDZweFxcXCI+XFx1NjNEMFxcdTc5M0FcXHU0RkUxXFx1NjA2RjwvZGl2aWRlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktZm9ybSA6bGFiZWwtd2lkdGg9XFxcIjBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbSBsYWJlbD1cXFwiXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCAgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTYzRDBcXHU3OTNBXFx1NEZFMVxcdTYwNkYuLi5cXFwiICB2LW1vZGVsPVxcXCJydWxlUGFyYXMubXNnXFxcIj48L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWZvcm0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwibWFyZ2luLWJvdHRvbTogMTBweDtvdmVyZmxvdzogYXV0b1xcXCIgY2xhc3M9XFxcIml2LWxpc3QtcGFnZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHg7bWFyZ2luLXRvcDogMHB4O21hcmdpbi1ib3R0b206IDZweFxcXCI+XFx1OUE4Q1xcdThCQzFcXHU4OUM0XFx1NTIxOTwvZGl2aWRlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJ2YWxpZGF0ZUNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJhZGRlZFZhbGlkYXRlUnVsZVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBuby1kYXRhLXRleHQ9XFxcIlxcdThCRjdcXHU2REZCXFx1NTJBMFxcdTlBOENcXHU4QkMxXFx1ODlDNFxcdTUyMTlcXFwiIDpoZWlnaHQ9XFxcIjEzMFxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9jYXJkPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcInNlbGVjdENvbXBsZXRlKClcXFwiPiBcXHU3ODZFIFxcdThCQTQgPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNsZWFyQ29tcGxldGUoKVxcXCI+IFxcdTZFMDUgXFx1N0E3QSA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoKVxcXCI+XFx1NTE3MyBcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwidGFibGUtcmVsYXRpb24tY29ubmVjdC10d28tdGFibGUtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkczogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHNcIlxuICAgICAgfSxcbiAgICAgIGZyb21UYWJsZUZpZWxkOiB7XG4gICAgICAgIGZpZWxkRGF0YTogW10sXG4gICAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgICAgdGl0bGU6ICflrZfmrrXlkI3np7AnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkTmFtZScsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIHRpdGxlOiAn5qCH6aKYJyxcbiAgICAgICAgICBrZXk6ICdmaWVsZENhcHRpb24nLFxuICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgdG9UYWJsZUZpZWxkOiB7XG4gICAgICAgIGZpZWxkRGF0YTogW10sXG4gICAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgICAgdGl0bGU6ICflrZfmrrXlkI3np7AnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkTmFtZScsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIHRpdGxlOiAn5qCH6aKYJyxcbiAgICAgICAgICBrZXk6ICdmaWVsZENhcHRpb24nLFxuICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgZGlhbG9nSGVpZ2h0OiAwLFxuICAgICAgcmVzdWx0RGF0YToge1xuICAgICAgICBmcm9tOiB7XG4gICAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgICB0ZXh0OiBcIlwiXG4gICAgICAgIH0sXG4gICAgICAgIHRvOiB7XG4gICAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgICB0ZXh0OiBcIlwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLmNvbm5lY3RUYWJsZUZpZWxkTW9kZWxEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGNvbXBsZXRlZDogZnVuY3Rpb24gY29tcGxldGVkKCkge1xuICAgICAgaWYgKHRoaXMucmVzdWx0RGF0YS5mcm9tLnRleHQgIT0gXCJcIiAmJiB0aGlzLnJlc3VsdERhdGEudG8udGV4dCAhPSBcIlwiKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLWNvbXBsZXRlZC1jb25uZWN0JywgdGhpcy5yZXN1bHREYXRhKTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7forr7nva7lhbPogZTlrZfmrrVcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRGaWVsZHNBbmRCaW5kOiBmdW5jdGlvbiBnZXRGaWVsZHNBbmRCaW5kKGZyb21UYWJsZUlkLCB0b1RhYmxlSWQpIHtcbiAgICAgIHZhciB0YWJsZUlkcyA9IFtmcm9tVGFibGVJZCwgdG9UYWJsZUlkXTtcblxuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHMsIHtcbiAgICAgICAgXCJ0YWJsZUlkc1wiOiB0YWJsZUlkc1xuICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICB2YXIgYWxsRmllbGRzID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgdmFyIGFsbFRhYmxlcyA9IHJlc3VsdC5leEtWRGF0YS5UYWJsZXM7XG5cbiAgICAgICAgICB2YXIgZnJvbVRhYmxlRmllbGRzID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgZnJvbVRhYmxlSWQpO1xuXG4gICAgICAgICAgdmFyIHRvVGFibGVGaWVsZHMgPSBfc2VsZi5nZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEoYWxsRmllbGRzLCB0b1RhYmxlSWQpO1xuXG4gICAgICAgICAgX3NlbGYuZnJvbVRhYmxlRmllbGQuZmllbGREYXRhID0gZnJvbVRhYmxlRmllbGRzO1xuICAgICAgICAgIF9zZWxmLnRvVGFibGVGaWVsZC5maWVsZERhdGEgPSB0b1RhYmxlRmllbGRzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgYmVnaW5TZWxlY3RDb25uZWN0OiBmdW5jdGlvbiBiZWdpblNlbGVjdENvbm5lY3QoZnJvbVRhYmxlSWQsIHRvVGFibGVJZCkge1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLmNvbm5lY3RUYWJsZUZpZWxkTW9kZWxEaWFsb2dXcmFwO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLmZyb20udGFibGVJZCA9IGZyb21UYWJsZUlkO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLnRvLnRhYmxlSWQgPSB0b1RhYmxlSWQ7XG4gICAgICB0aGlzLnJlc3VsdERhdGEuZnJvbS50ZXh0ID0gXCJcIjtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS50by50ZXh0ID0gXCJcIjtcbiAgICAgIHRoaXMuZ2V0RmllbGRzQW5kQmluZChmcm9tVGFibGVJZCwgdG9UYWJsZUlkKTtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG5cbiAgICAgIGlmIChQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VIZWlnaHQoKSA+IDU1MCkge1xuICAgICAgICBoZWlnaHQgPSA2MDA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZGlhbG9nSGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIHdpZHRoOiA4NzAsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICB0aXRsZTogXCLorr7nva7lhbPogZRcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGE6IGZ1bmN0aW9uIGdldFNpbmdsZVRhYmxlRmllbGRzRGF0YShhbGxGaWVsZHMsIHRhYmxlSWQpIHtcbiAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxGaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFsbEZpZWxkc1tpXS5maWVsZFRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKGFsbEZpZWxkc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIHNlbGVjdGVkRnJvbUZpZWxkOiBmdW5jdGlvbiBzZWxlY3RlZEZyb21GaWVsZChyb3csIGluZGV4KSB7XG4gICAgICB0aGlzLnJlc3VsdERhdGEuZnJvbS50ZXh0ID0gcm93LmZpZWxkTmFtZSArIFwiWzFdXCI7XG4gICAgfSxcbiAgICBzZWxlY3RlZFRvRmllbGQ6IGZ1bmN0aW9uIHNlbGVjdGVkVG9GaWVsZChyb3csIGluZGV4KSB7XG4gICAgICB0aGlzLnJlc3VsdERhdGEudG8udGV4dCA9IHJvdy5maWVsZE5hbWUgKyBcIlswLi5OXVwiO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcImNvbm5lY3RUYWJsZUZpZWxkTW9kZWxEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXdyYXAgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS13cmFwIGMxLXNlbGVjdC1tb2RlbC1zb3VyY2UtaGFzLWJ1dHRvbnMtd3JhcFxcXCIgc3R5bGU9XFxcInBhZGRpbmc6IDEwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiBsZWZ0O3dpZHRoOiA0OSU7aGVpZ2h0OiAxMDAlO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcInJlc3VsdERhdGEuZnJvbS50ZXh0XFxcIiBzdWZmaXg9XFxcIm1kLWRvbmUtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUYwMFxcdTU5Q0JcXHU1MTczXFx1ODA1NFxcdTVCNTdcXHU2QkI1XFxcIiBzdHlsZT1cXFwibWFyZ2luLWJvdHRvbTogMTBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgQG9uLXJvdy1jbGljaz1cXFwic2VsZWN0ZWRGcm9tRmllbGRcXFwiIHNpemU9XFxcInNtYWxsXFxcIiA6aGVpZ2h0PVxcXCJkaWFsb2dIZWlnaHQtMTgwXFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJmcm9tVGFibGVGaWVsZC5jb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwiZnJvbVRhYmxlRmllbGQuZmllbGREYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIj48L2ktdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6cmlnaHQ7d2lkdGg6IDQ5JTtoZWlnaHQ6IDEwMCU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwicmVzdWx0RGF0YS50by50ZXh0XFxcIiBzdWZmaXg9XFxcIm1kLWRvbmUtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1N0VEM1xcdTY3NUZcXHU1MTczXFx1ODA1NFxcdTVCNTdcXHU2QkI1XFxcIiBzdHlsZT1cXFwibWFyZ2luLWJvdHRvbTogMTBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgQG9uLXJvdy1jbGljaz1cXFwic2VsZWN0ZWRUb0ZpZWxkXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgOmhlaWdodD1cXFwiZGlhbG9nSGVpZ2h0LTE4MFxcXCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cXFwidG9UYWJsZUZpZWxkLmNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJ0b1RhYmxlRmllbGQuZmllbGREYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIj48L2ktdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIiBzdHlsZT1cXFwiYm90dG9tOiAxMnB4O3JpZ2h0OiAxMnB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjb21wbGV0ZWQoKVxcXCIgaWNvbj1cXFwibWQtY2hlY2ttYXJrXFxcIj5cXHU3ODZFXFx1OEJBNDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCI+XFx1NTE3M1xcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImRiLXRhYmxlLXJlbGF0aW9uLWNvbXBcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZXNEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVzRm9yWlRyZWVOb2RlTGlzdFwiLFxuICAgICAgICBnZXRUYWJsZUZpZWxkc1VybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlRmllbGRzQnlUYWJsZUlkXCJcbiAgICAgIH0sXG4gICAgICByZWxhdGlvblRhYmxlVHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0YWJsZVRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wO1xuXG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkUmVsYXRpb25UYWJsZU5vZGUodHJlZU5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdGFibGVUcmVlUm9vdERhdGE6IHtcbiAgICAgICAgICBpZDogXCItMVwiLFxuICAgICAgICAgIHRleHQ6IFwi5pWw5o2u5YWz6IGUXCIsXG4gICAgICAgICAgcGFyZW50SWQ6IFwiXCIsXG4gICAgICAgICAgbm9kZVR5cGVOYW1lOiBcIuagueiKgueCuVwiLFxuICAgICAgICAgIGljb246IFwiL1RoZW1lcy9QbmcxNlgxNi9jb2luc19hZGQucG5nXCIsXG4gICAgICAgICAgX25vZGVFeFR5cGU6IFwicm9vdFwiLFxuICAgICAgICAgIHRhYmxlSWQ6IFwiLTFcIlxuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50U2VsZWN0ZWROb2RlOiBudWxsXG4gICAgICB9LFxuICAgICAgcmVsYXRpb25UYWJsZUVkaXRvclZpZXc6IHtcbiAgICAgICAgaXNTaG93VGFibGVFZGl0RGV0YWlsOiBmYWxzZSxcbiAgICAgICAgaXNTdWJFZGl0VHI6IGZhbHNlLFxuICAgICAgICBpc01haW5FZGl0VHI6IGZhbHNlLFxuICAgICAgICBzZWxQS0RhdGE6IFtdLFxuICAgICAgICBzZWxTZWxmS2V5RGF0YTogW10sXG4gICAgICAgIHNlbEZvcmVpZ25LZXlEYXRhOiBbXVxuICAgICAgfSxcbiAgICAgIGVtcHR5RWRpdG9yRGF0YToge1xuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgcGFyZW50SWQ6IFwiXCIsXG4gICAgICAgIHNpbmdsZU5hbWU6IFwiXCIsXG4gICAgICAgIHBrRmllbGROYW1lOiBcIlwiLFxuICAgICAgICBkZXNjOiBcIlwiLFxuICAgICAgICBzZWxmS2V5RmllbGROYW1lOiBcIlwiLFxuICAgICAgICBvdXRlcktleUZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgcmVsYXRpb25UeXBlOiBcIjFUb05cIixcbiAgICAgICAgaXNTYXZlOiBcInRydWVcIixcbiAgICAgICAgY29uZGl0aW9uOiBcIlwiLFxuICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICB0YWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIHRhYmxlQ2FwdGlvbjogXCJcIlxuICAgICAgfSxcbiAgICAgIGN1cnJlbnRFZGl0b3JEYXRhOiB7XG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBwYXJlbnRJZDogXCJcIixcbiAgICAgICAgc2luZ2xlTmFtZTogXCJcIixcbiAgICAgICAgcGtGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIGRlc2M6IFwiXCIsXG4gICAgICAgIHNlbGZLZXlGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIG91dGVyS2V5RmllbGROYW1lOiBcIlwiLFxuICAgICAgICByZWxhdGlvblR5cGU6IFwiMVRvTlwiLFxuICAgICAgICBpc1NhdmU6IFwidHJ1ZVwiLFxuICAgICAgICBjb25kaXRpb246IFwiXCIsXG4gICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgdGFibGVDYXB0aW9uOiBcIlwiXG4gICAgICB9LFxuICAgICAgc2VsZWN0VGFibGVUcmVlOiB7XG4gICAgICAgIG9sZFNlbGVjdGVkREJMaW5rSWQ6IFwiSkJ1aWxkNGRMb2NhdGlvbkRCTGlua1wiLFxuICAgICAgICBkaXNhYmxlZERCTGluazogZmFsc2UsXG4gICAgICAgIGRiTGlua0VudGl0aWVzOiBbXSxcbiAgICAgICAgdGFibGVUcmVlT2JqOiBudWxsLFxuICAgICAgICB0YWJsZVRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIGlmICh0cmVlTm9kZS5ub2RlVHlwZU5hbWUgPT0gXCJUYWJsZVwiKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9zZWxmID0gd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wO1xuICAgICAgICAgICAgICAgICQoXCIjZGl2U2VsZWN0VGFibGVcIikuZGlhbG9nKFwiY2xvc2VcIik7XG5cbiAgICAgICAgICAgICAgICBfc2VsZi5hZGRUYWJsZVRvUmVsYXRpb25UYWJsZVRyZWUodHJlZU5vZGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0YWJsZVRyZWVEYXRhOiBudWxsLFxuICAgICAgICBhbGxUYWJsZVRyZWVEYXRhOiBudWxsLFxuICAgICAgICBzZWxlY3RlZFRhYmxlTmFtZTogXCLml6BcIlxuICAgICAgfSxcbiAgICAgIHRlbXBEYXRhU3RvcmU6IHt9LFxuICAgICAgcmVzdWx0RGF0YTogW10sXG4gICAgICB0cmVlTm9kZVNldHRpbmc6IHtcbiAgICAgICAgTWFpblRhYmxlTm9kZUltZzogXCIvVGhlbWVzL1BuZzE2WDE2L3BhZ2Vfa2V5LnBuZ1wiLFxuICAgICAgICBTdWJUYWJsZU5vZGVJbWc6IFwiL1RoZW1lcy9QbmcxNlgxNi9wYWdlX3JlZnJlc2gucG5nXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuZ2V0VGFibGVzQW5kQmluZE9sZFNlbGVjdGVkKCk7XG4gICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjZGF0YVJlbGF0aW9uWlRyZWVVTFwiKSwgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50YWJsZVRyZWVTZXR0aW5nLCB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVJvb3REYXRhKTtcbiAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSA9IHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5nZXROb2RlQnlQYXJhbShcImlkXCIsIFwiLTFcIik7XG4gICAgd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wID0gdGhpcztcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBjdXJyZW50RWRpdG9yRGF0YToge1xuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwsIG9sZFZhbCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLnJlc3VsdERhdGFbaV0uaWQgPT0gdmFsLmlkKSB7XG4gICAgICAgICAgICB0aGlzLnJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRoaXMucmVzdWx0RGF0YVtpXSwgdmFsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBkZWVwOiB0cnVlXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgcmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWU6IGZ1bmN0aW9uIHJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRvT2JqLCBmcm9tT2JqKSB7XG4gICAgICB0b09iai5zaW5nbGVOYW1lID0gZnJvbU9iai5zaW5nbGVOYW1lO1xuICAgICAgdG9PYmoucGtGaWVsZE5hbWUgPSBmcm9tT2JqLnBrRmllbGROYW1lO1xuICAgICAgdG9PYmouZGVzYyA9IGZyb21PYmouZGVzYztcbiAgICAgIHRvT2JqLnNlbGZLZXlGaWVsZE5hbWUgPSBmcm9tT2JqLnNlbGZLZXlGaWVsZE5hbWU7XG4gICAgICB0b09iai5vdXRlcktleUZpZWxkTmFtZSA9IGZyb21PYmoub3V0ZXJLZXlGaWVsZE5hbWU7XG4gICAgICB0b09iai5yZWxhdGlvblR5cGUgPSBmcm9tT2JqLnJlbGF0aW9uVHlwZTtcbiAgICAgIHRvT2JqLmlzU2F2ZSA9IGZyb21PYmouaXNTYXZlO1xuICAgICAgdG9PYmouY29uZGl0aW9uID0gZnJvbU9iai5jb25kaXRpb247XG4gICAgfSxcbiAgICBnZXRUYWJsZUZpZWxkc0J5VGFibGVJZDogZnVuY3Rpb24gZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQodGFibGVJZCkge1xuICAgICAgaWYgKHRhYmxlSWQgPT0gXCItMVwiKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50ZW1wRGF0YVN0b3JlW1widGFibGVGaWVsZF9cIiArIHRhYmxlSWRdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICAgIEFqYXhVdGlsaXR5LlBvc3RTeW5jKHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVGaWVsZHNVcmwsIHtcbiAgICAgICAgICB0YWJsZUlkOiB0YWJsZUlkXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIF9zZWxmLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF0gPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50ZW1wRGF0YVN0b3JlW1widGFibGVGaWVsZF9cIiArIHRhYmxlSWRdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldEVtcHR5UmVzdWx0SXRlbTogZnVuY3Rpb24gZ2V0RW1wdHlSZXN1bHRJdGVtKCkge1xuICAgICAgcmV0dXJuIEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuZW1wdHlFZGl0b3JEYXRhKTtcbiAgICB9LFxuICAgIGdldEV4aXN0UmVzdWx0SXRlbTogZnVuY3Rpb24gZ2V0RXhpc3RSZXN1bHRJdGVtKGlkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5yZXN1bHREYXRhW2ldLmlkID09IGlkKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0RGF0YVtpXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGdldFRhYmxlc0FuZEJpbmRPbGRTZWxlY3RlZDogZnVuY3Rpb24gZ2V0VGFibGVzQW5kQmluZE9sZFNlbGVjdGVkKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0RhdGFVcmwsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLnNlbGVjdFRhYmxlVHJlZS5kYkxpbmtFbnRpdGllcyA9IHJlc3VsdC5leEtWRGF0YS5kYkxpbmtFbnRpdHlMaXN0O1xuICAgICAgICAgIF9zZWxmLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBfc2VsZi5iaW5kU2VsZWN0VGFibGVUcmVlKHRydWUpO1xuXG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVPYmosIF9zZWxmLiRyZWZzLnR4dF90YWJsZV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBiaW5kU2VsZWN0VGFibGVUcmVlOiBmdW5jdGlvbiBiaW5kU2VsZWN0VGFibGVUcmVlKGlzR2V0Q29va2llT2xkU2VsZWN0ZWQpIHtcbiAgICAgIHZhciBvbGRTZWxlY3RlZERCTGlua0lkID0gQ29va2llVXRpbGl0eS5HZXRDb29raWUoXCJEQlRSQ0RCTElOS0lEXCIpO1xuXG4gICAgICBpZiAob2xkU2VsZWN0ZWREQkxpbmtJZCAmJiBpc0dldENvb2tpZU9sZFNlbGVjdGVkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWQgPSBvbGRTZWxlY3RlZERCTGlua0lkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2xkU2VsZWN0ZWREQkxpbmtJZCA9IHRoaXMuc2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWQ7XG4gICAgICB9XG5cbiAgICAgIHZhciBiaW5kVG9UcmVlRGF0YSA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKG9sZFNlbGVjdGVkREJMaW5rSWQgPT0gdGhpcy5zZWxlY3RUYWJsZVRyZWUuYWxsVGFibGVUcmVlRGF0YVtpXS5vdXRlcklkKSB7XG4gICAgICAgICAgYmluZFRvVHJlZURhdGEucHVzaCh0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVEYXRhID0gYmluZFRvVHJlZURhdGE7XG4gICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNzZWxlY3RUYWJsZVpUcmVlVUxcIiksIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZVNldHRpbmcsIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZURhdGEpO1xuICAgICAgdGhpcy5zZWxlY3RUYWJsZVRyZWUudGFibGVUcmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICB9LFxuICAgIGNoYW5nZURCTGluazogZnVuY3Rpb24gY2hhbmdlREJMaW5rKGRiTGlua0lkKSB7XG4gICAgICBDb29raWVVdGlsaXR5LlNldENvb2tpZTFNb250aChcIkRCVFJDREJMSU5LSURcIiwgZGJMaW5rSWQpO1xuICAgICAgdGhpcy5iaW5kU2VsZWN0VGFibGVUcmVlKHRydWUpO1xuICAgIH0sXG4gICAgZ2V0TWFpblRhYmxlREJMaW5rSWQ6IGZ1bmN0aW9uIGdldE1haW5UYWJsZURCTGlua0lkKCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldLmlkID09IHRoaXMuZ2V0TWFpblRhYmxlSWQoKSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldLm91dGVySWQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfSxcbiAgICBkZWxldGVTZWxlY3RlZFJlbGF0aW9uVHJlZU5vZGU6IGZ1bmN0aW9uIGRlbGV0ZVNlbGVjdGVkUmVsYXRpb25UcmVlTm9kZSgpIHtcbiAgICAgIGlmICh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUoKSkge1xuICAgICAgICAgIGlmICghdGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLmlzUGFyZW50KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBpZiAodGhpcy5yZXN1bHREYXRhW2ldLmlkID09IHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5pZCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0RGF0YS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5yZXN1bHRJdGVtQ29weUVkaXRFbmFibGVWYWx1ZSh0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLCB0aGlzLmVtcHR5RWRpdG9yRGF0YSk7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLmlkID0gXCJcIjtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEVkaXRvckRhdGEucGFyZW50SWQgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy4kcmVmcy5zcWxHZW5lcmFsRGVzaWduQ29tcC5zZXRWYWx1ZShcIlwiKTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsUEtEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFNlbGZLZXlEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbEZvcmVpZ25LZXlEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU2hvd1RhYmxlRWRpdERldGFpbCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqLnJlbW92ZU5vZGUodGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUgPSBudWxsO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuS4jeiDveWIoOmZpOeItuiKgueCuSFcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi5LiN6IO95Yig6Zmk5qC56IqC54K5IVwiKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7fpgInmi6nopoHliKDpmaTnmoToioLngrkhXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYmVnaW5TZWxlY3RUYWJsZVRvUmVsYXRpb25UYWJsZTogZnVuY3Rpb24gYmVnaW5TZWxlY3RUYWJsZVRvUmVsYXRpb25UYWJsZSgpIHtcbiAgICAgIGlmICh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUpIHtcbiAgICAgICAgJChcIiNkaXZTZWxlY3RUYWJsZVwiKS5kaWFsb2coe1xuICAgICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICAgIHdpZHRoOiA3MDBcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBtYWluVGFibGVEQkxpbmtJZCA9IHRoaXMuZ2V0TWFpblRhYmxlREJMaW5rSWQoKTtcblxuICAgICAgICBpZiAobWFpblRhYmxlREJMaW5rSWQpIHtcbiAgICAgICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS5vbGRTZWxlY3RlZERCTGlua0lkID0gbWFpblRhYmxlREJMaW5rSWQ7XG4gICAgICAgICAgdGhpcy5iaW5kU2VsZWN0VGFibGVUcmVlKGZhbHNlKTtcbiAgICAgICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS5kaXNhYmxlZERCTGluayA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RUYWJsZVRyZWUuZGlzYWJsZWREQkxpbmsgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6YCJ5oup5LiA5Liq54i26IqC54K5IVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFwcGVuZE1haW5UYWJsZU5vZGVQcm9wOiBmdW5jdGlvbiBhcHBlbmRNYWluVGFibGVOb2RlUHJvcChub2RlKSB7XG4gICAgICBub2RlLl9ub2RlRXhUeXBlID0gXCJNYWluTm9kZVwiO1xuICAgICAgbm9kZS5pY29uID0gdGhpcy50cmVlTm9kZVNldHRpbmcuTWFpblRhYmxlTm9kZUltZztcbiAgICB9LFxuICAgIGFwcGVuZFN1YlRhYmxlTm9kZVByb3A6IGZ1bmN0aW9uIGFwcGVuZFN1YlRhYmxlTm9kZVByb3Aobm9kZSkge1xuICAgICAgbm9kZS5fbm9kZUV4VHlwZSA9IFwiU3ViTm9kZVwiO1xuICAgICAgbm9kZS5pY29uID0gdGhpcy50cmVlTm9kZVNldHRpbmcuU3ViVGFibGVOb2RlSW1nO1xuICAgIH0sXG4gICAgYnVpbGRSZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gYnVpbGRSZWxhdGlvblRhYmxlTm9kZShzb3VyY2VOb2RlLCB0cmVlTm9kZUlkKSB7XG4gICAgICBpZiAodGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLl9ub2RlRXhUeXBlID09IFwicm9vdFwiKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kTWFpblRhYmxlTm9kZVByb3Aoc291cmNlTm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmFwcGVuZFN1YlRhYmxlTm9kZVByb3Aoc291cmNlTm9kZSk7XG4gICAgICB9XG5cbiAgICAgIHNvdXJjZU5vZGUudGFibGVJZCA9IHNvdXJjZU5vZGUuaWQ7XG5cbiAgICAgIGlmICh0cmVlTm9kZUlkKSB7XG4gICAgICAgIHNvdXJjZU5vZGUuaWQgPSB0cmVlTm9kZUlkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc291cmNlTm9kZS5pZCA9IFN0cmluZ1V0aWxpdHkuR3VpZCgpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc291cmNlTm9kZTtcbiAgICB9LFxuICAgIGdldE1haW5SZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkge1xuICAgICAgdmFyIG5vZGUgPSB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJfbm9kZUV4VHlwZVwiLCBcIk1haW5Ob2RlXCIpO1xuXG4gICAgICBpZiAobm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBnZXRNYWluVGFibGVJZDogZnVuY3Rpb24gZ2V0TWFpblRhYmxlSWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSA/IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkudGFibGVJZCA6IFwiXCI7XG4gICAgfSxcbiAgICBnZXRNYWluVGFibGVOYW1lOiBmdW5jdGlvbiBnZXRNYWluVGFibGVOYW1lKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkgPyB0aGlzLmdldE1haW5SZWxhdGlvblRhYmxlTm9kZSgpLnZhbHVlIDogXCJcIjtcbiAgICB9LFxuICAgIGdldE1haW5UYWJsZUNhcHRpb246IGZ1bmN0aW9uIGdldE1haW5UYWJsZUNhcHRpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSA/IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkuYXR0cjEgOiBcIlwiO1xuICAgIH0sXG4gICAgaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaWQgPT0gXCItMVwiO1xuICAgIH0sXG4gICAgaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuX25vZGVFeFR5cGUgPT0gXCJNYWluTm9kZVwiO1xuICAgIH0sXG4gICAgYWRkVGFibGVUb1JlbGF0aW9uVGFibGVUcmVlOiBmdW5jdGlvbiBhZGRUYWJsZVRvUmVsYXRpb25UYWJsZVRyZWUobmV3Tm9kZSkge1xuICAgICAgZGVidWdnZXI7XG4gICAgICBuZXdOb2RlID0gdGhpcy5idWlsZFJlbGF0aW9uVGFibGVOb2RlKG5ld05vZGUpO1xuICAgICAgdmFyIHRlbXBOb2RlID0gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKTtcblxuICAgICAgaWYgKHRlbXBOb2RlICE9IG51bGwpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpKSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi5Y+q5YWB6K645a2Y5Zyo5LiA5Liq5Li76K6w5b2VIVwiLCBudWxsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqLmFkZE5vZGVzKHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSwgLTEsIG5ld05vZGUsIGZhbHNlKTtcbiAgICAgIHZhciBuZXdSZXN1bHRJdGVtID0gdGhpcy5nZXRFbXB0eVJlc3VsdEl0ZW0oKTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0uaWQgPSBuZXdOb2RlLmlkO1xuICAgICAgbmV3UmVzdWx0SXRlbS5wYXJlbnRJZCA9IHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5pZDtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVJZCA9IG5ld05vZGUudGFibGVJZDtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVOYW1lID0gbmV3Tm9kZS52YWx1ZTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVDYXB0aW9uID0gbmV3Tm9kZS5hdHRyMTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVDb2RlID0gbmV3Tm9kZS5jb2RlO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLnB1c2gobmV3UmVzdWx0SXRlbSk7XG4gICAgfSxcbiAgICBzZWxlY3RlZFJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBzZWxlY3RlZFJlbGF0aW9uVGFibGVOb2RlKG5vZGUpIHtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSA9IG5vZGU7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU2hvd1RhYmxlRWRpdERldGFpbCA9ICF0aGlzLmlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUoKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNNYWluRWRpdFRyID0gdGhpcy5pc1NlbGVjdGVkTWFpblJlbGF0aW9uVGFibGVOb2RlKCk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU3ViRWRpdFRyID0gIXRoaXMuaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSgpO1xuXG4gICAgICBpZiAodGhpcy5pc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFBLRGF0YSA9IHRoaXMuZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQobm9kZS50YWJsZUlkKSAhPSBudWxsID8gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChub2RlLnRhYmxlSWQpIDogW107XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFNlbGZLZXlEYXRhID0gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChub2RlLnRhYmxlSWQpICE9IG51bGwgPyB0aGlzLmdldFRhYmxlRmllbGRzQnlUYWJsZUlkKG5vZGUudGFibGVJZCkgOiBbXTtcbiAgICAgIHZhciBwYXJlbnROb2RlID0gbm9kZS5nZXRQYXJlbnROb2RlKCk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbEZvcmVpZ25LZXlEYXRhID0gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChwYXJlbnROb2RlLnRhYmxlSWQpICE9IG51bGwgPyB0aGlzLmdldFRhYmxlRmllbGRzQnlUYWJsZUlkKHBhcmVudE5vZGUudGFibGVJZCkgOiBbXTtcbiAgICAgIHRoaXMuY3VycmVudEVkaXRvckRhdGEuaWQgPSB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaWQ7XG4gICAgICB0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLnBhcmVudElkID0gcGFyZW50Tm9kZS5pZDtcbiAgICAgIHZhciBleGlzdFJlc3VsdEl0ZW0gPSB0aGlzLmdldEV4aXN0UmVzdWx0SXRlbShub2RlLmlkKTtcblxuICAgICAgaWYgKGV4aXN0UmVzdWx0SXRlbSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMucmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWUodGhpcy5jdXJyZW50RWRpdG9yRGF0YSwgZXhpc3RSZXN1bHRJdGVtKTtcblxuICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfc2VsZi4kcmVmcy5zcWxHZW5lcmFsRGVzaWduQ29tcC5zZXRWYWx1ZShfc2VsZi5jdXJyZW50RWRpdG9yRGF0YS5jb25kaXRpb24pO1xuXG4gICAgICAgICAgX3NlbGYuJHJlZnMuc3FsR2VuZXJhbERlc2lnbkNvbXAuc2V0QWJvdXRUYWJsZUZpZWxkcyhfc2VsZi5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxTZWxmS2V5RGF0YSwgX3NlbGYucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsRm9yZWlnbktleURhdGEpO1xuICAgICAgICB9LCAzMDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWxlcnQoXCLpgJrov4dnZXRFeGlzdFJlc3VsdEl0ZW3ojrflj5bkuI3liLDmlbDmja4hXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0UmVzdWx0RGF0YTogZnVuY3Rpb24gZ2V0UmVzdWx0RGF0YSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlc3VsdERhdGE7XG4gICAgfSxcbiAgICBzZXJpYWxpemVSZWxhdGlvbjogZnVuY3Rpb24gc2VyaWFsaXplUmVsYXRpb24oaXNGb3JtYXQpIHtcbiAgICAgIGFsZXJ0KFwic2VyaWFsaXplUmVsYXRpb27lt7Lnu4/lgZznlKhcIik7XG4gICAgICByZXR1cm47XG5cbiAgICAgIGlmIChpc0Zvcm1hdCkge1xuICAgICAgICByZXR1cm4gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nRm9ybWF0KHRoaXMucmVzdWx0RGF0YSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcodGhpcy5yZXN1bHREYXRhKTtcbiAgICB9LFxuICAgIGRlc2VyaWFsaXplUmVsYXRpb246IGZ1bmN0aW9uIGRlc2VyaWFsaXplUmVsYXRpb24oanNvblN0cmluZykge1xuICAgICAgYWxlcnQoXCJkZXNlcmlhbGl6ZVJlbGF0aW9u5bey57uP5YGc55SoXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgbWFpblRhYmxlSWQ6IHRoaXMuZ2V0TWFpblRhYmxlSWQoKSxcbiAgICAgICAgbWFpblRhYmxlTmFtZTogdGhpcy5nZXRNYWluVGFibGVOYW1lKCksXG4gICAgICAgIG1haW5UYWJsZUNhcHRpb246IHRoaXMuZ2V0TWFpblRhYmxlQ2FwdGlvbigpLFxuICAgICAgICByZWxhdGlvbkRhdGE6IHRoaXMucmVzdWx0RGF0YVxuICAgICAgfTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24gc2V0VmFsdWUoanNvblN0cmluZykge1xuICAgICAgdmFyIHRlbXBEYXRhID0gSnNvblV0aWxpdHkuU3RyaW5nVG9Kc29uKGpzb25TdHJpbmcpO1xuICAgICAgdGhpcy5yZXN1bHREYXRhID0gdGVtcERhdGE7XG4gICAgICB2YXIgdHJlZU5vZGVEYXRhID0gbmV3IEFycmF5KCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcERhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHRyZWVOb2RlID0ge1xuICAgICAgICAgIFwidmFsdWVcIjogdGVtcERhdGFbaV0udGFibGVOYW1lLFxuICAgICAgICAgIFwiYXR0cjFcIjogdGVtcERhdGFbaV0udGFibGVDYXB0aW9uLFxuICAgICAgICAgIFwidGV4dFwiOiBcIuOAkFwiICsgdGVtcERhdGFbaV0udGFibGVDb2RlICsgXCLjgJFcIiArIHRlbXBEYXRhW2ldLnRhYmxlQ2FwdGlvbiArIFwi44CQXCIgKyB0ZW1wRGF0YVtpXS50YWJsZU5hbWUgKyBcIuOAkVwiLFxuICAgICAgICAgIFwiaWRcIjogdGVtcERhdGFbaV0uaWQsXG4gICAgICAgICAgXCJwYXJlbnRJZFwiOiB0ZW1wRGF0YVtpXS5wYXJlbnRJZCxcbiAgICAgICAgICBcInRhYmxlSWRcIjogdGVtcERhdGFbaV0udGFibGVJZCxcbiAgICAgICAgICBcInRhYmxlTmFtZVwiOiB0ZW1wRGF0YVtpXS50YWJsZU5hbWUsXG4gICAgICAgICAgXCJ0YWJsZUNhcHRpb25cIjogdGVtcERhdGFbaV0udGFibGVDYXB0aW9uLFxuICAgICAgICAgIFwidGFibGVDb2RlXCI6IHRlbXBEYXRhW2ldLnRhYmxlQ29kZVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh0ZW1wRGF0YVtpXS5wYXJlbnRJZCA9PSBcIi0xXCIpIHtcbiAgICAgICAgICB0aGlzLmFwcGVuZE1haW5UYWJsZU5vZGVQcm9wKHRyZWVOb2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmFwcGVuZFN1YlRhYmxlTm9kZVByb3AodHJlZU5vZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJlZU5vZGVEYXRhLnB1c2godHJlZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICB0cmVlTm9kZURhdGEucHVzaCh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVJvb3REYXRhKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI2RhdGFSZWxhdGlvblpUcmVlVUxcIiksIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudGFibGVUcmVlU2V0dGluZywgdHJlZU5vZGVEYXRhKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgfSxcbiAgICBhbGVydFNlcmlhbGl6ZVJlbGF0aW9uOiBmdW5jdGlvbiBhbGVydFNlcmlhbGl6ZVJlbGF0aW9uKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydEpzb25Db2RlKHRoaXMucmVzdWx0RGF0YSk7XG4gICAgfSxcbiAgICBpbnB1dERlc2VyaWFsaXplUmVsYXRpb246IGZ1bmN0aW9uIGlucHV0RGVzZXJpYWxpemVSZWxhdGlvbigpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuUHJvbXB0KHdpbmRvdywge1xuICAgICAgICB3aWR0aDogOTAwLFxuICAgICAgICBoZWlnaHQ6IDYwMFxuICAgICAgfSwgRGlhbG9nVXRpbGl0eS5EaWFsb2dQcm9tcHRJZCwgXCLor7fotLTlhaXmlbDmja7lhbPogZRKc29u6K6+572u5a2X56ym5LiyXCIsIGZ1bmN0aW9uIChqc29uU3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wLnNldFZhbHVlKGpzb25TdHJpbmcpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgYWxlcnQoXCLlj43luo/liJfljJblpLHotKU6XCIgKyBlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IGNsYXNzPVxcXCJkYi10YWJsZS1yZWxhdGlvbi1jb21wXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHg7bWFyZ2luLXRvcDogMHB4O21hcmdpbi1ib3R0b206IDEwcHhcXFwiPlxcdTY1NzBcXHU2MzZFXFx1NTE3M1xcdTdDRkJcXHU1MTczXFx1ODA1NFxcdThCQkVcXHU3RjZFPC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogMzUwcHg7aGVpZ2h0OiAzMzBweDtib3JkZXI6ICNkZGRkZjEgMXB4IHNvbGlkO2JvcmRlci1yYWRpdXM6IDRweDtwYWRkaW5nOiAxMHB4IDEwcHggMTBweCAxMHB4O1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHNoYXBlPVxcXCJjaXJjbGVcXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBAY2xpY2s9XFxcImJlZ2luU2VsZWN0VGFibGVUb1JlbGF0aW9uVGFibGVcXFwiPiZuYnNwO1xcdTZERkJcXHU1MkEwJm5ic3A7PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJkZWxldGVTZWxlY3RlZFJlbGF0aW9uVHJlZU5vZGVcXFwiPiZuYnNwO1xcdTUyMjBcXHU5NjY0Jm5ic3A7PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJhbGVydFNlcmlhbGl6ZVJlbGF0aW9uXFxcIj5cXHU1RThGXFx1NTIxN1xcdTUzMTY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImlucHV0RGVzZXJpYWxpemVSZWxhdGlvblxcXCI+XFx1NTNDRFxcdTVFOEZcXHU1MjE3XFx1NTMxNjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uPlxcdThCRjRcXHU2NjBFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJkYXRhUmVsYXRpb25aVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiIHN0eWxlPVxcXCJvdmVyZmxvdy14OiBoaWRkZW5cXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7d2lkdGg6IDYzMHB4O2hlaWdodDogMzMwcHg7Ym9yZGVyOiAjZGRkZGYxIDFweCBzb2xpZDtib3JkZXItcmFkaXVzOiA0cHg7cGFkZGluZzogMTBweCAxMHB4IDEwcHggMTBweDtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVxcXCJsaWdodC1ncmF5LXRhYmxlXFxcIiBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgdi1pZj1cXFwicmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNTaG93VGFibGVFZGl0RGV0YWlsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNyVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAzMyVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNSVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAzNSVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlNpbmdsZU5hbWVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5zaW5nbGVOYW1lXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTY3MkNcXHU1MTczXFx1ODA1NFxcdTRFMkRcXHU3Njg0XFx1NTUyRlxcdTRFMDBcXHU1NDBEXFx1NzlGMCxcXHU1M0VGXFx1NEVFNVxcdTRFM0FcXHU3QTdBXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlBLS2V5XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktc2VsZWN0IHBsYWNlaG9sZGVyPVxcXCJcXHU5RUQ4XFx1OEJBNFxcdTRGN0ZcXHU3NTI4SWRcXHU1QjU3XFx1NkJCNVxcXCIgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEucGtGaWVsZE5hbWVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6MTk5cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XFxcIml0ZW0gaW4gcmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsUEtEYXRhXFxcIiA6dmFsdWU9XFxcIml0ZW0uZmllbGROYW1lXFxcIiA6a2V5PVxcXCJpdGVtLmZpZWxkTmFtZVxcXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9XFxcInJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU3ViRWRpdFRyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlxcdTY1NzBcXHU2MzZFXFx1NTE3M1xcdTdDRkJcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEucmVsYXRpb25UeXBlXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIHNpemU9XFxcInNtYWxsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCIxVG8xXFxcIj4xOjE8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIjFUb05cXFwiPjE6TjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5cXHU2NjJGXFx1NTQyNlxcdTRGRERcXHU1QjU4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLmlzU2F2ZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwidHJ1ZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZmFsc2VcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj1cXFwicmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNTdWJFZGl0VHJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NjcyQ1xcdThFQUJcXHU1MTczXFx1ODA1NFxcdTVCNTdcXHU2QkI1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCBwbGFjZWhvbGRlcj1cXFwiXFx1OUVEOFxcdThCQTRcXHU0RjdGXFx1NzUyOElkXFx1NUI1N1xcdTZCQjVcXFwiIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLnNlbGZLZXlGaWVsZE5hbWVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6MTk5cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XFxcIml0ZW0gaW4gcmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsU2VsZktleURhdGFcXFwiIDp2YWx1ZT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiIDprZXk9XFxcIml0ZW0uZmllbGROYW1lXFxcIj57e2l0ZW0uZmllbGRDYXB0aW9ufX08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NTkxNlxcdTgwNTRcXHU1QjU3XFx1NkJCNVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XFxcIlxcdTlFRDhcXHU4QkE0XFx1NEY3RlxcdTc1MjhJZFxcdTVCNTdcXHU2QkI1XFxcIiB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5vdXRlcktleUZpZWxkTmFtZVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHN0eWxlPVxcXCJ3aWR0aDoxOTlweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2LWZvcj1cXFwiaXRlbSBpbiByZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxGb3JlaWduS2V5RGF0YVxcXCIgOnZhbHVlPVxcXCJpdGVtLmZpZWxkTmFtZVxcXCIgOmtleT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiPnt7aXRlbS5maWVsZENhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPkRlc2NcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5kZXNjXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjRcXHU2NjBFXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NTJBMFxcdThGN0RcXHU2NzYxXFx1NEVGNlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcWwtZ2VuZXJhbC1kZXNpZ24tY29tcCByZWY9XFxcInNxbEdlbmVyYWxEZXNpZ25Db21wXFxcIiA6c3FsRGVzaWduZXJIZWlnaHQ9XFxcIjc0XFxcIiB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5jb25kaXRpb25cXFwiIDpzaG93RmllbGQ9XFxcInRydWVcXFwiPjwvc3FsLWdlbmVyYWwtZGVzaWduLWNvbXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiZGl2U2VsZWN0VGFibGVcXFwiIHRpdGxlPVxcXCJcXHU4QkY3XFx1OTAwOVxcdTYyRTlcXHU4ODY4XFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X3RhYmxlX3NlYXJjaF90ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1XFx1ODg2OFxcdTU0MERcXHU2MjE2XFx1ODAwNVxcdTY4MDdcXHU5ODk4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwic2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWRcXFwiIHNsb3Q9XFxcInByZXBlbmRcXFwiIHN0eWxlPVxcXCJ3aWR0aDogMjgwcHhcXFwiIEBvbi1jaGFuZ2U9XFxcImNoYW5nZURCTGlua1xcXCIgOmRpc2FibGVkPVxcXCJzZWxlY3RUYWJsZVRyZWUuZGlzYWJsZWREQkxpbmtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gOnZhbHVlPVxcXCJpdGVtLmRiSWRcXFwiIHYtZm9yPVxcXCJpdGVtIGluIHNlbGVjdFRhYmxlVHJlZS5kYkxpbmtFbnRpdGllc1xcXCIgOmtleT1cXFwiaXRlbS5kYklkXFxcIj57e2l0ZW0uZGJMaW5rTmFtZX19PC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJzZWxlY3RUYWJsZVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZSBkaXYtY3VzdG9tLXNjcm9sbFxcXCIgc3R5bGU9XFxcImhlaWdodDogNTAwcHg7b3ZlcmZsb3cteTpzY3JvbGw7b3ZlcmZsb3cteDpoaWRkZW5cXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZGVzaWduLWh0bWwtZWxlbS1saXN0XCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge307XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge30sXG4gIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImRlc2lnbi1odG1sLWVsZW0tbGlzdC13cmFwXCI+XFxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXNpZ24taHRtbC1lbGVtLWxpc3QtaXRlbVwiPuagvOW8j+WMljwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGVzaWduLWh0bWwtZWxlbS1saXN0LWl0ZW1cIj7or7TmmI48L2Rpdj5cXFxuICAgICAgICA8L2Rpdj4nXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImZkLWNvbnRyb2wtYmFzZS1pbmZvXCIsIHtcbiAgcHJvcHM6IFtcInZhbHVlXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBiYXNlSW5mbzoge1xuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgc2VyaWFsaXplOiBcIlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICBjbGFzc05hbWU6IFwiXCIsXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIlwiLFxuICAgICAgICBjdXN0UmVhZG9ubHk6IFwiXCIsXG4gICAgICAgIGN1c3REaXNhYmxlZDogXCJcIixcbiAgICAgICAgc3R5bGU6IFwiXCIsXG4gICAgICAgIGRlc2M6IFwiXCIsXG4gICAgICAgIHN0YXR1czogXCJcIixcbiAgICAgICAgZ3JvdXBOYW1lOiBcIlwiXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBiYXNlSW5mbzogZnVuY3Rpb24gYmFzZUluZm8obmV3VmFsKSB7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIG5ld1ZhbCk7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUobmV3VmFsKSB7XG4gICAgICB0aGlzLmJhc2VJbmZvID0gbmV3VmFsO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJhc2VJbmZvID0gdGhpcy52YWx1ZTtcblxuICAgIGlmICghdGhpcy5iYXNlSW5mby5zdGF0dXMpIHtcbiAgICAgIHRoaXMuYmFzZUluZm8uc3RhdHVzID0gXCJlbmFibGVcIjtcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHt9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIiBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyNDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogOTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDkwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5JRFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uaWRcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5TZXJpYWxpemVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uc2VyaWFsaXplXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZmFsc2VcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTU0MkZcXHU3NTI4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLnN0YXR1c1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJlbmFibGVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZGlzYWJsZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TmFtZVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8ubmFtZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNsYXNzTmFtZVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uY2xhc3NOYW1lXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UGxhY2Vob2xkZXI8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8ucGxhY2Vob2xkZXJcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SZWFkb25seVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5jdXN0UmVhZG9ubHlcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwicmVhZG9ubHlcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwibm9yZWFkb25seVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+RGlzYWJsZWRcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uY3VzdERpc2FibGVkXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImRpc2FibGVkXFxcIj5cXHU2NjJGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIm5vZGlzYWJsZWRcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkdyb3VwPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLmdyb3VwTmFtZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY4MzdcXHU1RjBGXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI3XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5zdHlsZVxcXCI+PC90ZXh0YXJlYT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTU5MDdcXHU2Q0U4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI0XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5kZXNjXFxcIj48L3RleHRhcmVhPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImZkLWNvbnRyb2wtYmluZC10b1wiLCB7XG4gIHByb3BzOiBbXCJiaW5kVG9GaWVsZFByb3BcIiwgXCJkZWZhdWx0VmFsdWVQcm9wXCIsIFwidmFsaWRhdGVSdWxlc1Byb3BcIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRUb0ZpZWxkOiB7XG4gICAgICAgIHJlbGF0aW9uSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgdGFibGVDYXB0aW9uOiBcIlwiLFxuICAgICAgICBmaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIGZpZWxkQ2FwdGlvbjogXCJcIixcbiAgICAgICAgZmllbGREYXRhVHlwZTogXCJcIixcbiAgICAgICAgZmllbGRMZW5ndGg6IFwiXCJcbiAgICAgIH0sXG4gICAgICB2YWxpZGF0ZVJ1bGVzOiB7XG4gICAgICAgIG1zZzogXCJcIixcbiAgICAgICAgcnVsZXM6IFtdXG4gICAgICB9LFxuICAgICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICAgIGRlZmF1bHRUeXBlOiBcIlwiLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRUZXh0OiBcIlwiXG4gICAgICB9LFxuICAgICAgdGVtcERhdGE6IHtcbiAgICAgICAgZGVmYXVsdERpc3BsYXlUZXh0OiBcIlwiXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBiaW5kVG9Qcm9wOiBmdW5jdGlvbiBiaW5kVG9Qcm9wKG5ld1ZhbHVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhuZXdWYWx1ZSk7XG4gICAgfSxcbiAgICBiaW5kVG9GaWVsZFByb3A6IGZ1bmN0aW9uIGJpbmRUb0ZpZWxkUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5iaW5kVG9GaWVsZCA9IG5ld1ZhbHVlO1xuICAgIH0sXG4gICAgZGVmYXVsdFZhbHVlUHJvcDogZnVuY3Rpb24gZGVmYXVsdFZhbHVlUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBuZXdWYWx1ZTtcblxuICAgICAgaWYgKCFTdHJpbmdVdGlsaXR5LklzTnVsbE9yRW1wdHkodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUpKSB7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gRGVmYXVsdFZhbHVlVXRpbGl0eS5mb3JtYXRUZXh0KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlLCB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCk7XG4gICAgICB9XG4gICAgfSxcbiAgICB2YWxpZGF0ZVJ1bGVzUHJvcDogZnVuY3Rpb24gdmFsaWRhdGVSdWxlc1Byb3AobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMudmFsaWRhdGVSdWxlcyA9IG5ld1ZhbHVlO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJpbmRUb0ZpZWxkID0gdGhpcy5iaW5kVG9GaWVsZFByb3A7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBzZXRDb21wbGV0ZWQ6IGZ1bmN0aW9uIHNldENvbXBsZXRlZCgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNldC1jb21wbGV0ZWQnLCB0aGlzLmJpbmRUb0ZpZWxkLCB0aGlzLmRlZmF1bHRWYWx1ZSwgdGhpcy52YWxpZGF0ZVJ1bGVzKTtcbiAgICB9LFxuICAgIHNlbGVjdEJpbmRGaWVsZFZpZXc6IGZ1bmN0aW9uIHNlbGVjdEJpbmRGaWVsZFZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5hcHBGb3JtLnNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nQmVnaW4od2luZG93LCB0aGlzLmdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUoKSk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgdGhpcy5iaW5kVG9GaWVsZCA9IHt9O1xuXG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZE5hbWUgPSByZXN1bHQuZmllbGROYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlSWQgPSByZXN1bHQudGFibGVJZDtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC50YWJsZU5hbWUgPSByZXN1bHQudGFibGVOYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlQ2FwdGlvbiA9IHJlc3VsdC50YWJsZUNhcHRpb247XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGRDYXB0aW9uID0gcmVzdWx0LmZpZWxkQ2FwdGlvbjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZERhdGFUeXBlID0gcmVzdWx0LmZpZWxkRGF0YVR5cGU7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGRMZW5ndGggPSByZXN1bHQuZmllbGRMZW5ndGg7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQucmVsYXRpb25JZCA9IHJlc3VsdC5yZWxhdGlvbklkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZE5hbWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlSWQgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlTmFtZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQudGFibGVDYXB0aW9uID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZENhcHRpb24gPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkRGF0YVR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkTGVuZ3RoID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5yZWxhdGlvbklkID0gXCJcIjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRDb21wbGV0ZWQoKTtcbiAgICB9LFxuICAgIGdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIGdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUodGhpcy5iaW5kVG9GaWVsZCk7XG4gICAgfSxcbiAgICBzZWxlY3REZWZhdWx0VmFsdWVWaWV3OiBmdW5jdGlvbiBzZWxlY3REZWZhdWx0VmFsdWVWaWV3KCkge1xuICAgICAgd2luZG93Ll9TZWxlY3RCaW5kT2JqID0gdGhpcztcbiAgICAgIHdpbmRvdy5wYXJlbnQuYXBwRm9ybS5zZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dCZWdpbih3aW5kb3csIG51bGwpO1xuICAgIH0sXG4gICAgc2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZShyZXN1bHQpIHtcbiAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSA9IHJlc3VsdC5UeXBlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSByZXN1bHQuVmFsdWU7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0ID0gcmVzdWx0LlRleHQ7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gRGVmYXVsdFZhbHVlVXRpbGl0eS5mb3JtYXRUZXh0KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlLCB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRWYWx1ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldENvbXBsZXRlZCgpO1xuICAgIH0sXG4gICAgc2VsZWN0VmFsaWRhdGVSdWxlVmlldzogZnVuY3Rpb24gc2VsZWN0VmFsaWRhdGVSdWxlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50LmFwcEZvcm0uc2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nQmVnaW4od2luZG93LCB0aGlzLmdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlKCkpO1xuICAgIH0sXG4gICAgc2V0U2VsZWN0VmFsaWRhdGVSdWxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGVSdWxlcyA9IHJlc3VsdDtcbiAgICAgICAgdGhpcy5zZXRDb21wbGV0ZWQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGVSdWxlcy5tc2cgPSBcIlwiO1xuICAgICAgICB0aGlzLnZhbGlkYXRlUnVsZXMucnVsZXMgPSBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBnZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRlUnVsZXM7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyODBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTdFRDFcXHU1QjlBXFx1NTIzMFxcdTg4Njg8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0QmluZEZpZWxkVmlld1xcXCI+Li4uPC9idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU4ODY4XFx1N0YxNlxcdTUzRjdcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQudGFibGVJZH19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY1NzBcXHU2MzZFXFx1NkU5MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTg4NjhcXHU1NDBEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e2JpbmRUb0ZpZWxkLnRhYmxlTmFtZX19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTg4NjhcXHU2ODA3XFx1OTg5OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC50YWJsZUNhcHRpb259fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QjU3XFx1NkJCNVxcdTU0MERcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGROYW1lfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUI1N1xcdTZCQjVcXHU2ODA3XFx1OTg5OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC5maWVsZENhcHRpb259fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU3QzdCXFx1NTc4QlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC5maWVsZERhdGFUeXBlfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1OTU3RlxcdTVFQTZcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGRMZW5ndGh9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIj5cXHU5RUQ4XFx1OEJBNFxcdTUwM0M8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0RGVmYXVsdFZhbHVlVmlld1xcXCI+Li4uPC9idXR0b24+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT1cXFwiaGVpZ2h0OiAzNXB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7dGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0fX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjgyMVxcdTlBOENcXHU4OUM0XFx1NTIxOTxidXR0b24gY2xhc3M9XFxcImJ0bi1zZWxlY3QgZnJpZ2h0XFxcIiB2LW9uOmNsaWNrPVxcXCJzZWxlY3RWYWxpZGF0ZVJ1bGVWaWV3XFxcIj4uLi48L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1NjNEMFxcdTc5M0FcXHU2RDg4XFx1NjA2RlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7dmFsaWRhdGVSdWxlcy5tc2d9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1OUE4Q1xcdThCQzFcXHU3QzdCXFx1NTc4QjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNlOGVhZWM7dGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1NTNDMlxcdTY1NzA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9XFxcInJ1bGVJdGVtIGluIHZhbGlkYXRlUnVsZXMucnVsZXNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmO3RleHQtYWxpZ246IGNlbnRlcjtjb2xvcjogI2FkOTM2MVxcXCI+e3tydWxlSXRlbS52YWxpZGF0ZVR5cGV9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNmZmZmZmY7dGV4dC1hbGlnbjogY2VudGVyO1xcXCI+PHAgdi1pZj1cXFwicnVsZUl0ZW0udmFsaWRhdGVQYXJhcyA9PT0gJydcXFwiPlxcdTY1RTBcXHU1M0MyXFx1NjU3MDwvcD48cCB2LWVsc2U+e3tydWxlSXRlbS52YWxpZGF0ZVBhcmFzfX08L3A+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLWRhdGFzb3VyY2VcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXREREdyb3VwVHJlZURhdGE6IFwiL1Jlc3QvU3lzdGVtU2V0dGluZy9EaWN0L0RpY3Rpb25hcnlHcm91cC9HZXRUcmVlRGF0YVwiXG4gICAgICB9LFxuICAgICAgZGRHcm91cFRyZWVPYmo6IG51bGwsXG4gICAgICBkZEdyb3VwVHJlZVNldHRpbmc6IHtcbiAgICAgICAgYXN5bmM6IHtcbiAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgdXJsOiBcIlwiXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgIG5hbWU6IFwiZGljdEdyb3VwVGV4dFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICBpZEtleTogXCJkaWN0R3JvdXBJZFwiLFxuICAgICAgICAgICAgcElkS2V5OiBcImRpY3RHcm91cFBhcmVudElkXCIsXG4gICAgICAgICAgICByb290SWQ6IDBcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERpY3Rpb25hcnlHcm91cCh0cmVlTm9kZS5kaWN0R3JvdXBJZCwgdHJlZU5vZGUuZGljdEdyb3VwVGV4dCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge1xuICAgICAgICAgICAgYXBwTGlzdC50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBub3JtYWxEYXRhU291cmNlOiB7XG4gICAgICAgIGRlZmF1bHRJc051bGw6IFwidHJ1ZVwiLFxuICAgICAgICBzcWxEYXRhU291cmNlOiBcIlwiLFxuICAgICAgICBkaWN0aW9uYXJ5R3JvdXBEYXRhU291cmNlSWQ6IFwiXCIsXG4gICAgICAgIGRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VUZXh0OiBcIlwiLFxuICAgICAgICByZXN0RGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgaW50ZXJmYWNlRGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgc3RhdGljRGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFNlbGVjdGVkOiBcIlwiLFxuICAgICAgICBsYXlvdXREaXJlY3Rpb246IFwidmVydGljYWxcIixcbiAgICAgICAgcm93TnVtOiBcIjBcIixcbiAgICAgICAgZGlzcGxheVZhbHVlSW5UZXh0OiBcImZhbHNlXCJcbiAgICAgIH0sXG4gICAgICBzaG93U2VsZWN0RGljdGlvbmFyeTogZmFsc2UsXG4gICAgICBzaG93RWRpdFN0YXRpYzogZmFsc2UsXG4gICAgICBzaG93UHJvcDogdHJ1ZVxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmluaXREREdyb3VwVHJlZSgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UgPSBlbmNvZGVVUklDb21wb25lbnQodGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UpO1xuICAgICAgcmV0dXJuIHRoaXMubm9ybWFsRGF0YVNvdXJjZTtcbiAgICB9LFxuICAgIHNldFZhbHVlOiBmdW5jdGlvbiBzZXRWYWx1ZShvbGRWYWx1ZSkge1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlID0gb2xkVmFsdWU7XG4gICAgICB0aGlzLm5vcm1hbERhdGFTb3VyY2Uuc3FsRGF0YVNvdXJjZSA9IGRlY29kZVVSSUNvbXBvbmVudChvbGRWYWx1ZS5zcWxEYXRhU291cmNlKTtcbiAgICAgIHRoaXMuJHJlZnMuc3FsR2VuZXJhbERlc2lnbkNvbXAuc2V0VmFsdWUodGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UpO1xuICAgIH0sXG4gICAgYmVnaW5TZWxlY3REaWN0aW9uYXJ5R3JvdXA6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0RGljdGlvbmFyeUdyb3VwKCkge1xuICAgICAgdGhpcy5zaG93U2VsZWN0RGljdGlvbmFyeSA9IHRydWU7XG4gICAgICB0aGlzLnNob3dQcm9wID0gZmFsc2U7XG4gICAgfSxcbiAgICBzZWxlY3RlZERpY3Rpb25hcnlHcm91cDogZnVuY3Rpb24gc2VsZWN0ZWREaWN0aW9uYXJ5R3JvdXAoZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZUlkLCBkaWN0aW9uYXJ5R3JvdXBEYXRhU291cmNlVGV4dCkge1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlLmRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VJZCA9IGRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VJZDtcbiAgICAgIHRoaXMubm9ybWFsRGF0YVNvdXJjZS5kaWN0aW9uYXJ5R3JvdXBEYXRhU291cmNlVGV4dCA9IGRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VUZXh0O1xuICAgICAgdGhpcy5zaG93U2VsZWN0RGljdGlvbmFyeSA9IGZhbHNlO1xuICAgICAgdGhpcy5zaG93UHJvcCA9IHRydWU7XG4gICAgfSxcbiAgICBpbml0RERHcm91cFRyZWU6IGZ1bmN0aW9uIGluaXREREdyb3VwVHJlZSgpIHtcbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXREREdyb3VwVHJlZURhdGEsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSAhPSBudWxsICYmIHJlc3VsdC5kYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0LmRhdGEubGVuZ3RoOyBpKyspIHt9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5kZEdyb3VwVHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI3pUcmVlVUxcIiksIHRoaXMuZGRHcm91cFRyZWVTZXR0aW5nLCByZXN1bHQuZGF0YSk7XG4gICAgICAgICAgdGhpcy5kZEdyb3VwVHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICAgICAgdGhpcy5kZEdyb3VwVHJlZU9iai5faG9zdCA9IHRoaXM7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgdi1zaG93PVxcXCJzaG93UHJvcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMjgwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTlFRDhcXHU4QkE0XFx1N0E3QVxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwibm9ybWFsRGF0YVNvdXJjZS5kZWZhdWx0SXNOdWxsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwidHJ1ZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImZhbHNlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1ODNCN1xcdTUzRDZcXHU2NTcwXFx1NjM2RVxcdTZFOTBcXHU0RjE4XFx1NTE0OFxcdTdFQTdcXHU1MjJCLT5cXHU2NzJDXFx1NTczMFxcdTYzQTVcXHU1M0UzLT5SZXN0XFx1NjNBNVxcdTUzRTMtPlxcdTY1NzBcXHU2MzZFXFx1NUI1N1xcdTUxNzgtPnNxbC0+XFx1OTc1OVxcdTYwMDFcXHU1MDNDXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVNUXFx1NjU3MFxcdTYzNkVcXHU2RTkwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwibm9ybWFsRGF0YVNvdXJjZS5yZXN0RGF0YVNvdXJjZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTY3MkNcXHU1NzMwXFx1NjNBNVxcdTUzRTNcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJub3JtYWxEYXRhU291cmNlLmludGVyZmFjZURhdGFTb3VyY2VcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU2NTcwXFx1NjM2RVxcdTVCNTdcXHU1MTc4XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmbGVmdFxcXCI+XFx1N0VEMVxcdTVCOUFcXHU2NTcwXFx1NjM2RVxcdTVCNTdcXHU1MTc4OlxcdTMwMTA8c3BhbiBzdHlsZT1cXFwiY29sb3I6IHJlZFxcXCI+e3tub3JtYWxEYXRhU291cmNlLmRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VUZXh0fX08L3NwYW4+XFx1MzAxMTwvZGl2PjxidXR0b24gY2xhc3M9XFxcImJ0bi1zZWxlY3QgZnJpZ2h0XFxcIiB2LW9uOmNsaWNrPVxcXCJiZWdpblNlbGVjdERpY3Rpb25hcnlHcm91cFxcXCI+Li4uPC9idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHJvd3NwYW49XFxcIjJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTUUxcXHU2NTcwXFx1NjM2RVxcdTZFOTBcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPVxcXCJjb2xvcjogcmVkXFxcIj5bSVRFWFRcXHU0RTBFSVZBTFVFXFx1OEJGN1xcdTRGN0ZcXHU3NTI4XFx1NTkyN1xcdTUxOTldPC9zcGFuPlxcdTc5M0FcXHU0RjhCOlxcdTMwMTBTRUxFQ1QgJzEnIElURVhULCcyJyBJVkFMVUVcXHUzMDExXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNxbC1nZW5lcmFsLWRlc2lnbi1jb21wIHJlZj1cXFwic3FsR2VuZXJhbERlc2lnbkNvbXBcXFwiIDpzcWwtZGVzaWduZXItaGVpZ2h0PVxcXCI3NFxcXCIgIHYtbW9kZWw9XFxcIm5vcm1hbERhdGFTb3VyY2Uuc3FsRGF0YVNvdXJjZVxcXCI+PC9zcWwtZ2VuZXJhbC1kZXNpZ24tY29tcD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTk3NTlcXHU2MDAxXFx1NTAzQ1xcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiPi4uLjwvYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1OUVEOFxcdThCQTRcXHU5MDA5XFx1NEUyRFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIHYtbW9kZWw9XFxcIm5vcm1hbERhdGFTb3VyY2UuZGVmYXVsdFNlbGVjdGVkXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU2NjNFXFx1NzkzQVZhbHVlXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJub3JtYWxEYXRhU291cmNlLmRpc3BsYXlWYWx1ZUluVGV4dFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJmYWxzZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU2NUI5XFx1NTQxMVxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwibm9ybWFsRGF0YVNvdXJjZS5sYXlvdXREaXJlY3Rpb25cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJ2ZXJ0aWNhbFxcXCI+XFx1NTc4MlxcdTc2RjQ8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJob3Jpem9udGFsXFxcIj5cXHU2QzM0XFx1NUU3MzwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTUzNTVcXHU1MjE3XFx1NEUyQVxcdTY1NzBcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJub3JtYWxEYXRhU291cmNlLnJvd051bVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IG5hbWU9XFxcInNlbGVjdERpY3Rpb25hcnlcXFwiIHYtc2hvdz1cXFwic2hvd1NlbGVjdERpY3Rpb25hcnlcXFwiIHN0eWxlPVxcXCJwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6IDQ5MHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6IDBweDtib3R0b206IDEwcHg7cmlnaHQ6IDBweDtsZWZ0OiAwcHg7b3ZlcmZsb3cteTogYXV0bztvdmVyZmxvdy14OiBoaWRkZW5cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XFxcInpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBuYW1lPVxcXCJzZWxlY3REaWN0aW9uYXJ5XFxcIiB2LXNob3c9XFxcInNob3dFZGl0U3RhdGljXFxcIj5cXHU3RjE2XFx1OEY5MVxcdTk3NTlcXHU2MDAxXFx1NTAzQzwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLWZpZWxkLWFuZC1hcGlcIiwge1xuICBwcm9wczogW1wiZm9ybUlkXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIGFwaToge1xuICAgICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICAgIGdldEFQSURhdGE6IFwiL1Jlc3QvQnVpbGRlci9BcGlJdGVtL0dldEFQSVNGb3JaVHJlZU5vZGVMaXN0XCJcbiAgICAgICAgfSxcbiAgICAgICAgYXBpVHJlZU9iajogbnVsbCxcbiAgICAgICAgYXBpVHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIF9zZWxmLmFwaS5hcGlTZWxlY3REYXRhID0gdHJlZU5vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhcGlEYXRhOiBudWxsLFxuICAgICAgICBhcGlTZWxlY3REYXRhOiBudWxsLFxuICAgICAgICBlZGl0VGFibGVPYmplY3Q6IG51bGwsXG4gICAgICAgIGVkaXRUYWJsZUNvbmZpZzoge1xuICAgICAgICAgIFN0YXR1czogXCJFZGl0XCIsXG4gICAgICAgICAgQWRkQWZ0ZXJSb3dFdmVudDogbnVsbCxcbiAgICAgICAgICBEYXRhRmllbGQ6IFwiZmllbGROYW1lXCIsXG4gICAgICAgICAgVGVtcGxhdGVzOiBbe1xuICAgICAgICAgICAgVGl0bGU6IFwiQVBJ5ZCN56ewXCIsXG4gICAgICAgICAgICBCaW5kTmFtZTogXCJ2YWx1ZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX0xhYmVsXCIsXG4gICAgICAgICAgICBUaXRsZUNlbGxDbGFzc05hbWU6IFwiVGl0bGVDZWxsXCIsXG4gICAgICAgICAgICBGb3JtYXRlcjogZnVuY3Rpb24gRm9ybWF0ZXIodmFsdWUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9zZWxmLmdldEFQSVRleHQodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFRpdGxlOiBcIuiwg+eUqOmhuuW6j1wiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwicnVuVGltZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX1NlbGVjdFwiLFxuICAgICAgICAgICAgQ2xpZW50RGF0YVNvdXJjZTogW3tcbiAgICAgICAgICAgICAgXCJUZXh0XCI6IFwi5LmL5YmNXCIsXG4gICAgICAgICAgICAgIFwiVmFsdWVcIjogXCLkuYvliY1cIlxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICBcIlRleHRcIjogXCLkuYvlkI5cIixcbiAgICAgICAgICAgICAgXCJWYWx1ZVwiOiBcIuS5i+WQjlwiXG4gICAgICAgICAgICB9XSxcbiAgICAgICAgICAgIFdpZHRoOiAxMDBcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBSb3dJZENyZWF0ZXI6IGZ1bmN0aW9uIFJvd0lkQ3JlYXRlcigpIHt9LFxuICAgICAgICAgIFRhYmxlQ2xhc3M6IFwiZWRpdC10YWJsZVwiLFxuICAgICAgICAgIFJlbmRlcmVyVG86IFwiYXBpQ29udGFpbmVyXCIsXG4gICAgICAgICAgVGFibGVJZDogXCJhcGlDb250YWluZXJUYWJsZVwiLFxuICAgICAgICAgIFRhYmxlQXR0cnM6IHtcbiAgICAgICAgICAgIGNlbGxwYWRkaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGNlbGxzcGFjaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGJvcmRlcjogXCIxXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBmaWVsZDoge1xuICAgICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICAgIGdldERhdGFTZXRNYWluVGFibGVGaWVsZHM6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU2V0L0RhdGFzZXRSZWxhdGVkVGFibGUvR2V0RGF0YVNldE1haW5UYWJsZUZpZWxkc1wiXG4gICAgICAgIH0sXG4gICAgICAgIGVkaXRUYWJsZU9iamVjdDogbnVsbCxcbiAgICAgICAgZWRpdFRhYmxlQ29uZmlnOiB7XG4gICAgICAgICAgU3RhdHVzOiBcIkVkaXRcIixcbiAgICAgICAgICBBZGRBZnRlclJvd0V2ZW50OiBudWxsLFxuICAgICAgICAgIERhdGFGaWVsZDogXCJmaWVsZE5hbWVcIixcbiAgICAgICAgICBUZW1wbGF0ZXM6IFt7XG4gICAgICAgICAgICBUaXRsZTogXCLooajlkI3moIfpophcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcInRhYmxlTmFtZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX0xhYmVsXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLlrZfmrrXmoIfpophcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX1NlbGVjdFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgVGl0bGU6IFwi6buY6K6k5YC8XCIsXG4gICAgICAgICAgICBCaW5kTmFtZTogXCJkZWZhdWx0VmFsdWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9TZWxlY3REZWZhdWx0VmFsdWVcIixcbiAgICAgICAgICAgIEhpZGRlbjogZmFsc2VcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBSb3dJZENyZWF0ZXI6IGZ1bmN0aW9uIFJvd0lkQ3JlYXRlcigpIHt9LFxuICAgICAgICAgIFRhYmxlQ2xhc3M6IFwiZWRpdC10YWJsZVwiLFxuICAgICAgICAgIFJlbmRlcmVyVG86IFwiZmllbGRDb250YWluZXJcIixcbiAgICAgICAgICBUYWJsZUlkOiBcImZpZWxkQ29udGFpbmVyVGFibGVcIixcbiAgICAgICAgICBUYWJsZUF0dHJzOiB7XG4gICAgICAgICAgICBjZWxscGFkZGluZzogXCIxXCIsXG4gICAgICAgICAgICBjZWxsc3BhY2luZzogXCIxXCIsXG4gICAgICAgICAgICBib3JkZXI6IFwiMVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb2xkRm9ybUlkOiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgcmVhZHk6IGZ1bmN0aW9uIHJlYWR5KGRhdGFTZXRJZCwgdGFibGVJZCkge1xuICAgICAgdGhpcy5kYXRhU2V0SWQgPSBkYXRhU2V0SWQ7XG4gICAgICB0aGlzLnRhYmxlSWQgPSB0YWJsZUlkO1xuICAgICAgdGhpcy5iaW5kVGFibGVGaWVsZHMobnVsbCk7XG4gICAgICB0aGlzLmJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZShudWxsKTtcbiAgICB9LFxuICAgIGdldEpzb246IGZ1bmN0aW9uIGdldEpzb24oKSB7XG4gICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuQ29tcGxldGVkRWRpdGluZ1JvdygpO1xuICAgICAgcmVzdWx0LmFwaXMgPSB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuR2V0U2VyaWFsaXplSnNvbigpO1xuICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuQ29tcGxldGVkRWRpdGluZ1JvdygpO1xuICAgICAgcmVzdWx0LmZpZWxkcyA9IHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkdldFNlcmlhbGl6ZUpzb24oKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBzZXREYXRhOiBmdW5jdGlvbiBzZXREYXRhKGFwaU9sZERhdGEsIGZpbGVkT2xkRGF0YSkge1xuICAgICAgaWYgKGFwaU9sZERhdGEpIHtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkxvYWRKc29uRGF0YShhcGlPbGREYXRhKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGZpbGVkT2xkRGF0YSkge1xuICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Mb2FkSnNvbkRhdGEoZmlsZWRPbGREYXRhKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZShkaWFsb2dFbGVtKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzW2RpYWxvZ0VsZW1dKTtcbiAgICB9LFxuICAgIGJpbmRUYWJsZUZpZWxkczogZnVuY3Rpb24gYmluZFRhYmxlRmllbGRzKG9sZERhdGEpIHtcbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5maWVsZC5hY0ludGVyZmFjZS5nZXREYXRhU2V0TWFpblRhYmxlRmllbGRzLCB7XG4gICAgICAgIGRhdGFTZXRJZDogdGhpcy5kYXRhU2V0SWRcbiAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgdmFyIGZpZWxkc0RhdGEgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgZmllbGRzRGF0YS5wdXNoKHtcbiAgICAgICAgICAgIFZhbHVlOiByZXN1bHQuZGF0YVtpXS5maWVsZE5hbWUsXG4gICAgICAgICAgICBUZXh0OiByZXN1bHQuZGF0YVtpXS5maWVsZENhcHRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlQ29uZmlnLlRlbXBsYXRlc1swXS5EZWZhdWx0VmFsdWUgPSB7XG4gICAgICAgICAgVHlwZTogXCJDb25zdFwiLFxuICAgICAgICAgIFZhbHVlOiByZXN1bHQuZGF0YVswXS50YWJsZU5hbWVcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzFdLkNsaWVudERhdGFTb3VyY2UgPSBmaWVsZHNEYXRhO1xuXG4gICAgICAgIGlmICghdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QpIHtcbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCA9IE9iamVjdC5jcmVhdGUoRWRpdFRhYmxlKTtcbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Jbml0aWFsaXphdGlvbih0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm9sZEZvcm1JZCA9IHRoaXMuZm9ybUlkO1xuXG4gICAgICAgIGlmIChvbGREYXRhKSB7XG4gICAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuTG9hZEpzb25EYXRhKG9sZERhdGEpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcblxuICAgICAgaWYgKHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuICAgICAgfVxuXG4gICAgICBpZiAob2xkRGF0YSAmJiB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCkge1xuICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Mb2FkSnNvbkRhdGEob2xkRGF0YSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGRGaWVsZDogZnVuY3Rpb24gYWRkRmllbGQoKSB7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5BZGRFZGl0aW5nUm93QnlUZW1wbGF0ZSgpO1xuICAgIH0sXG4gICAgcmVtb3ZlRmllbGQ6IGZ1bmN0aW9uIHJlbW92ZUZpZWxkKCkge1xuICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuUmVtb3ZlUm93KCk7XG4gICAgfSxcbiAgICBhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbjogZnVuY3Rpb24gYWRkSW5uZXJGb3JtQ2xvc2VCdXR0b24oKSB7XG4gICAgICB2YXIgY2xvc2VCdXR0b25EYXRhID0ge1xuICAgICAgICBjYXB0aW9uOiBcIuWFs+mXrVwiLFxuICAgICAgICBpZDogXCJpbm5lcl9jbG9zZV9idXR0b25fXCIgKyBTdHJpbmdVdGlsaXR5LlRpbWVzdGFtcCgpLFxuICAgICAgICBidXR0b25UeXBlOiBcIuWFs+mXreaMiemSrlwiXG4gICAgICB9O1xuICAgICAgdGhpcy50YWJsZURhdGEucHVzaChjbG9zZUJ1dHRvbkRhdGEpO1xuICAgIH0sXG4gICAgYmluZEFQSVRyZWVBbmRJbml0RWRpdFRhYmxlOiBmdW5jdGlvbiBiaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGUob2xkRGF0YSkge1xuICAgICAgaWYgKCF0aGlzLmFwaS5hcGlEYXRhKSB7XG4gICAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hcGkuYWNJbnRlcmZhY2UuZ2V0QVBJRGF0YSwge1xuICAgICAgICAgIGdyb3VwVHlwZTogXCJBUElfR1JPVVBfQlVJTERFUl9CVVRUT05fUk9PVFwiXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIHRoaXMuYXBpLmFwaURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgICAgaWYgKHJlc3VsdC5kYXRhICE9IG51bGwgJiYgcmVzdWx0LmRhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5kYXRhW2ldLm5vZGVUeXBlTmFtZSA9PSBcIkdyb3VwXCIpIHtcbiAgICAgICAgICAgICAgICAgIHJlc3VsdC5kYXRhW2ldLmljb24gPSBcIi9UaGVtZXMvUG5nMTZYMTYvcGFja2FnZS5wbmdcIjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IFwiL1RoZW1lcy9QbmcxNlgxNi9hcHBsaWNhdGlvbl92aWV3X2NvbHVtbnMucG5nXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuYXBpLmFwaVRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNhcGlaVHJlZVVMXCIpLCB0aGlzLmFwaS5hcGlUcmVlU2V0dGluZywgcmVzdWx0LmRhdGEpO1xuICAgICAgICAgICAgdGhpcy5hcGkuYXBpVHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmoodGhpcy5hcGkuYXBpVHJlZU9iaiwgdGhpcy4kcmVmcy50eHRfc2VhcmNoX2FwaV90ZXh0LiRyZWZzLmlucHV0LCBudWxsLCB0cnVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QgPSBPYmplY3QuY3JlYXRlKEVkaXRUYWJsZSk7XG4gICAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkluaXRpYWxpemF0aW9uKHRoaXMuYXBpLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuXG4gICAgICAgICAgaWYgKG9sZERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5Mb2FkSnNvbkRhdGEob2xkRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldEFwaUNvbmZpZ0FuZEJpbmRUb1RhYmxlOiBmdW5jdGlvbiBnZXRBcGlDb25maWdBbmRCaW5kVG9UYWJsZSgpIHtcbiAgICAgIHJldHVybjtcblxuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFwaS5hY0ludGVyZmFjZS5nZXRCdXR0b25BcGlDb25maWcsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIHZhciBhcGlTZWxlY3REYXRhID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBncm91cCA9IHtcbiAgICAgICAgICAgIEdyb3VwOiByZXN1bHQuZGF0YVtpXS5uYW1lXG4gICAgICAgICAgfTtcbiAgICAgICAgICB2YXIgb3B0aW9ucyA9IFtdO1xuXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCByZXN1bHQuZGF0YVtpXS5idXR0b25BUElWb0xpc3QubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaCh7XG4gICAgICAgICAgICAgIFZhbHVlOiByZXN1bHQuZGF0YVtpXS5idXR0b25BUElWb0xpc3Rbal0uaWQsXG4gICAgICAgICAgICAgIFRleHQ6IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdFtqXS5uYW1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBncm91cFtcIk9wdGlvbnNcIl0gPSBvcHRpb25zO1xuICAgICAgICAgIGFwaVNlbGVjdERhdGEucHVzaChncm91cCk7XG4gICAgICAgIH1cblxuICAgICAgICBfc2VsZi5hcGkuZWRpdFRhYmxlQ29uZmlnLlRlbXBsYXRlc1swXS5DbGllbnREYXRhU291cmNlID0gYXBpU2VsZWN0RGF0YTtcbiAgICAgICAgX3NlbGYuYXBpLmVkaXRUYWJsZU9iamVjdCA9IE9iamVjdC5jcmVhdGUoRWRpdFRhYmxlKTtcblxuICAgICAgICBfc2VsZi5hcGkuZWRpdFRhYmxlT2JqZWN0LkluaXRpYWxpemF0aW9uKF9zZWxmLmFwaS5lZGl0VGFibGVDb25maWcpO1xuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBhZGRBUEk6IGZ1bmN0aW9uIGFkZEFQSSgpIHtcbiAgICAgIGlmICh0aGlzLmFwaS5hcGlTZWxlY3REYXRhLm5vZGVUeXBlTmFtZSA9PSBcIkFQSVwiKSB7XG4gICAgICAgIHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5BZGRFZGl0aW5nUm93QnlUZW1wbGF0ZShbXSwge1xuICAgICAgICAgIHZhbHVlOiB0aGlzLmFwaS5hcGlTZWxlY3REYXRhLnZhbHVlLFxuICAgICAgICAgIHJ1blRpbWU6IFwi5LmL5ZCOXCJcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+mAieaLqemcgOimgea3u+WKoOeahEFQSSFcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICByZW1vdmVBUEk6IGZ1bmN0aW9uIHJlbW92ZUFQSSgpIHtcbiAgICAgIHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5SZW1vdmVSb3coKTtcbiAgICB9LFxuICAgIGNsZWFyQVBJOiBmdW5jdGlvbiBjbGVhckFQSSgpIHtcbiAgICAgIHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5SZW1vdmVBbGxSb3coKTtcbiAgICB9LFxuICAgIGdldEFQSVRleHQ6IGZ1bmN0aW9uIGdldEFQSVRleHQodmFsdWUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5hcGkuYXBpRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5hcGkuYXBpRGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJBUElcIikge1xuICAgICAgICAgIGlmICh0aGlzLmFwaS5hcGlEYXRhW2ldLnZhbHVlID09IHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcGkuYXBpRGF0YVtpXS50ZXh0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgY2xhc3M9XFxcIml2LWxpc3QtcGFnZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogOTQlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiZmllbGRDb250YWluZXJcXFwiIGNsYXNzPVxcXCJlZGl0LXRhYmxlLXdyYXBcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDE4MHB4O292ZXJmbG93OiBhdXRvO3dpZHRoOiA5OCU7bWFyZ2luOiBhdXRvXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IHJpZ2h0O3dpZHRoOiA1JVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXAgdmVydGljYWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgQGNsaWNrPVxcXCJhZGRGaWVsZFxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiIEBjbGljaz1cXFwicmVtb3ZlRmllbGRcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAzMjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiA2MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF9zZWFyY2hfYXBpX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVBUElcXHU1NDBEXFx1NzlGMFxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XFxcImFwaVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCIgc3R5bGU9XFxcImhlaWdodDogMjYwcHg7b3ZlcmZsb3c6IGF1dG9cXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgdHlwZT1cXFwic3VjY2Vzc1xcXCIgaWNvbj1cXFwibWQtYWRkXFxcIiBAY2xpY2s9XFxcImFkZEFQSVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiIEBjbGljaz1cXFwicmVtb3ZlQVBJXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJpb3MtdHJhc2hcXFwiIEBjbGljaz1cXFwiY2xlYXJBUElcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcXCIgdmFsaWduPVxcXCJ0b3BcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJhcGlDb250YWluZXJcXFwiIGNsYXNzPVxcXCJlZGl0LXRhYmxlLXdyYXBcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDI2MHB4O292ZXJmbG93OiBhdXRvO3dpZHRoOiA5OCU7bWFyZ2luOiBhdXRvXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImZkLWNvbnRyb2wtbXVsdGlsZXZlbFwiLCB7XG4gIHByb3BzOiBbXCJ2YWx1ZVwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbXVsdGlsZXZlbFByb3BzOiB7XG4gICAgICAgIGxldmVsMkJpbmRDb250cm9sSWQ6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJhc2VJbmZvOiBmdW5jdGlvbiBiYXNlSW5mbyhuZXdWYWwpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbmV3VmFsKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShuZXdWYWwpIHtcbiAgICAgIHRoaXMubXVsdGlsZXZlbFByb3BzID0gbmV3VmFsO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLm11bHRpbGV2ZWxQcm9wcyA9IHRoaXMudmFsdWU7XG4gIH0sXG4gIG1ldGhvZHM6IHt9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIiBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDE0MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogOTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDkwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU0RThDXFx1N0VBN1xcdTVCNTdcXHU1MTc4XFx1N0VEMVxcdTVCOUFcXHU1MjMwSURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJtdWx0aWxldmVsUHJvcHMubGV2ZWwyQmluZENvbnRyb2xJZFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLXNlbGVjdC1iaW5kLXRvLXNpbmdsZS1maWVsZC1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0VGFibGVzRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZvclpUcmVlTm9kZUxpc3RcIixcbiAgICAgICAgZ2V0VGFibGVGaWVsZHNEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVGaWVsZHNCeVRhYmxlSWRcIixcbiAgICAgICAgZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkczogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHNcIlxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkRGF0YToge1xuICAgICAgICByZWxhdGlvbklkOiBcIlwiLFxuICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICB0YWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIHRhYmxlQ2FwdGlvbjogXCJcIixcbiAgICAgICAgZmllbGROYW1lOiBcIlwiLFxuICAgICAgICBmaWVsZENhcHRpb246IFwiXCIsXG4gICAgICAgIGZpZWxkRGF0YVR5cGU6IFwiXCIsXG4gICAgICAgIGZpZWxkTGVuZ3RoOiBcIlwiXG4gICAgICB9LFxuICAgICAgdGFibGVUcmVlOiB7XG4gICAgICAgIHRhYmxlVHJlZU9iajogbnVsbCxcbiAgICAgICAgdGFibGVUcmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJkaXNwbGF5VGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS50YWJsZUlkID0gdHJlZU5vZGUudGFibGVJZDtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLnRhYmxlTmFtZSA9IHRyZWVOb2RlLnRhYmxlTmFtZTtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLnRhYmxlQ2FwdGlvbiA9IHRyZWVOb2RlLnRhYmxlQ2FwdGlvbjtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLmZpZWxkTmFtZSA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS5maWVsZENhcHRpb24gPSBcIlwiO1xuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERhdGEuZmllbGREYXRhVHlwZSA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS5maWVsZExlbmd0aCA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLmZpZWxkVGFibGUuZmllbGREYXRhID0gW107XG5cbiAgICAgICAgICAgICAgX3NlbGYuZmlsdGVyQWxsRmllbGRzVG9UYWJsZShfc2VsZi5zZWxlY3RlZERhdGEudGFibGVJZCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25EYmxDbGljazogZnVuY3Rpb24gb25EYmxDbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge30sXG4gICAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge31cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlVHJlZURhdGE6IG51bGwsXG4gICAgICAgIHNlbGVjdGVkVGFibGVOYW1lOiBcIuaXoFwiXG4gICAgICB9LFxuICAgICAgZmllbGRUYWJsZToge1xuICAgICAgICBmaWVsZERhdGE6IFtdLFxuICAgICAgICB0YWJsZUhlaWdodDogNDcwLFxuICAgICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICAgIHRpdGxlOiAnICcsXG4gICAgICAgICAgd2lkdGg6IDYwLFxuICAgICAgICAgIGtleTogJ2lzU2VsZWN0ZWRUb0JpbmQnLFxuICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgICAgaWYgKHBhcmFtcy5yb3cuaXNTZWxlY3RlZFRvQmluZCA9PSBcIjFcIikge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbiBzZWxlY3RlZFwiXG4gICAgICAgICAgICAgIH0pXSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJcIlxuICAgICAgICAgICAgICB9LCBcIlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0aXRsZTogJ+WQjeensCcsXG4gICAgICAgICAga2V5OiAnZmllbGROYW1lJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkQ2FwdGlvbicsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICBvbGRSZWxhdGlvbkRhdGFTdHJpbmc6IFwiXCIsXG4gICAgICByZWxhdGlvbkRhdGE6IG51bGwsXG4gICAgICBhbGxGaWVsZHM6IG51bGwsXG4gICAgICBvbGRCaW5kRmllbGREYXRhOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgYmVnaW5TZWxlY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0KHJlbGF0aW9uRGF0YSwgb2xkQmluZEZpZWxkRGF0YSkge1xuICAgICAgY29uc29sZS5sb2coXCLlhbPogZTooajmlbDmja7vvJpcIik7XG4gICAgICBjb25zb2xlLmxvZyhyZWxhdGlvbkRhdGEpO1xuICAgICAgY29uc29sZS5sb2coXCLlt7Lnu4/nu5HlrprkuobnmoTmlbDmja7vvJpcIik7XG4gICAgICBjb25zb2xlLmxvZyhvbGRCaW5kRmllbGREYXRhKTtcblxuICAgICAgaWYgKHJlbGF0aW9uRGF0YSA9PSBudWxsIHx8IHJlbGF0aW9uRGF0YSA9PSBcIlwiIHx8IHJlbGF0aW9uRGF0YS5sZW5ndGggPT0gMCkge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+WFiOiuvue9ruihqOWNleeahOaVsOaNruWFs+iBlO+8gVwiKTtcbiAgICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktZGlhbG9nXCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLmZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcDtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgaGVpZ2h0OiA2ODAsXG4gICAgICAgIHdpZHRoOiA5ODAsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqee7keWumuWtl+autVwiXG4gICAgICB9KTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcbiAgICAgIHRoaXMub2xkQmluZEZpZWxkRGF0YSA9IG9sZEJpbmRGaWVsZERhdGE7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKG9sZEJpbmRGaWVsZERhdGEpO1xuXG4gICAgICBpZiAoSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHJlbGF0aW9uRGF0YSkgIT0gdGhpcy5vbGRSZWxhdGlvbkRhdGFTdHJpbmcpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWxhdGlvbkRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICByZWxhdGlvbkRhdGFbaV0uZGlzcGxheVRleHQgPSByZWxhdGlvbkRhdGFbaV0udGFibGVOYW1lICsgXCJbXCIgKyByZWxhdGlvbkRhdGFbaV0udGFibGVDYXB0aW9uICsgXCJdKFwiICsgcmVsYXRpb25EYXRhW2ldLnJlbGF0aW9uVHlwZSArIFwiKVwiO1xuXG4gICAgICAgICAgaWYgKHJlbGF0aW9uRGF0YVtpXS5wYXJlbnRJZCA9PSBcIi0xXCIpIHtcbiAgICAgICAgICAgIHJlbGF0aW9uRGF0YVtpXS5kaXNwbGF5VGV4dCA9IHJlbGF0aW9uRGF0YVtpXS50YWJsZU5hbWUgKyBcIltcIiArIHJlbGF0aW9uRGF0YVtpXS50YWJsZUNhcHRpb24gKyBcIl1cIjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZWxhdGlvbkRhdGFbaV0uaWNvbiA9IFwiL1RoZW1lcy9QbmcxNlgxNi90YWJsZS5wbmdcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI3RhYmxlWlRyZWVVTFwiKSwgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlU2V0dGluZywgcmVsYXRpb25EYXRhKTtcbiAgICAgICAgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICAgICAgdGhpcy5vbGRSZWxhdGlvbkRhdGFTdHJpbmcgPSBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcocmVsYXRpb25EYXRhKTtcbiAgICAgICAgdGhpcy5yZWxhdGlvbkRhdGEgPSByZWxhdGlvbkRhdGE7XG4gICAgICAgIHRoaXMuZ2V0QWxsVGFibGVzRmllbGRzKHJlbGF0aW9uRGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzKHRoaXMuYWxsRmllbGRzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9sZEJpbmRGaWVsZERhdGEgJiYgb2xkQmluZEZpZWxkRGF0YS50YWJsZUlkICYmIG9sZEJpbmRGaWVsZERhdGEudGFibGVJZCAhPSBcIlwiKSB7XG4gICAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJ0YWJsZUlkXCIsIG9sZEJpbmRGaWVsZERhdGEudGFibGVJZCk7XG4gICAgICAgIHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iai5zZWxlY3ROb2RlKHNlbGVjdGVkTm9kZSwgZmFsc2UsIHRydWUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVzZXRGaWVsZFRvU2VsZWN0ZWRTdGF0dXM6IGZ1bmN0aW9uIHJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzKF9hbGxGaWVsZHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5maWVsZFRhYmxlLmZpZWxkRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLmZpZWxkVGFibGUuZmllbGREYXRhW2ldLmlzU2VsZWN0ZWRUb0JpbmQgPSBcIjBcIjtcbiAgICAgIH1cblxuICAgICAgaWYgKF9hbGxGaWVsZHMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgX2FsbEZpZWxkc1tpXS5pc1NlbGVjdGVkVG9CaW5kID0gXCIwXCI7XG5cbiAgICAgICAgICBpZiAoX2FsbEZpZWxkc1tpXS5maWVsZFRhYmxlSWQgPT0gdGhpcy5vbGRCaW5kRmllbGREYXRhLnRhYmxlSWQpIHtcbiAgICAgICAgICAgIGlmIChfYWxsRmllbGRzW2ldLmZpZWxkTmFtZSA9PSB0aGlzLm9sZEJpbmRGaWVsZERhdGEuZmllbGROYW1lKSB7XG4gICAgICAgICAgICAgIF9hbGxGaWVsZHNbaV0uaXNTZWxlY3RlZFRvQmluZCA9IFwiMVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYWxsRmllbGRzID0gX2FsbEZpZWxkcztcbiAgICAgIH1cblxuICAgICAgdGhpcy5maWx0ZXJBbGxGaWVsZHNUb1RhYmxlKHRoaXMub2xkQmluZEZpZWxkRGF0YS50YWJsZUlkKTtcbiAgICB9LFxuICAgIGdldEFsbFRhYmxlc0ZpZWxkczogZnVuY3Rpb24gZ2V0QWxsVGFibGVzRmllbGRzKHJlbGF0aW9uRGF0YSkge1xuICAgICAgdmFyIHRhYmxlSWRzID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVsYXRpb25EYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRhYmxlSWRzLnB1c2gocmVsYXRpb25EYXRhW2ldLnRhYmxlSWQpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcywge1xuICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB2YXIgc2luZ2xlVGFibGUgPSByZXN1bHQuZXhLVkRhdGEuVGFibGVzWzBdO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwi6YeN5paw6I635Y+W5pWw5o2uXCIpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGFsbEZpZWxkcyk7XG5cbiAgICAgICAgICBfc2VsZi5yZXNldEZpZWxkVG9TZWxlY3RlZFN0YXR1cyhhbGxGaWVsZHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZmlsdGVyQWxsRmllbGRzVG9UYWJsZTogZnVuY3Rpb24gZmlsdGVyQWxsRmllbGRzVG9UYWJsZSh0YWJsZUlkKSB7XG4gICAgICBpZiAodGFibGVJZCkge1xuICAgICAgICB2YXIgZmllbGRzID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFsbEZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLmFsbEZpZWxkc1tpXS5maWVsZFRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgICAgZmllbGRzLnB1c2godGhpcy5hbGxGaWVsZHNbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZmllbGRUYWJsZS5maWVsZERhdGEgPSBmaWVsZHM7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmllbGRUYWJsZS5maWVsZERhdGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2VsZWN0ZWRGaWVsZDogZnVuY3Rpb24gc2VsZWN0ZWRGaWVsZChzZWxlY3Rpb24sIGluZGV4KSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS5maWVsZE5hbWUgPSBzZWxlY3Rpb24uZmllbGROYW1lO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEuZmllbGRDYXB0aW9uID0gc2VsZWN0aW9uLmZpZWxkQ2FwdGlvbjtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLmZpZWxkRGF0YVR5cGUgPSBzZWxlY3Rpb24uZmllbGREYXRhVHlwZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLmZpZWxkTGVuZ3RoID0gc2VsZWN0aW9uLmZpZWxkRGF0YUxlbmd0aDtcbiAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJ0YWJsZUlkXCIsIHNlbGVjdGlvbi5maWVsZFRhYmxlSWQpO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEudGFibGVJZCA9IHNlbGVjdGVkTm9kZS50YWJsZUlkO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEudGFibGVOYW1lID0gc2VsZWN0ZWROb2RlLnRhYmxlTmFtZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLnRhYmxlQ2FwdGlvbiA9IHNlbGVjdGVkTm9kZS50YWJsZUNhcHRpb247XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS5yZWxhdGlvbklkID0gc2VsZWN0ZWROb2RlLmlkO1xuICAgIH0sXG4gICAgc2VsZWN0Q29tcGxldGU6IGZ1bmN0aW9uIHNlbGVjdENvbXBsZXRlKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuc2VsZWN0ZWREYXRhO1xuXG4gICAgICBpZiAoIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eShyZXN1bHQudGFibGVJZCkgJiYgIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eShyZXN1bHQuZmllbGROYW1lKSkge1xuICAgICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1iaW5kLXRvLXNpbmdsZS1maWVsZCcsIHJlc3VsdCk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuivt+mAieaLqemcgOimgee7keWumueahOWtl+autSFcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBjbGVhckNvbXBsZXRlOiBmdW5jdGlvbiBjbGVhckNvbXBsZXRlKCkge1xuICAgICAgd2luZG93Lk9wZW5lcldpbmRvd09ialt0aGlzLmdldFNlbGVjdEluc3RhbmNlTmFtZSgpXS5zZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlKG51bGwpO1xuICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5mZENvbnRyb2xTZWxlY3RCaW5kVG9TaW5nbGVGaWVsZERpYWxvZ1dyYXApO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcImZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImdlbmVyYWwtZWRpdC1wYWdlLXdyYXAgZGVzaWduLWRpYWxvZy13cmFwZXItc2luZ2xlLWRpYWxvZ1xcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2VsZWN0LXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHhcXFwiPlxcdTkwMDlcXHU2MkU5XFx1ODg2ODwvZGl2aWRlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGlucHV0IHR5cGU9XFxcInRleHRcXFwiIGlkPVxcXCJ0eHRTZWFyY2hUYWJsZVRyZWVcXFwiIHN0eWxlPVxcXCJ3aWR0aDogMTAwJTtoZWlnaHQ6IDMycHg7bWFyZ2luLXRvcDogMnB4XFxcIiAvPi0tPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwidGFibGVaVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNlbGVjdC1maWVsZC13cmFwZXIgaXYtbGlzdC1wYWdlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZpZGVyIG9yaWVudGF0aW9uPVxcXCJsZWZ0XFxcIiA6ZGFzaGVkPVxcXCJ0cnVlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOiAxMnB4XFxcIj5cXHU5MDA5XFx1NjJFOVxcdTVCNTdcXHU2QkI1PC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIGJvcmRlciA6Y29sdW1ucz1cXFwiZmllbGRUYWJsZS5jb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwiZmllbGRUYWJsZS5maWVsZERhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBvbi1yb3ctY2xpY2s9XFxcInNlbGVjdGVkRmllbGRcXFwiIDpoZWlnaHQ9XFxcImZpZWxkVGFibGUudGFibGVIZWlnaHRcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBuby1kYXRhLXRleHQ9XFxcIlxcdThCRjdcXHU5MDA5XFx1NjJFOVxcdTg4NjhcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcInNlbGVjdENvbXBsZXRlKClcXFwiPiBcXHU3ODZFIFxcdThCQTQgPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNsZWFyQ29tcGxldGUoKVxcXCI+IFxcdTZFMDUgXFx1N0E3QSA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoKVxcXCI+XFx1NTE3MyBcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiaW5uZXItZm9ybS1idXR0b24tbGlzdC1jb21wXCIsIHtcbiAgcHJvcHM6IFtcImZvcm1JZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHRpdGxlOiAn5qCH6aKYJyxcbiAgICAgICAga2V5OiAnY2FwdGlvbicsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57G75Z6LJyxcbiAgICAgICAga2V5OiAnYnV0dG9uVHlwZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5pON5L2cJyxcbiAgICAgICAga2V5OiAnaWQnLFxuICAgICAgICB3aWR0aDogMjAwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgdmFyIGJ1dHRvbnMgPSBbXTtcblxuICAgICAgICAgIGlmIChwYXJhbXMucm93LmJ1dHRvblR5cGUgIT0gXCLlhbPpl63mjInpkq5cIikge1xuICAgICAgICAgICAgYnV0dG9ucy5wdXNoKExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRWRpdEJ1dHRvbihoLCBwYXJhbXMsIFwiaWRcIiwgX3NlbGYpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBidXR0b25zLnB1c2goTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5EZWxldGVCdXR0b24oaCwgcGFyYW1zLCBcImlkXCIsIF9zZWxmKSk7XG4gICAgICAgICAgYnV0dG9ucy5wdXNoKExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uTW92ZVVwQnV0dG9uKGgsIHBhcmFtcywgXCJpZFwiLCBfc2VsZikpO1xuICAgICAgICAgIGJ1dHRvbnMucHVzaChMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLk1vdmVEb3duQnV0dG9uKGgsIHBhcmFtcywgXCJpZFwiLCBfc2VsZikpO1xuICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgIH0sIGJ1dHRvbnMpO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICAgIHRhYmxlRGF0YTogW10sXG4gICAgICBpbm5lclNhdmVCdXR0b25FZGl0RGF0YToge1xuICAgICAgICBjYXB0aW9uOiBcIlwiLFxuICAgICAgICBzYXZlQW5kQ2xvc2U6IFwidHJ1ZVwiLFxuICAgICAgICBhcGlzOiBbXSxcbiAgICAgICAgZmllbGRzOiBbXSxcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIGJ1dHRvblR5cGU6IFwi5L+d5a2Y5oyJ6ZKuXCIsXG4gICAgICAgIGN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlck1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RQYXJhOiBcIlwiXG4gICAgICB9LFxuICAgICAgYXBpOiB7XG4gICAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgICAgZ2V0QVBJRGF0YTogXCIvUmVzdC9CdWlsZGVyL0FwaUl0ZW0vR2V0QVBJU0ZvclpUcmVlTm9kZUxpc3RcIlxuICAgICAgICB9LFxuICAgICAgICBhcGlUcmVlT2JqOiBudWxsLFxuICAgICAgICBhcGlUcmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgX3NlbGYuYXBpLmFwaVNlbGVjdERhdGEgPSB0cmVlTm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFwaURhdGE6IG51bGwsXG4gICAgICAgIGFwaVNlbGVjdERhdGE6IG51bGwsXG4gICAgICAgIGVkaXRUYWJsZU9iamVjdDogbnVsbCxcbiAgICAgICAgZWRpdFRhYmxlQ29uZmlnOiB7XG4gICAgICAgICAgU3RhdHVzOiBcIkVkaXRcIixcbiAgICAgICAgICBBZGRBZnRlclJvd0V2ZW50OiBudWxsLFxuICAgICAgICAgIERhdGFGaWVsZDogXCJmaWVsZE5hbWVcIixcbiAgICAgICAgICBUZW1wbGF0ZXM6IFt7XG4gICAgICAgICAgICBUaXRsZTogXCJBUEnlkI3np7BcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcInZhbHVlXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfTGFiZWxcIixcbiAgICAgICAgICAgIFRpdGxlQ2VsbENsYXNzTmFtZTogXCJUaXRsZUNlbGxcIixcbiAgICAgICAgICAgIEZvcm1hdGVyOiBmdW5jdGlvbiBGb3JtYXRlcih2YWx1ZSkge1xuICAgICAgICAgICAgICByZXR1cm4gX3NlbGYuZ2V0QVBJVGV4dCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgVGl0bGU6IFwi6LCD55So6aG65bqPXCIsXG4gICAgICAgICAgICBCaW5kTmFtZTogXCJydW5UaW1lXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfU2VsZWN0XCIsXG4gICAgICAgICAgICBDbGllbnREYXRhU291cmNlOiBbe1xuICAgICAgICAgICAgICBcIlRleHRcIjogXCLkuYvliY1cIixcbiAgICAgICAgICAgICAgXCJWYWx1ZVwiOiBcIuS5i+WJjVwiXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgIFwiVGV4dFwiOiBcIuS5i+WQjlwiLFxuICAgICAgICAgICAgICBcIlZhbHVlXCI6IFwi5LmL5ZCOXCJcbiAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgV2lkdGg6IDEwMFxuICAgICAgICAgIH1dLFxuICAgICAgICAgIFJvd0lkQ3JlYXRlcjogZnVuY3Rpb24gUm93SWRDcmVhdGVyKCkge30sXG4gICAgICAgICAgVGFibGVDbGFzczogXCJlZGl0LXRhYmxlXCIsXG4gICAgICAgICAgUmVuZGVyZXJUbzogXCJhcGlDb250YWluZXJcIixcbiAgICAgICAgICBUYWJsZUlkOiBcImFwaUNvbnRhaW5lclRhYmxlXCIsXG4gICAgICAgICAgVGFibGVBdHRyczoge1xuICAgICAgICAgICAgY2VsbHBhZGRpbmc6IFwiMVwiLFxuICAgICAgICAgICAgY2VsbHNwYWNpbmc6IFwiMVwiLFxuICAgICAgICAgICAgYm9yZGVyOiBcIjFcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGZpZWxkOiB7XG4gICAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgICAgZ2V0Rm9ybU1haW5UYWJsZUZpZWxkczogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vR2V0Rm9ybU1haW5UYWJsZUZpZWxkc1wiXG4gICAgICAgIH0sXG4gICAgICAgIGVkaXRUYWJsZU9iamVjdDogbnVsbCxcbiAgICAgICAgZWRpdFRhYmxlQ29uZmlnOiB7XG4gICAgICAgICAgU3RhdHVzOiBcIkVkaXRcIixcbiAgICAgICAgICBBZGRBZnRlclJvd0V2ZW50OiBudWxsLFxuICAgICAgICAgIERhdGFGaWVsZDogXCJmaWVsZE5hbWVcIixcbiAgICAgICAgICBUZW1wbGF0ZXM6IFt7XG4gICAgICAgICAgICBUaXRsZTogXCLooajlkI3moIfpophcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcInRhYmxlTmFtZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX0xhYmVsXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLlrZfmrrXmoIfpophcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX1NlbGVjdFwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgVGl0bGU6IFwi6buY6K6k5YC8XCIsXG4gICAgICAgICAgICBCaW5kTmFtZTogXCJkZWZhdWx0VmFsdWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9TZWxlY3REZWZhdWx0VmFsdWVcIixcbiAgICAgICAgICAgIEhpZGRlbjogZmFsc2VcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLooahJRFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwidGFibGVJZFwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX0xhYmVsXCJcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBSb3dJZENyZWF0ZXI6IGZ1bmN0aW9uIFJvd0lkQ3JlYXRlcigpIHt9LFxuICAgICAgICAgIFRhYmxlQ2xhc3M6IFwiZWRpdC10YWJsZVwiLFxuICAgICAgICAgIFJlbmRlcmVyVG86IFwiZmllbGRDb250YWluZXJcIixcbiAgICAgICAgICBUYWJsZUlkOiBcImZpZWxkQ29udGFpbmVyVGFibGVcIixcbiAgICAgICAgICBUYWJsZUF0dHJzOiB7XG4gICAgICAgICAgICBjZWxscGFkZGluZzogXCIxXCIsXG4gICAgICAgICAgICBjZWxsc3BhY2luZzogXCIxXCIsXG4gICAgICAgICAgICBib3JkZXI6IFwiMVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb2xkRm9ybUlkOiBcIlwiLFxuICAgICAgaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhOiB7XG4gICAgICAgIGNhcHRpb246IFwiXCIsXG4gICAgICAgIGV4ZWNBbmRDbG9zZTogXCJ0cnVlXCIsXG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBidXR0b25UeXBlOiBcIuiEmuacrOaMiemSrlwiLFxuICAgICAgICBhY3Rpb25UeXBlOiBcInJlbG9hZERhdGFcIixcbiAgICAgICAgY2FsbEpzTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kUGFyYTogXCJcIlxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIHJlYWR5OiBmdW5jdGlvbiByZWFkeSh0YWJsZURhdGFKc29uKSB7XG4gICAgICBpZiAodGFibGVEYXRhSnNvbiAhPSBudWxsICYmIHRhYmxlRGF0YUpzb24gIT0gXCJcIikge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IEpzb25VdGlsaXR5LlN0cmluZ1RvSnNvbih0YWJsZURhdGFKc29uKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5iaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGUobnVsbCk7XG4gICAgfSxcbiAgICBnZXRKc29uOiBmdW5jdGlvbiBnZXRKc29uKCkge1xuICAgICAgcmV0dXJuIEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh0aGlzLnRhYmxlRGF0YSk7XG4gICAgfSxcbiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KGlkLCBwYXJhbXMpIHtcbiAgICAgIGlmIChwYXJhbXMucm93W1wiYnV0dG9uVHlwZVwiXSA9PSBcIuS/neWtmOaMiemSrlwiKSB7XG4gICAgICAgIHRoaXMuZWRpdElubmVyRm9ybVNhdmVCdXR0b24ocGFyYW1zKTtcbiAgICAgIH0gZWxzZSBpZiAocGFyYW1zLnJvd1tcImJ1dHRvblR5cGVcIl0gPT0gXCLohJrmnKzmjInpkq5cIikge1xuICAgICAgICB0aGlzLmVkaXRJbm5lckZvcm1Kc0NsaWVudEJ1dHRvbihwYXJhbXMpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVsOiBmdW5jdGlvbiBkZWwoaWQsIHBhcmFtcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy50YWJsZURhdGFbaV0uaWQgPT0gaWQpIHtcbiAgICAgICAgICBBcnJheVV0aWxpdHkuRGVsZXRlKHRoaXMudGFibGVEYXRhLCBpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbW92ZVVwOiBmdW5jdGlvbiBtb3ZlVXAoaWQsIHBhcmFtcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy50YWJsZURhdGFbaV0uaWQgPT0gaWQpIHtcbiAgICAgICAgICBBcnJheVV0aWxpdHkuTW92ZVVwKHRoaXMudGFibGVEYXRhLCBpKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIG1vdmVEb3duOiBmdW5jdGlvbiBtb3ZlRG93bihpZCwgcGFyYW1zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgIEFycmF5VXRpbGl0eS5Nb3ZlRG93bih0aGlzLnRhYmxlRGF0YSwgaSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGRJbm5lckZvcm1TYXZlQnV0dG9uOiBmdW5jdGlvbiBhZGRJbm5lckZvcm1TYXZlQnV0dG9uKCkge1xuICAgICAgaWYgKHRoaXMuZm9ybUlkICE9IG51bGwgJiYgdGhpcy5mb3JtSWQgIT0gXCJcIikge1xuICAgICAgICB0aGlzLmVkaXRTYXZlQnV0dG9uU3RhdHVjID0gXCJhZGRcIjtcbiAgICAgICAgdGhpcy5yZXNldElubmVyU2F2ZUJ1dHRvbkRhdGEoKTtcbiAgICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLmlubmVyRm9ybVNhdmVCdXR0b25XcmFwO1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICAgIGhlaWdodDogNTIwLFxuICAgICAgICAgIHdpZHRoOiA3MjAsXG4gICAgICAgICAgdGl0bGU6IFwi56qX5L2T5YaF5L+d5a2Y5oyJ6ZKuXCJcbiAgICAgICAgfSk7XG4gICAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuICAgICAgICB0aGlzLmlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmlkID0gXCJpbm5lcl9mb3JtX3NhdmVfYnV0dG9uX1wiICsgU3RyaW5nVXRpbGl0eS5UaW1lc3RhbXAoKTtcbiAgICAgICAgdGhpcy5iaW5kVGFibGVGaWVsZHMobnVsbCk7XG4gICAgICAgIHRoaXMuY2xlYXJBUEkoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+35YWI6K6+572u57uR5a6a55qE56qX5L2TIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZShkaWFsb2dFbGVtKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzW2RpYWxvZ0VsZW1dKTtcbiAgICB9LFxuICAgIGVkaXRJbm5lckZvcm1TYXZlQnV0dG9uOiBmdW5jdGlvbiBlZGl0SW5uZXJGb3JtU2F2ZUJ1dHRvbihwYXJhbXMpIHtcbiAgICAgIHRoaXMuYWRkSW5uZXJGb3JtU2F2ZUJ1dHRvbigpO1xuICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU3RyaW5naWZ5KHBhcmFtcy5yb3cpO1xuICAgICAgdGhpcy5lZGl0U2F2ZUJ1dHRvblN0YXR1YyA9IFwiZWRpdFwiO1xuICAgICAgdGhpcy5iaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGUodGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YS5hcGlzKTtcbiAgICAgIHRoaXMuYmluZFRhYmxlRmllbGRzKHRoaXMuaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuZmllbGRzKTtcbiAgICB9LFxuICAgIHJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YTogZnVuY3Rpb24gcmVzZXRJbm5lclNhdmVCdXR0b25EYXRhKCkge1xuICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YSA9IHtcbiAgICAgICAgY2FwdGlvbjogXCJcIixcbiAgICAgICAgc2F2ZUFuZENsb3NlOiBcInRydWVcIixcbiAgICAgICAgYXBpczogW10sXG4gICAgICAgIGZpZWxkczogW10sXG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBidXR0b25UeXBlOiBcIuS/neWtmOaMiemSrlwiLFxuICAgICAgICBjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kUGFyYTogXCJcIlxuICAgICAgfTtcbiAgICB9LFxuICAgIHNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3Q6IGZ1bmN0aW9uIHNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3QoKSB7XG4gICAgICB2YXIgc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEpO1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkNvbXBsZXRlZEVkaXRpbmdSb3coKTtcbiAgICAgIHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEuYXBpcyA9IHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5HZXRTZXJpYWxpemVKc29uKCk7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Db21wbGV0ZWRFZGl0aW5nUm93KCk7XG4gICAgICBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhLmZpZWxkcyA9IHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkdldFNlcmlhbGl6ZUpzb24oKTtcblxuICAgICAgaWYgKHRoaXMuZWRpdFNhdmVCdXR0b25TdGF0dWMgPT0gXCJhZGRcIikge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YS5wdXNoKHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhLmlkKSB7XG4gICAgICAgICAgICBWdWUuc2V0KHRoaXMudGFibGVEYXRhLCBpLCBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5oYW5kbGVDbG9zZShcImlubmVyRm9ybVNhdmVCdXR0b25XcmFwXCIpO1xuICAgIH0sXG4gICAgYmluZFRhYmxlRmllbGRzOiBmdW5jdGlvbiBiaW5kVGFibGVGaWVsZHMob2xkRGF0YSkge1xuICAgICAgaWYgKHRoaXMub2xkRm9ybUlkICE9IHRoaXMuZm9ybUlkKSB7XG4gICAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5maWVsZC5hY0ludGVyZmFjZS5nZXRGb3JtTWFpblRhYmxlRmllbGRzLCB7XG4gICAgICAgICAgZm9ybUlkOiB0aGlzLmZvcm1JZFxuICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgICB2YXIgZmllbGRzRGF0YSA9IFtdO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZmllbGRzRGF0YS5wdXNoKHtcbiAgICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhW2ldLmZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgVGV4dDogcmVzdWx0LmRhdGFbaV0uZmllbGRDYXB0aW9uXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZy5UZW1wbGF0ZXNbMF0uRGVmYXVsdFZhbHVlID0ge1xuICAgICAgICAgICAgVHlwZTogXCJDb25zdFwiLFxuICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhWzBdLnRhYmxlTmFtZVxuICAgICAgICAgIH07XG4gICAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzNdLkRlZmF1bHRWYWx1ZSA9IHtcbiAgICAgICAgICAgIFR5cGU6IFwiQ29uc3RcIixcbiAgICAgICAgICAgIFZhbHVlOiByZXN1bHQuZGF0YVswXS50YWJsZUlkXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZy5UZW1wbGF0ZXNbMV0uQ2xpZW50RGF0YVNvdXJjZSA9IGZpZWxkc0RhdGE7XG5cbiAgICAgICAgICBpZiAoIXRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCA9IE9iamVjdC5jcmVhdGUoRWRpdFRhYmxlKTtcbiAgICAgICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkluaXRpYWxpemF0aW9uKHRoaXMuZmllbGQuZWRpdFRhYmxlQ29uZmlnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLm9sZEZvcm1JZCA9IHRoaXMuZm9ybUlkO1xuXG4gICAgICAgICAgaWYgKG9sZERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkxvYWRKc29uRGF0YShvbGREYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QpIHtcbiAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuUmVtb3ZlQWxsUm93KCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvbGREYXRhICYmIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkxvYWRKc29uRGF0YShvbGREYXRhKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZEZpZWxkOiBmdW5jdGlvbiBhZGRGaWVsZCgpIHtcbiAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlKCk7XG4gICAgfSxcbiAgICByZW1vdmVGaWVsZDogZnVuY3Rpb24gcmVtb3ZlRmllbGQoKSB7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5SZW1vdmVSb3coKTtcbiAgICB9LFxuICAgIGJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZTogZnVuY3Rpb24gYmluZEFQSVRyZWVBbmRJbml0RWRpdFRhYmxlKG9sZERhdGEpIHtcbiAgICAgIGlmICghdGhpcy5hcGkuYXBpRGF0YSkge1xuICAgICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYXBpLmFjSW50ZXJmYWNlLmdldEFQSURhdGEsIHtcbiAgICAgICAgICBncm91cFR5cGU6IFwiQVBJX0dST1VQX0JVSUxERVJfQlVUVE9OX1JPT1RcIlxuICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgICB0aGlzLmFwaS5hcGlEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSAhPSBudWxsICYmIHJlc3VsdC5kYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJHcm91cFwiKSB7XG4gICAgICAgICAgICAgICAgICByZXN1bHQuZGF0YVtpXS5pY29uID0gXCIvVGhlbWVzL1BuZzE2WDE2L3BhY2thZ2UucG5nXCI7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHJlc3VsdC5kYXRhW2ldLmljb24gPSBcIi9UaGVtZXMvUG5nMTZYMTYvYXBwbGljYXRpb25fdmlld19jb2x1bW5zLnBuZ1wiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFwaS5hcGlUcmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjYXBpWlRyZWVVTFwiKSwgdGhpcy5hcGkuYXBpVHJlZVNldHRpbmcsIHJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgIHRoaXMuYXBpLmFwaVRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMuYXBpLmFwaVRyZWVPYmosIHRoaXMuJHJlZnMudHh0X3NlYXJjaF9hcGlfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24odGhpcy5hcGkuZWRpdFRhYmxlQ29uZmlnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuXG4gICAgICBpZiAob2xkRGF0YSkge1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuTG9hZEpzb25EYXRhKG9sZERhdGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0QXBpQ29uZmlnQW5kQmluZFRvVGFibGU6IGZ1bmN0aW9uIGdldEFwaUNvbmZpZ0FuZEJpbmRUb1RhYmxlKCkge1xuICAgICAgcmV0dXJuO1xuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYXBpLmFjSW50ZXJmYWNlLmdldEJ1dHRvbkFwaUNvbmZpZywge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgdmFyIGFwaVNlbGVjdERhdGEgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIGdyb3VwID0ge1xuICAgICAgICAgICAgR3JvdXA6IHJlc3VsdC5kYXRhW2ldLm5hbWVcbiAgICAgICAgICB9O1xuICAgICAgICAgIHZhciBvcHRpb25zID0gW107XG5cbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdFtqXS5pZCxcbiAgICAgICAgICAgICAgVGV4dDogcmVzdWx0LmRhdGFbaV0uYnV0dG9uQVBJVm9MaXN0W2pdLm5hbWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGdyb3VwW1wiT3B0aW9uc1wiXSA9IG9wdGlvbnM7XG4gICAgICAgICAgYXBpU2VsZWN0RGF0YS5wdXNoKGdyb3VwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzBdLkNsaWVudERhdGFTb3VyY2UgPSBhcGlTZWxlY3REYXRhO1xuICAgICAgICBfc2VsZi5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24oX3NlbGYuYXBpLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGFkZEFQSTogZnVuY3Rpb24gYWRkQVBJKCkge1xuICAgICAgaWYgKHRoaXMuYXBpLmFwaVNlbGVjdERhdGEubm9kZVR5cGVOYW1lID09IFwiQVBJXCIpIHtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlKFtdLCB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMuYXBpLmFwaVNlbGVjdERhdGEudmFsdWUsXG4gICAgICAgICAgcnVuVGltZTogXCLkuYvlkI5cIlxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+36YCJ5oup6ZyA6KaB5re75Yqg55qEQVBJIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbW92ZUFQSTogZnVuY3Rpb24gcmVtb3ZlQVBJKCkge1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZVJvdygpO1xuICAgIH0sXG4gICAgY2xlYXJBUEk6IGZ1bmN0aW9uIGNsZWFyQVBJKCkge1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuICAgIH0sXG4gICAgZ2V0QVBJVGV4dDogZnVuY3Rpb24gZ2V0QVBJVGV4dCh2YWx1ZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFwaS5hcGlEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmFwaS5hcGlEYXRhW2ldLm5vZGVUeXBlTmFtZSA9PSBcIkFQSVwiKSB7XG4gICAgICAgICAgaWYgKHRoaXMuYXBpLmFwaURhdGFbaV0udmFsdWUgPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaS5hcGlEYXRhW2ldLnRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH0sXG4gICAgYWRkSW5uZXJGb3JtQ2xvc2VCdXR0b246IGZ1bmN0aW9uIGFkZElubmVyRm9ybUNsb3NlQnV0dG9uKCkge1xuICAgICAgdmFyIGNsb3NlQnV0dG9uRGF0YSA9IHtcbiAgICAgICAgY2FwdGlvbjogXCLlhbPpl61cIixcbiAgICAgICAgaWQ6IFwiaW5uZXJfY2xvc2VfYnV0dG9uX1wiICsgU3RyaW5nVXRpbGl0eS5UaW1lc3RhbXAoKSxcbiAgICAgICAgYnV0dG9uVHlwZTogXCLlhbPpl63mjInpkq5cIlxuICAgICAgfTtcbiAgICAgIHRoaXMudGFibGVEYXRhLnB1c2goY2xvc2VCdXR0b25EYXRhKTtcbiAgICB9LFxuICAgIGFkZElubmVyRm9ybUpzQ2xpZW50QnV0dG9uOiBmdW5jdGlvbiBhZGRJbm5lckZvcm1Kc0NsaWVudEJ1dHRvbigpIHtcbiAgICAgIHRoaXMuZWRpdEpzQ2xpZW50QnV0dG9uU3RhdHVjID0gXCJhZGRcIjtcbiAgICAgIHRoaXMucmVzZXRJbm5lckpzQ2xpZW50QnV0dG9uRGF0YSgpO1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLmlubmVyRm9ybUpzQ2xpZW50QnV0dG9uV3JhcDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICBoZWlnaHQ6IDUyMCxcbiAgICAgICAgd2lkdGg6IDcyMCxcbiAgICAgICAgdGl0bGU6IFwi56qX5L2T5YaF6ISa5pys5oyJ6ZKuXCJcbiAgICAgIH0pO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuICAgICAgdGhpcy5pbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuaWQgPSBcImlubmVyX2Zvcm1fanNfY2xpZW50X2J1dHRvbl9cIiArIFN0cmluZ1V0aWxpdHkuVGltZXN0YW1wKCk7XG4gICAgfSxcbiAgICBlZGl0SW5uZXJGb3JtSnNDbGllbnRCdXR0b246IGZ1bmN0aW9uIGVkaXRJbm5lckZvcm1Kc0NsaWVudEJ1dHRvbihwYXJhbXMpIHtcbiAgICAgIHRoaXMuYWRkSW5uZXJGb3JtSnNDbGllbnRCdXR0b24oKTtcbiAgICAgIHRoaXMuaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhID0gSnNvblV0aWxpdHkuQ2xvbmVTdHJpbmdpZnkocGFyYW1zLnJvdyk7XG4gICAgICB0aGlzLmVkaXRKc0NsaWVudEJ1dHRvblN0YXR1YyA9IFwiZWRpdFwiO1xuICAgIH0sXG4gICAgcmVzZXRJbm5lckpzQ2xpZW50QnV0dG9uRGF0YTogZnVuY3Rpb24gcmVzZXRJbm5lckpzQ2xpZW50QnV0dG9uRGF0YSgpIHtcbiAgICAgIHRoaXMuaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhID0ge1xuICAgICAgICBjYXB0aW9uOiBcIlwiLFxuICAgICAgICBleGVjQW5kQ2xvc2U6IFwidHJ1ZVwiLFxuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgYnV0dG9uVHlwZTogXCLohJrmnKzmjInpkq5cIixcbiAgICAgICAgYWN0aW9uVHlwZTogXCJyZWxvYWREYXRhXCIsXG4gICAgICAgIGNhbGxKc01ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmE6IFwiXCJcbiAgICAgIH07XG4gICAgfSxcbiAgICBzYXZlSW5uZXJKc0NsaWVudEJ1dHRvblRvTGlzdDogZnVuY3Rpb24gc2F2ZUlubmVySnNDbGllbnRCdXR0b25Ub0xpc3QoKSB7XG4gICAgICB2YXIgc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhKTtcblxuICAgICAgaWYgKHRoaXMuZWRpdEpzQ2xpZW50QnV0dG9uU3RhdHVjID09IFwiYWRkXCIpIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEucHVzaChzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAodGhpcy50YWJsZURhdGFbaV0uaWQgPT0gc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YS5pZCkge1xuICAgICAgICAgICAgVnVlLnNldCh0aGlzLnRhYmxlRGF0YSwgaSwgc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoXCJpbm5lckZvcm1Kc0NsaWVudEJ1dHRvbldyYXBcIik7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHN0eWxlPVxcXCJoZWlnaHQ6IDIxMHB4XFxcIiBjbGFzcz1cXFwiaXYtbGlzdC1wYWdlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiByZWY9XFxcImlubmVyRm9ybVNhdmVCdXR0b25XcmFwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy13cmFwZXIgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7bWFyZ2luLXRvcDogMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFicyBzaXplPVxcXCJzbWFsbFxcXCIgbmFtZT1cXFwiaW5uZXItZm9ybS1zYXZlLWJ1dHRvbi1lZGl0LXRhYnNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFiLXBhbmUgdGFiPVxcXCJpbm5lci1mb3JtLXNhdmUtYnV0dG9uLWVkaXQtdGFic1xcXCIgbGFiZWw9XFxcIlxcdTdFRDFcXHU1QjlBXFx1NEZFMVxcdTYwNkZcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDYwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyMjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU2ODA3XFx1OTg5OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmNhcHRpb25cXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTRGRERcXHU1QjU4XFx1NUU3NlxcdTUxNzNcXHU5NUVEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuc2F2ZUFuZENsb3NlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJ0cnVlXFxcIj5cXHU2NjJGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJmYWxzZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QjU3XFx1NkJCNVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImhlaWdodDogMTQwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogOTQlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XFxcImZpZWxkQ29udGFpbmVyXFxcIiBjbGFzcz1cXFwiZWRpdC10YWJsZS13cmFwXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiAzMTBweDtvdmVyZmxvdzogYXV0bzt3aWR0aDogOTglO21hcmdpbjogYXV0b1xcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7d2lkdGg6IDUlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXAgdmVydGljYWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiIEBjbGljaz1cXFwiYWRkRmllbGRcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCIgQGNsaWNrPVxcXCJyZW1vdmVGaWVsZFxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSB0YWI9XFxcImlubmVyLWZvcm0tc2F2ZS1idXR0b24tZWRpdC10YWJzXFxcIiBsYWJlbD1cXFwiQVBJXFx1OEJCRVxcdTdGNkVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDMyMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogNjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNmZmZmZmZcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfc2VhcmNoX2FwaV90ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1QVBJXFx1NTQwRFxcdTc5RjBcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XFxcImFwaVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCIgc3R5bGU9XFxcImhlaWdodDogMzIwcHg7b3ZlcmZsb3c6IGF1dG9cXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmOFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiIEBjbGljaz1cXFwiYWRkQVBJXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIiBAY2xpY2s9XFxcInJlbW92ZUFQSVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJpb3MtdHJhc2hcXFwiIEBjbGljaz1cXFwiY2xlYXJBUElcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcXCIgdmFsaWduPVxcXCJ0b3BcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XFxcImFwaUNvbnRhaW5lclxcXCIgY2xhc3M9XFxcImVkaXQtdGFibGUtd3JhcFxcXCIgc3R5bGU9XFxcImhlaWdodDogMzQwcHg7b3ZlcmZsb3c6IGF1dG87d2lkdGg6IDk4JTttYXJnaW46IGF1dG9cXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYi1wYW5lIHRhYj1cXFwiaW5uZXItZm9ybS1zYXZlLWJ1dHRvbi1lZGl0LXRhYnNcXFwiIGxhYmVsPVxcXCJcXHU1RjAwXFx1NTNEMVxcdTYyNjlcXHU1QzU1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+SURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5pZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NjcwRFxcdTUyQTFcXHU3QUVGXFx1ODlFM1xcdTY3OTBcXHU3QzdCXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdFNlcnZlclJlc29sdmVNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NjMwOVxcdTk0QUVcXHU4RkRCXFx1ODg0Q1xcdTY3MERcXHU1MkExXFx1N0FFRlxcdTg5RTNcXHU2NzkwXFx1NjVGNixcXHU3QzdCXFx1NTE2OFxcdTc5RjAsXFx1NUMwNlxcdThDMDNcXHU3NTI4XFx1OEJFNVxcdTdDN0IsXFx1OTcwMFxcdTg5ODFcXHU1QjlFXFx1NzNCMFxcdTYzQTVcXHU1M0UzSUZvcm1CdXR0b25DdXN0UmVzb2x2ZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1M0MyXFx1NjU3MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU2NzBEXFx1NTJBMVxcdTdBRUZcXHU4OUUzXFx1Njc5MFxcdTdDN0JcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU2NUI5XFx1NkNENVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTY1QjlcXHU2Q0Q1LFxcdTYzMDlcXHU5NEFFXFx1NUMwNlxcdTdFQ0ZcXHU3NTMxXFx1OEJFNVxcdTY1QjlcXHU2Q0Q1XFx1NkUzMlxcdTY3RDMsXFx1NjcwMFxcdTdFQzhcXHU1RjYyXFx1NjIxMFxcdTk4NzVcXHU5NzYyXFx1NTE0M1xcdTdEMjAsXFx1OTcwMFxcdTg5ODFcXHU4RkQ0XFx1NTZERVxcdTY3MDBcXHU3RUM4XFx1NTE0M1xcdTdEMjBcXHU3Njg0SFRNTFxcdTVCRjlcXHU4QzYxXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kUGFyYVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTY1QjlcXHU2Q0Q1XFx1NzY4NFxcdTUzQzJcXHU2NTcwXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NTQwRVxcdTY1QjlcXHU2Q0Q1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU1NDBFXFx1OEMwM1xcdTc1MjhcXHU2NUI5XFx1NkNENSxcXHU3RUNGXFx1OEZDN1xcdTlFRDhcXHU4QkE0XFx1NzY4NFxcdTZFMzJcXHU2N0QzLFxcdTY1RTBcXHU4RkQ0XFx1NTZERVxcdTUwM0NcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTNDMlxcdTY1NzBcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmFcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU1NDBFXFx1NjVCOVxcdTZDRDVcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NzBCOVxcdTUxRkJcXHU1MjREXFx1NjVCOVxcdTZDRDVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NzBCOVxcdTUxRkJcXHU4QkU1XFx1NjMwOVxcdTk0QUVcXHU2NUY2XFx1NzY4NFxcdTUyNERcXHU3RjZFXFx1NjVCOVxcdTZDRDUsXFx1NTk4MlxcdTY3OUNcXHU4RkQ0XFx1NTZERWZhbHNlXFx1NUMwNlxcdTk2M0JcXHU2QjYyXFx1OUVEOFxcdThCQTRcXHU4QzAzXFx1NzUyOFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1M0MyXFx1NjU3MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmFcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NzBCOVxcdTUxRkJcXHU1MjREXFx1NjVCOVxcdTZDRDVcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYi1wYW5lPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFicz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCIgc3R5bGU9XFxcInBhZGRpbmctdG9wOjRweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIiBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiA0cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJzYXZlSW5uZXJTYXZlQnV0dG9uVG9MaXN0KClcXFwiPiBcXHU0RkREIFxcdTVCNTg8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKCdpbm5lckZvcm1TYXZlQnV0dG9uV3JhcCcpXFxcIj5cXHU1MTczIFxcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHJlZj1cXFwiaW5uZXJGb3JtSnNDbGllbnRCdXR0b25XcmFwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy13cmFwZXIgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7bWFyZ2luLXRvcDogMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFicyBzaXplPVxcXCJzbWFsbFxcXCIgbmFtZT1cXFwiaW5uZXItZm9ybS1qcy1jbGllbnQtYnV0dG9uLWVkaXQtdGFic1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSB0YWI9XFxcImlubmVyLWZvcm0tanMtY2xpZW50LWJ1dHRvbi1lZGl0LXRhYnNcXFwiIGxhYmVsPVxcXCJcXHU3RUQxXFx1NUI5QVxcdTRGRTFcXHU2MDZGXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiA4MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMjIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NjgwN1xcdTk4OThcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuY2FwdGlvblxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NEZERFxcdTVCNThcXHU1RTc2XFx1NTE3M1xcdTk1RURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJpbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuZXhlY0FuZENsb3NlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJ0cnVlXFxcIj5cXHU2NjJGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJmYWxzZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1MkE4XFx1NEY1Q1xcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcImlubmVySnNDbGllbnRCdXR0b25FZGl0RGF0YS5hY3Rpb25UeXBlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJyZWxvYWREYXRhXFxcIj5cXHU5MUNEXFx1NjVCMFxcdTUyQTBcXHU4RjdEPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJjYWxsSnNNZXRob2RcXFwiPlxcdThDMDNcXHU3NTI4SlNcXHU2NUI5XFx1NkNENTwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU2MjY3XFx1ODg0Q1xcdTY1QjlcXHU2Q0Q1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhLmNhbGxKc01ldGhvZFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThDMDNcXHU3NTI4SlNcXHU2NUI5XFx1NkNENVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSB0YWI9XFxcImlubmVyLWZvcm0tanMtY2xpZW50LWJ1dHRvbi1lZGl0LXRhYnNcXFwiIGxhYmVsPVxcXCJcXHU1RjAwXFx1NTNEMVxcdTYyNjlcXHU1QzU1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+SURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuaWRcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY3MERcXHU1MkExXFx1N0FFRlxcdTg5RTNcXHU2NzkwXFx1N0M3QlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVySnNDbGllbnRCdXR0b25FZGl0RGF0YS5jdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU2MzA5XFx1OTRBRVxcdThGREJcXHU4ODRDXFx1NjcwRFxcdTUyQTFcXHU3QUVGXFx1ODlFM1xcdTY3OTBcXHU2NUY2LFxcdTdDN0JcXHU1MTY4XFx1NzlGMCxcXHU1QzA2XFx1OEMwM1xcdTc1MjhcXHU4QkU1XFx1N0M3QixcXHU5NzAwXFx1ODk4MVxcdTVCOUVcXHU3M0IwXFx1NjNBNVxcdTUzRTNJRm9ybUJ1dHRvbkN1c3RSZXNvbHZlXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhLmN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU2NzBEXFx1NTJBMVxcdTdBRUZcXHU4OUUzXFx1Njc5MFxcdTdDN0JcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU2NUI5XFx1NkNENVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVySnNDbGllbnRCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU2NUI5XFx1NkNENSxcXHU2MzA5XFx1OTRBRVxcdTVDMDZcXHU3RUNGXFx1NzUzMVxcdThCRTVcXHU2NUI5XFx1NkNENVxcdTZFMzJcXHU2N0QzLFxcdTY3MDBcXHU3RUM4XFx1NUY2MlxcdTYyMTBcXHU5ODc1XFx1OTc2MlxcdTUxNDNcXHU3RDIwLFxcdTk3MDBcXHU4OTgxXFx1OEZENFxcdTU2REVcXHU2NzAwXFx1N0VDOFxcdTUxNDNcXHU3RDIwXFx1NzY4NEhUTUxcXHU1QkY5XFx1OEM2MVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1M0MyXFx1NjU3MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVySnNDbGllbnRCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NjVCOVxcdTZDRDVcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU1NDBFXFx1NjVCOVxcdTZDRDVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU1NDBFXFx1OEMwM1xcdTc1MjhcXHU2NUI5XFx1NkNENSxcXHU3RUNGXFx1OEZDN1xcdTlFRDhcXHU4QkE0XFx1NzY4NFxcdTZFMzJcXHU2N0QzLFxcdTY1RTBcXHU4RkQ0XFx1NTZERVxcdTUwM0NcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTNDMlxcdTY1NzBcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lckpzQ2xpZW50QnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NTQwRVxcdTY1QjlcXHU2Q0Q1XFx1NzY4NFxcdTUzQzJcXHU2NTcwXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTcwQjlcXHU1MUZCXFx1NTI0RFxcdTY1QjlcXHU2Q0Q1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU3MEI5XFx1NTFGQlxcdThCRTVcXHU2MzA5XFx1OTRBRVxcdTY1RjZcXHU3Njg0XFx1NTI0RFxcdTdGNkVcXHU2NUI5XFx1NkNENSxcXHU1OTgyXFx1Njc5Q1xcdThGRDRcXHU1NkRFZmFsc2VcXHU1QzA2XFx1OTYzQlxcdTZCNjJcXHU5RUQ4XFx1OEJBNFxcdThDMDNcXHU3NTI4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJKc0NsaWVudEJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmFcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NzBCOVxcdTUxRkJcXHU1MjREXFx1NjVCOVxcdTZDRDVcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYi1wYW5lPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFicz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCIgc3R5bGU9XFxcInBhZGRpbmctdG9wOjRweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIiBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiA0cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJzYXZlSW5uZXJKc0NsaWVudEJ1dHRvblRvTGlzdCgpXFxcIj4gXFx1NEZERCBcXHU1QjU4PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgnaW5uZXJGb3JtSnNDbGllbnRCdXR0b25XcmFwJylcXFwiPlxcdTUxNzMgXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImhlaWdodDogMjEwcHg7d2lkdGg6IDEwMCVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiBsZWZ0O3dpZHRoOiA4MiVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSA6aGVpZ2h0PVxcXCIyMTBcXFwiIHdpZHRoPVxcXCIxMDAlXFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJjb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwidGFibGVEYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cXFwic21hbGxcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogMTUlO21hcmdpbi1sZWZ0OiA4cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHZlcnRpY2FsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIEBjbGljaz1cXFwiYWRkSW5uZXJGb3JtU2F2ZUJ1dHRvbigpXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTRGRERcXHU1QjU4XFx1NjMwOVxcdTk0QUU8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiYWRkSW5uZXJGb3JtQ2xvc2VCdXR0b24oKVxcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU1MTczXFx1OTVFRFxcdTYzMDlcXHU5NEFFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImFkZElubmVyRm9ybUpzQ2xpZW50QnV0dG9uKClcXFwiIGljb249XFxcIm1kLWFkZFxcXCI+XFx1ODExQVxcdTY3MkNcXHU2MzA5XFx1OTRBRTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgZGlzYWJsZWQ+XFx1NjEwRlxcdTg5QzFcXHU2MzA5XFx1OTRBRTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgZGlzYWJsZWQ+XFx1NkQ0MVxcdTdBMEJcXHU2MzA5XFx1OTRBRTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIGRpc2FibGVkIGljb249XFxcIm1kLWFkZFxcXCI+XFx1NjJGN1xcdThEMURKc29uPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU5RUNGXFx1OEQzNEpzb248L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJsaXN0LXNlYXJjaC1jb250cm9sLWJpbmQtdG8tY29tcFwiLCB7XG4gIHByb3BzOiBbXCJiaW5kVG9TZWFyY2hGaWVsZFByb3BcIiwgXCJkYXRhU2V0SWRcIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBiaW5kVG9TZWFyY2hGaWVsZDoge1xuICAgICAgICBjb2x1bW5UaXRsZTogXCJcIixcbiAgICAgICAgY29sdW1uVGFibGVOYW1lOiBcIlwiLFxuICAgICAgICBjb2x1bW5OYW1lOiBcIlwiLFxuICAgICAgICBjb2x1bW5DYXB0aW9uOiBcIlwiLFxuICAgICAgICBjb2x1bW5EYXRhVHlwZU5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbk9wZXJhdG9yOiBcIuWMuemFjVwiXG4gICAgICB9LFxuICAgICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICAgIGRlZmF1bHRUeXBlOiBcIlwiLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRUZXh0OiBcIlwiXG4gICAgICB9LFxuICAgICAgdHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBpZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdENvbHVtbih0cmVlTm9kZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25EYmxDbGljazogZnVuY3Rpb24gb25EYmxDbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge30sXG4gICAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge31cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsXG4gICAgICB9LFxuICAgICAgdGVtcERhdGE6IHtcbiAgICAgICAgZGVmYXVsdERpc3BsYXlUZXh0OiBcIlwiXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBiaW5kVG9TZWFyY2hGaWVsZFByb3A6IGZ1bmN0aW9uIGJpbmRUb1NlYXJjaEZpZWxkUHJvcChuZXdWYWx1ZSkge1xuICAgICAgY29uc29sZS5sb2cobmV3VmFsdWUpO1xuICAgIH0sXG4gICAgZGVmYXVsdFZhbHVlUHJvcDogZnVuY3Rpb24gZGVmYXVsdFZhbHVlUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBuZXdWYWx1ZTtcblxuICAgICAgaWYgKCFTdHJpbmdVdGlsaXR5LklzTnVsbE9yRW1wdHkodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUpKSB7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gRGVmYXVsdFZhbHVlVXRpbGl0eS5mb3JtYXRUZXh0KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlLCB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuYmluZFRvRmllbGQgPSB0aGlzLmJpbmRUb0ZpZWxkUHJvcDtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoZGF0YVNldFBPKSB7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhU2V0UE8pO1xuICAgICAgdmFyIHRyZWVOb2RlQXJyYXkgPSBbXTtcbiAgICAgIHZhciByb290Tm9kZSA9IHtcbiAgICAgICAgcGlkOiBcIi0xXCIsXG4gICAgICAgIHRleHQ6IGRhdGFTZXRQTy5kc05hbWUsXG4gICAgICAgIGlkOiBkYXRhU2V0UE8uZHNJZCxcbiAgICAgICAgbm9kZVR5cGU6IFwiRGF0YVNldFwiXG4gICAgICB9O1xuICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHJvb3ROb2RlKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRyZWVOb2RlQXJyYXkucHVzaCh7XG4gICAgICAgICAgcGlkOiBkYXRhU2V0UE8uZHNJZCxcbiAgICAgICAgICB0ZXh0OiBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnJ0VGFibGVDYXB0aW9uLFxuICAgICAgICAgIGlkOiBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnJ0VGFibGVJZCxcbiAgICAgICAgICBub2RlVHlwZTogXCJUYWJsZVwiXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZGF0YVNldFBPLnJlbGF0ZWRUYWJsZVZvTGlzdFtpXS50YWJsZUZpZWxkUE9MaXN0Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgdmFyIHNpbmdsZU5vZGUgPSBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnRhYmxlRmllbGRQT0xpc3Rbal07XG4gICAgICAgICAgc2luZ2xlTm9kZS5waWQgPSBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnJ0VGFibGVJZDtcbiAgICAgICAgICBzaW5nbGVOb2RlLnRleHQgPSBzaW5nbGVOb2RlLmZpZWxkQ2FwdGlvbiArIFwiW1wiICsgc2luZ2xlTm9kZS5maWVsZE5hbWUgKyBcIl1cIjtcbiAgICAgICAgICBzaW5nbGVOb2RlLm5vZGVUeXBlID0gXCJUYWJsZUZpZWxkXCI7XG4gICAgICAgICAgc2luZ2xlTm9kZS5pZCA9IHNpbmdsZU5vZGUuZmllbGRJZDtcbiAgICAgICAgICBzaW5nbGVOb2RlLmljb24gPSBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgICB0cmVlTm9kZUFycmF5LnB1c2goc2luZ2xlTm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy50cmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJCh0aGlzLiRyZWZzLnpUcmVlVUwpLCB0aGlzLnRyZWUudHJlZVNldHRpbmcsIHRyZWVOb2RlQXJyYXkpO1xuICAgICAgdGhpcy50cmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMudHJlZS50cmVlT2JqLCB0aGlzLiRyZWZzLnR4dF9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgfSxcbiAgICBzZWxlY3RDb2x1bW46IGZ1bmN0aW9uIHNlbGVjdENvbHVtbihmaWVsZFBPKSB7XG4gICAgICBpZiAoZmllbGRQTy5ub2RlVHlwZSA9PSBcIlRhYmxlRmllbGRcIikge1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtblRhYmxlTmFtZSA9IGZpZWxkUE8udGFibGVOYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtbk5hbWUgPSBmaWVsZFBPLmZpZWxkTmFtZTtcbiAgICAgICAgdGhpcy5iaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9uID0gZmllbGRQTy5maWVsZENhcHRpb247XG4gICAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQuY29sdW1uRGF0YVR5cGVOYW1lID0gZmllbGRQTy5maWVsZERhdGFUeXBlO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmluZFRvU2VhcmNoRmllbGQpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmluZFRvU2VhcmNoRmllbGQ6IHRoaXMuYmluZFRvU2VhcmNoRmllbGQsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogdGhpcy5kZWZhdWx0VmFsdWVcbiAgICAgIH07XG4gICAgfSxcbiAgICBzZXREYXRhOiBmdW5jdGlvbiBzZXREYXRhKGJpbmRUb1NlYXJjaEZpZWxkLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGJpbmRUb1NlYXJjaEZpZWxkKTtcbiAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQgPSBiaW5kVG9TZWFyY2hGaWVsZDtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICB9LFxuICAgIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXc6IGZ1bmN0aW9uIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5saXN0RGVzaWduLnNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ0JlZ2luKHdpbmRvdywgbnVsbCk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gcmVzdWx0LlR5cGU7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRWYWx1ZSA9IHJlc3VsdC5WYWx1ZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSByZXN1bHQuVGV4dDtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSBcIlwiO1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IFwiXCI7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyODBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjgwN1xcdTk4OThcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5UaXRsZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHJvd3NwYW49XFxcIjlcXFwiIHZhbGlnbj1cXFwidG9wXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU1MjE3XFx1NTQwRFxcdTYyMTZcXHU4MDA1XFx1NjgwN1xcdTk4OThcXFwiPjwvaS1pbnB1dD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcInpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZSBkaXYtY3VzdG9tLXNjcm9sbFxcXCIgc3R5bGU9XFxcImhlaWdodDogNDMwcHg7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTogc2Nyb2xsO3dpZHRoOiAzODJweFxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjI0MFxcdTVDNUVcXHU4ODY4XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRUb1NlYXJjaEZpZWxkLmNvbHVtblRhYmxlTmFtZX19XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTdFRDFcXHU1QjlBXFx1NUI1N1xcdTZCQjVcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7YmluZFRvU2VhcmNoRmllbGQuY29sdW1uQ2FwdGlvbn19XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTVCNTdcXHU2QkI1XFx1NTQwRFxcdTc5RjBcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7YmluZFRvU2VhcmNoRmllbGQuY29sdW1uTmFtZX19XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTVCNTdcXHU2QkI1XFx1N0M3QlxcdTU3OEJcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7YmluZFRvU2VhcmNoRmllbGQuY29sdW1uRGF0YVR5cGVOYW1lfX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1OEZEMFxcdTdCOTdcXHU3QjI2XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFRvU2VhcmNoRmllbGQuY29sdW1uT3BlcmF0b3JcXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJlcVxcXCI+XFx1N0I0OVxcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwibGlrZVxcXCI+XFx1NTMzOVxcdTkxNEQ8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwibm90X2VxXFxcIj5cXHU0RTBEXFx1N0I0OVxcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwiZ3RcXFwiPlxcdTU5MjdcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImd0X2VxXFxcIj5cXHU1OTI3XFx1NEU4RVxcdTdCNDlcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImx0XFxcIj5cXHU1QzBGXFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJsdF9lcVxcXCI+XFx1NUMwRlxcdTRFOEVcXHU3QjQ5XFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJsZWZ0X2xpa2VcXFwiPlxcdTVERTZcXHU1MzM5XFx1OTE0RDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJyaWdodF9saWtlXFxcIj5cXHU1M0YzXFx1NTMzOVxcdTkxNEQ8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwiaW5jbHVkZVxcXCI+XFx1NTMwNVxcdTU0MkJbXFx1NjY4MlxcdTY1RjZcXHU0RTBEXFx1NjUyRlxcdTYzMDFdPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIj5cXHU5RUQ4XFx1OEJBNFxcdTUwM0M8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0RGVmYXVsdFZhbHVlVmlld1xcXCI+Li4uPC9idXR0b24+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT1cXFwiaGVpZ2h0OiAzNXB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjJcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3RlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dH19XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTU5MDdcXHU2Q0U4XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz1cXFwiOFxcXCI+PC90ZXh0YXJlYT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJsaXN0LXRhYmxlLWxhYmVsLWJpbmQtdG8tY29tcFwiLCB7XG4gIHByb3BzOiBbXCJiaW5kUHJvcFByb3BcIiwgXCJkYXRhU2V0SWRcIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBiaW5kUHJvcDoge1xuICAgICAgICBjb2x1bW5UYWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbk5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbkNhcHRpb246IFwiXCIsXG4gICAgICAgIGNvbHVtbkRhdGFUeXBlTmFtZTogXCJcIixcbiAgICAgICAgdGFyZ2V0QnV0dG9uSWQ6IFwiXCIsXG4gICAgICAgIGNvbHVtbkFsaWduOiBcIuWxheS4reWvuem9kFwiXG4gICAgICB9LFxuICAgICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICAgIGRlZmF1bHRUeXBlOiBcIlwiLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRUZXh0OiBcIlwiXG4gICAgICB9LFxuICAgICAgdHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBpZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdENvbHVtbih0cmVlTm9kZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25EYmxDbGljazogZnVuY3Rpb24gb25EYmxDbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge30sXG4gICAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge31cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsXG4gICAgICB9LFxuICAgICAgdGVtcERhdGE6IHtcbiAgICAgICAgZGVmYXVsdERpc3BsYXlUZXh0OiBcIlwiXG4gICAgICB9LFxuICAgICAgYnV0dG9uczogW11cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJpbmRQcm9wUHJvcDogZnVuY3Rpb24gYmluZFByb3BQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhuZXdWYWx1ZSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWVQcm9wOiBmdW5jdGlvbiBkZWZhdWx0VmFsdWVQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IG5ld1ZhbHVlO1xuXG4gICAgICBpZiAoIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eSh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSkpIHtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5iaW5kVG9GaWVsZCA9IHRoaXMuYmluZFRvRmllbGRQcm9wO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdChkYXRhU2V0Vm8sIGJ1dHRvbnMpIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGFTZXRWbyk7XG4gICAgICB2YXIgdHJlZU5vZGVBcnJheSA9IFtdO1xuICAgICAgdmFyIHRyZWVOb2RlRGF0YSA9IGRhdGFTZXRWby5jb2x1bW5Wb0xpc3Q7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJlZU5vZGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBzaW5nbGVOb2RlID0gdHJlZU5vZGVEYXRhW2ldO1xuICAgICAgICBzaW5nbGVOb2RlLnBpZCA9IGRhdGFTZXRWby5kc0lkO1xuICAgICAgICBzaW5nbGVOb2RlLnRleHQgPSBzaW5nbGVOb2RlLmNvbHVtbkNhcHRpb24gKyBcIltcIiArIHNpbmdsZU5vZGUuY29sdW1uTmFtZSArIFwiXVwiO1xuICAgICAgICBzaW5nbGVOb2RlLm5vZGVUeXBlID0gXCJEYXRhU2V0Q29sdW1uXCI7XG4gICAgICAgIHNpbmdsZU5vZGUuaWQgPSBzaW5nbGVOb2RlLmNvbHVtbklkO1xuICAgICAgICBzaW5nbGVOb2RlLmljb24gPSBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHNpbmdsZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcm9vdE5vZGUgPSB7XG4gICAgICAgIHBpZDogXCItMVwiLFxuICAgICAgICB0ZXh0OiBkYXRhU2V0Vm8uZHNOYW1lLFxuICAgICAgICBpZDogZGF0YVNldFZvLmRzSWQsXG4gICAgICAgIG5vZGVUeXBlOiBcIkRhdGFTZXRcIlxuICAgICAgfTtcbiAgICAgIHRyZWVOb2RlQXJyYXkucHVzaChyb290Tm9kZSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKHRoaXMuJHJlZnMuelRyZWVVTCksIHRoaXMudHJlZS50cmVlU2V0dGluZywgdHJlZU5vZGVBcnJheSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICB0aGlzLmJ1dHRvbnMgPSBidXR0b25zO1xuICAgIH0sXG4gICAgc2VsZWN0Q29sdW1uOiBmdW5jdGlvbiBzZWxlY3RDb2x1bW4oY29sdW1uVm8pIHtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uVGFibGVOYW1lID0gY29sdW1uVm8uY29sdW1uVGFibGVOYW1lO1xuICAgICAgdGhpcy5iaW5kUHJvcC5jb2x1bW5OYW1lID0gY29sdW1uVm8uY29sdW1uTmFtZTtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uQ2FwdGlvbiA9IGNvbHVtblZvLmNvbHVtbkNhcHRpb247XG4gICAgICB0aGlzLmJpbmRQcm9wLmNvbHVtbkRhdGFUeXBlTmFtZSA9IGNvbHVtblZvLmNvbHVtbkRhdGFUeXBlTmFtZTtcbiAgICB9LFxuICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmJpbmRQcm9wKTtcblxuICAgICAgaWYgKCF0aGlzLmJpbmRQcm9wLnRhcmdldEJ1dHRvbklkKSB7XG4gICAgICAgIHRoaXMuYmluZFByb3AudGFyZ2V0QnV0dG9uSWQgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBiaW5kUHJvcDogdGhpcy5iaW5kUHJvcCxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiB0aGlzLmRlZmF1bHRWYWx1ZVxuICAgICAgfTtcbiAgICB9LFxuICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoYmluZFByb3AsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgY29uc29sZS5sb2coYmluZFByb3ApO1xuICAgICAgdGhpcy5iaW5kUHJvcCA9IGJpbmRQcm9wO1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgIH0sXG4gICAgc2VsZWN0RGVmYXVsdFZhbHVlVmlldzogZnVuY3Rpb24gc2VsZWN0RGVmYXVsdFZhbHVlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50Lmxpc3REZXNpZ24uc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nQmVnaW4od2luZG93LCBudWxsKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWUocmVzdWx0KSB7XG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSByZXN1bHQuVHlwZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gcmVzdWx0LlZhbHVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IHJlc3VsdC5UZXh0O1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gXCJcIjtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDI4MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QkY5XFx1OUY1MFxcdTY1QjlcXHU1RjBGXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AuY29sdW1uQWxpZ25cXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1REU2XFx1NUJGOVxcdTlGNTBcXFwiPlxcdTVERTZcXHU1QkY5XFx1OUY1MDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwXFxcIj5cXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcIlxcdTUzRjNcXHU1QkY5XFx1OUY1MFxcXCI+XFx1NTNGM1xcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCByb3dzcGFuPVxcXCI5XFxcIiB2YWxpZ249XFxcInRvcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcmVmPVxcXCJ6VHJlZVVMXFxcIiBpZD1cXFwibGlzdC10YWJsZS1sYWJlbC1iaW5kLXRvLWNvbXAtdHJlZVxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiA0NzBweDtvdmVyZmxvdy15OiBhdXRvO292ZXJmbG93LXg6IGhpZGRlbjt3aWR0aDogMzgycHhcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTYyNDBcXHU1QzVFXFx1ODg2OFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5UYWJsZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU3RUQxXFx1NUI5QVxcdTVCNTdcXHU2QkI1XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbkNhcHRpb259fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTU0MERcXHU3OUYwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbk5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTdDN0JcXHU1NzhCXFx1RkYxQSBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5EYXRhVHlwZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4OUU2XFx1NTNEMVxcdTYzMDlcXHU5NEFFXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AudGFyZ2V0QnV0dG9uSWRcXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCIgOmNsZWFyYWJsZT1cXFwidHJ1ZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIDp2YWx1ZT1cXFwiaXRlbS5idXR0b25JZFxcXCIgdi1mb3I9XFxcIml0ZW0gaW4gYnV0dG9uc1xcXCI+e3tpdGVtLmJ1dHRvbkNhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCI+XFx1OUVEOFxcdThCQTRcXHU1MDNDPGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiIHYtb246Y2xpY2s9XFxcInNlbGVjdERlZmF1bHRWYWx1ZVZpZXdcXFwiPi4uLjwvYnV0dG9uPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9XFxcImhlaWdodDogMzVweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3t0ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHR9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1OTA3XFx1NkNFOFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XFxcIjhcXFwiPjwvdGV4dGFyZWE+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwibW9kdWxlLWxpc3Qtd2ViZm9ybS1jb21wXCIsIHtcbiAgcHJvcHM6IFsnbGlzdEhlaWdodCcsICdtb2R1bGVEYXRhJywgJ2FjdGl2ZVRhYk5hbWUnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML0J1aWxkZXIvRm9ybS9Gb3JtRGVzaWduLmh0bWxcIixcbiAgICAgICAgcHJldmlld1dlYkZvcm1Vcmw6IFwiL0hUTUwvQnVpbGRlci9Gb3JtL0Zvcm1QcmV2aWV3Lmh0bWxcIixcbiAgICAgICAgcmVsb2FkRGF0YTogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vR2V0TGlzdERhdGFcIixcbiAgICAgICAgXCJkZWxldGVcIjogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vRGVsZXRlXCIsXG4gICAgICAgIG1vdmU6IFwiL1Jlc3QvQnVpbGRlci9Gb3JtL01vdmVcIixcbiAgICAgICAgY29weUZvcm06IFwiL1Jlc3QvQnVpbGRlci9Gb3JtL0NvcHlGb3JtXCJcbiAgICAgIH0sXG4gICAgICBpZEZpZWxkTmFtZTogXCJmb3JtSWRcIixcbiAgICAgIHNlYXJjaENvbmRpdGlvbjoge1xuICAgICAgICBmb3JtTW9kdWxlSWQ6IHtcbiAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICB0eXBlOiBTZWFyY2hVdGlsaXR5LlNlYXJjaEZpZWxkVHlwZS5TdHJpbmdUeXBlXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICB0eXBlOiAnc2VsZWN0aW9uJyxcbiAgICAgICAgd2lkdGg6IDYwLFxuICAgICAgICBhbGlnbjogJ2NlbnRlcidcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfnvJblj7cnLFxuICAgICAgICBrZXk6ICdmb3JtQ29kZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICB3aWR0aDogODBcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfooajljZXlkI3np7AnLFxuICAgICAgICBrZXk6ICdmb3JtTmFtZScsXG4gICAgICAgIGFsaWduOiBcImxlZnRcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WUr+S4gOWQjScsXG4gICAgICAgIGtleTogJ2Zvcm1TaW5nbGVOYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflpIfms6gnLFxuICAgICAgICBrZXk6ICdmb3JtRGVzYycsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57yW6L6R5pe26Ze0JyxcbiAgICAgICAga2V5OiAnZm9ybVVwZGF0ZVRpbWUnLFxuICAgICAgICB3aWR0aDogMTAwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlUmVuZGVyZXIuVG9EYXRlWVlZWV9NTV9ERChoLCBwYXJhbXMucm93LmZvcm1VcGRhdGVUaW1lKTtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgIGtleTogJ2Zvcm1JZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKSwgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5EZWxldGVCdXR0b24oaCwgcGFyYW1zLCBfc2VsZi5pZEZpZWxkTmFtZSwgX3NlbGYpXSk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIHRhYmxlRGF0YU9yaWdpbmFsOiBbXSxcbiAgICAgIHNlbGVjdGlvblJvd3M6IG51bGwsXG4gICAgICBwYWdlVG90YWw6IDAsXG4gICAgICBwYWdlU2l6ZTogNTAwLFxuICAgICAgcGFnZU51bTogMSxcbiAgICAgIHNlYXJjaFRleHQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHdpbmRvdy5fbW9kdWxlbGlzdHdlYmZvcm1jb21wID0gdGhpcztcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBtb2R1bGVEYXRhOiBmdW5jdGlvbiBtb2R1bGVEYXRhKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBhY3RpdmVUYWJOYW1lOiBmdW5jdGlvbiBhY3RpdmVUYWJOYW1lKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBzZWFyY2hUZXh0OiBmdW5jdGlvbiBzZWFyY2hUZXh0KG5ld1ZhbCkge1xuICAgICAgaWYgKG5ld1ZhbCkge1xuICAgICAgICB2YXIgZmlsdGVyVGFibGVEYXRhID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciByb3cgPSB0aGlzLnRhYmxlRGF0YVtpXTtcblxuICAgICAgICAgIGlmIChyb3cuZm9ybUNvZGUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyb3cuZm9ybU5hbWUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBmaWx0ZXJUYWJsZURhdGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHRoaXMudGFibGVEYXRhT3JpZ2luYWw7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0TW9kdWxlTmFtZTogZnVuY3Rpb24gZ2V0TW9kdWxlTmFtZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZHVsZURhdGEgPT0gbnVsbCA/IFwi6K+36YCJ5Lit5qih5Z2XXCIgOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlVGV4dDtcbiAgICB9LFxuICAgIHNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gc2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikge1xuICAgICAgdGhpcy5zZWxlY3Rpb25Sb3dzID0gc2VsZWN0aW9uO1xuICAgIH0sXG4gICAgcmVsb2FkRGF0YTogZnVuY3Rpb24gcmVsb2FkRGF0YSgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCAmJiB0aGlzLmFjdGl2ZVRhYk5hbWUgPT0gXCJsaXN0LXdlYmZvcm1cIikge1xuICAgICAgICB0aGlzLnNlYXJjaENvbmRpdGlvbi5mb3JtTW9kdWxlSWQudmFsdWUgPSB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWQ7XG4gICAgICAgIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlQmluZERhdGFCeVNlYXJjaCh7XG4gICAgICAgICAgdXJsOiB0aGlzLmFjSW50ZXJmYWNlLnJlbG9hZERhdGEsXG4gICAgICAgICAgcGFnZU51bTogdGhpcy5wYWdlTnVtLFxuICAgICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICAgIHNlYXJjaENvbmRpdGlvbjogdGhpcy5zZWFyY2hDb25kaXRpb24sXG4gICAgICAgICAgcGFnZUFwcE9iajogdGhpcyxcbiAgICAgICAgICB0YWJsZUxpc3Q6IHRoaXMsXG4gICAgICAgICAgaWRGaWVsZDogdGhpcy5pZEZpZWxkTmFtZSxcbiAgICAgICAgICBhdXRvU2VsZWN0ZWRPbGRSb3dzOiB0cnVlLFxuICAgICAgICAgIHN1Y2Nlc3NGdW5jOiBmdW5jdGlvbiBzdWNjZXNzRnVuYyhyZXN1bHQsIHBhZ2VBcHBPYmopIHtcbiAgICAgICAgICAgIHBhZ2VBcHBPYmoudGFibGVEYXRhT3JpZ2luYWwgPSByZXN1bHQuZGF0YS5saXN0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbG9hZERpY3Q6IGZhbHNlLFxuICAgICAgICAgIGN1c3RQYXJhczoge31cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCkge1xuICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgICBcIm9wXCI6IFwiYWRkXCIsXG4gICAgICAgICAgXCJtb2R1bGVJZFwiOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWRcbiAgICAgICAgfSk7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1RhYldpbmRvdyh1cmwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6K+36YCJ5oup5qih5Z2XIVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGVkaXQ6IGZ1bmN0aW9uIGVkaXQocmVjb3JkSWQpIHtcbiAgICAgIHZhciB1cmwgPSBCYXNlVXRpbGl0eS5CdWlsZFZpZXcodGhpcy5hY0ludGVyZmFjZS5lZGl0Vmlldywge1xuICAgICAgICBcIm9wXCI6IFwidXBkYXRlXCIsXG4gICAgICAgIFwicmVjb3JkSWRcIjogcmVjb3JkSWRcbiAgICAgIH0pO1xuICAgICAgRGlhbG9nVXRpbGl0eS5PcGVuTmV3VGFiV2luZG93KHVybCk7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChyZWNvcmRJZCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVEZWxldGVSb3codGhpcy5hY0ludGVyZmFjZVtcImRlbGV0ZVwiXSwgcmVjb3JkSWQsIHRoaXMpO1xuICAgIH0sXG4gICAgc3RhdHVzRW5hYmxlOiBmdW5jdGlvbiBzdGF0dXNFbmFibGUoc3RhdHVzTmFtZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSh0aGlzLmFjSW50ZXJmYWNlLnN0YXR1c0NoYW5nZSwgdGhpcy5zZWxlY3Rpb25Sb3dzLCBhcHBMaXN0LmlkRmllbGROYW1lLCBzdGF0dXNOYW1lLCBhcHBMaXN0KTtcbiAgICB9LFxuICAgIG1vdmU6IGZ1bmN0aW9uIG1vdmUodHlwZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3TW92ZUZhY2UodGhpcy5hY0ludGVyZmFjZS5tb3ZlLCB0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMuaWRGaWVsZE5hbWUsIHR5cGUsIHRoaXMpO1xuICAgIH0sXG4gICAgcHJldmlld1dlYkZvcm06IGZ1bmN0aW9uIHByZXZpZXdXZWJGb3JtKCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVNYXJlU3VyZVNlbGVjdGVkT25lKHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcykudGhlbihmdW5jdGlvbiAoc2VsZWN0aW9uUm93cykge1xuICAgICAgICB2YXIgcmVjb3JkSWQgPSBzZWxlY3Rpb25Sb3dzWzBdW3RoaXMuaWRGaWVsZE5hbWVdO1xuICAgICAgICB2YXIgcHJldmlld1VybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLnByZXZpZXdXZWJGb3JtVXJsLCB7XG4gICAgICAgICAgRm9ybUlkOiByZWNvcmRJZCxcbiAgICAgICAgICBPcGVyYXRpb25UeXBlOiBcImFkZFwiLFxuICAgICAgICAgIFJlY29yZElkOiBTdHJpbmdVdGlsaXR5Lkd1aWQoKVxuICAgICAgICB9KTtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5PcGVuTmV3VGFiV2luZG93KHByZXZpZXdVcmwpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBjb3B5OiBmdW5jdGlvbiBjb3B5KCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVNYXJlU3VyZVNlbGVjdGVkT25lKHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcykudGhlbihmdW5jdGlvbiAoc2VsZWN0aW9uUm93cykge1xuICAgICAgICB2YXIgcmVjb3JkSWQgPSBzZWxlY3Rpb25Sb3dzWzBdW3RoaXMuaWRGaWVsZE5hbWVdO1xuICAgICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuY29weUZvcm0sIHtcbiAgICAgICAgICBmb3JtSWQ6IHJlY29yZElkXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICB0aGlzLnJlbG9hZERhdGEoKTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgY2xhc3M9XFxcIm1vZHVsZS1saXN0LXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwibGlzdC1idXR0b24td3JhcFxcXCIgY2xhc3M9XFxcImxpc3QtYnV0dG9uLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1vZHVsZS1saXN0LW5hbWVcXFwiPjxJY29uIHR5cGU9XFxcImlvcy1hcnJvdy1kcm9wcmlnaHQtY2lyY2xlXFxcIiAvPiZuYnNwO1xcdTZBMjFcXHU1NzU3XFx1MzAxMHt7Z2V0TW9kdWxlTmFtZSgpfX1cXHUzMDExPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibGlzdC1idXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiAgdHlwZT1cXFwic3VjY2Vzc1xcXCIgQGNsaWNrPVxcXCJhZGQoKVxcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU2NUIwXFx1NTg5RTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjb3B5KClcXFwiIGljb249XFxcIm1kLWFsYnVtc1xcXCI+XFx1NTkwRFxcdTUyMzY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwicHJldmlld1dlYkZvcm0oKVxcXCIgIGljb249XFxcIm1kLXByaWNldGFnXFxcIj5cXHU5ODg0XFx1ODlDODwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU1RjE1XFx1NTE2NVVSTCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGRpc2FibGVkIGljb249XFxcIm1kLWJvb2ttYXJrc1xcXCI+XFx1NTM4NlxcdTUzRjJcXHU3MjQ4XFx1NjcyQzwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJtb3ZlKCd1cCcpXFxcIiBpY29uPVxcXCJtZC1hcnJvdy11cFxcXCI+XFx1NEUwQVxcdTc5RkI8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwibW92ZSgnZG93bicpXFxcIiBpY29uPVxcXCJtZC1hcnJvdy1kb3duXFxcIj5cXHU0RTBCXFx1NzlGQjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiByaWdodDt3aWR0aDogMjAwcHg7bWFyZ2luLXJpZ2h0OiAxMHB4O1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgdi1tb2RlbD1cXFwic2VhcmNoVGV4dFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJjbGVhcjogYm90aFxcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIDpoZWlnaHQ9XFxcImxpc3RIZWlnaHRcXFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XFxcImNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJ0YWJsZURhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAb24tc2VsZWN0aW9uLWNoYW5nZT1cXFwic2VsZWN0aW9uQ2hhbmdlXFxcIj48L2ktdGFibGU+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcIm1vZHVsZS1saXN0LXdlYmxpc3QtY29tcFwiLCB7XG4gIHByb3BzOiBbJ2xpc3RIZWlnaHQnLCAnbW9kdWxlRGF0YScsICdhY3RpdmVUYWJOYW1lJ10sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBlZGl0VmlldzogXCIvSFRNTC9CdWlsZGVyL0xpc3QvTGlzdERlc2lnbi5odG1sXCIsXG4gICAgICAgIHJlbG9hZERhdGE6IFwiL1Jlc3QvQnVpbGRlci9MaXN0L0dldExpc3REYXRhRm9yTW9kdWxlXCIsXG4gICAgICAgIFwiZGVsZXRlXCI6IFwiL1Jlc3QvQnVpbGRlci9MaXN0L0RlbGV0ZVwiLFxuICAgICAgICBtb3ZlOiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9Nb3ZlXCIsXG4gICAgICAgIGNvcHlMaXN0OiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9Db3B5TGlzdFwiXG4gICAgICB9LFxuICAgICAgaWRGaWVsZE5hbWU6IFwibGlzdElkXCIsXG4gICAgICBzZWFyY2hDb25kaXRpb246IHtcbiAgICAgICAgbGlzdE1vZHVsZUlkOiB7XG4gICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgdHlwZTogU2VhcmNoVXRpbGl0eS5TZWFyY2hGaWVsZFR5cGUuU3RyaW5nVHlwZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdHlwZTogJ2V4cGFuZCcsXG4gICAgICAgIHdpZHRoOiA1MCxcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIGgoJ3dlYmxpc3QtZXhwYW5kLXJvdycsIHtcbiAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgIHJvdzogcGFyYW1zLnJvd1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLFxuICAgICAgICB3aWR0aDogNjAsXG4gICAgICAgIGFsaWduOiAnY2VudGVyJ1xuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8luWPtycsXG4gICAgICAgIGtleTogJ2xpc3RDb2RlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiA4MFxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WIl+ihqOWQjeensCcsXG4gICAgICAgIGtleTogJ2xpc3ROYW1lJyxcbiAgICAgICAgYWxpZ246IFwibGVmdFwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5ZSv5LiA5ZCNJyxcbiAgICAgICAga2V5OiAnbGlzdFNpbmdsZU5hbWUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+Wkh+azqCcsXG4gICAgICAgIGtleTogJ2xpc3REZXNjJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfnvJbovpHml7bpl7QnLFxuICAgICAgICBrZXk6ICdsaXN0VXBkYXRlVGltZScsXG4gICAgICAgIHdpZHRoOiAxMDAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVSZW5kZXJlci5Ub0RhdGVZWVlZX01NX0REKGgsIHBhcmFtcy5yb3cubGlzdFVwZGF0ZVRpbWUpO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5pON5L2cJyxcbiAgICAgICAga2V5OiAnbGlzdElkJyxcbiAgICAgICAgd2lkdGg6IDEyMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgIH0sIFtMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLkVkaXRCdXR0b24oaCwgcGFyYW1zLCBfc2VsZi5pZEZpZWxkTmFtZSwgX3NlbGYpLCBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLkRlbGV0ZUJ1dHRvbihoLCBwYXJhbXMsIF9zZWxmLmlkRmllbGROYW1lLCBfc2VsZildKTtcbiAgICAgICAgfVxuICAgICAgfV0sXG4gICAgICB0YWJsZURhdGE6IFtdLFxuICAgICAgdGFibGVEYXRhT3JpZ2luYWw6IFtdLFxuICAgICAgc2VsZWN0aW9uUm93czogbnVsbCxcbiAgICAgIHBhZ2VUb3RhbDogMCxcbiAgICAgIHBhZ2VTaXplOiA1MDAsXG4gICAgICBwYWdlTnVtOiAxLFxuICAgICAgc2VhcmNoVGV4dDogXCJcIlxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgd2luZG93Ll9tb2R1bGVsaXN0d2VibGlzdGNvbXAgPSB0aGlzO1xuICB9LFxuICB3YXRjaDoge1xuICAgIG1vZHVsZURhdGE6IGZ1bmN0aW9uIG1vZHVsZURhdGEobmV3VmFsKSB7XG4gICAgICB0aGlzLnJlbG9hZERhdGEoKTtcbiAgICB9LFxuICAgIGFjdGl2ZVRhYk5hbWU6IGZ1bmN0aW9uIGFjdGl2ZVRhYk5hbWUobmV3VmFsKSB7XG4gICAgICB0aGlzLnJlbG9hZERhdGEoKTtcbiAgICB9LFxuICAgIHNlYXJjaFRleHQ6IGZ1bmN0aW9uIHNlYXJjaFRleHQobmV3VmFsKSB7XG4gICAgICBpZiAobmV3VmFsKSB7XG4gICAgICAgIHZhciBmaWx0ZXJUYWJsZURhdGEgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIHJvdyA9IHRoaXMudGFibGVEYXRhW2ldO1xuXG4gICAgICAgICAgaWYgKHJvdy5mb3JtQ29kZS5pbmRleE9mKG5ld1ZhbCkgPj0gMCkge1xuICAgICAgICAgICAgZmlsdGVyVGFibGVEYXRhLnB1c2gocm93KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHJvdy5mb3JtTmFtZS5pbmRleE9mKG5ld1ZhbCkgPj0gMCkge1xuICAgICAgICAgICAgZmlsdGVyVGFibGVEYXRhLnB1c2gocm93KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IGZpbHRlclRhYmxlRGF0YTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudGFibGVEYXRhID0gdGhpcy50YWJsZURhdGFPcmlnaW5hbDtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBnZXRNb2R1bGVOYW1lOiBmdW5jdGlvbiBnZXRNb2R1bGVOYW1lKCkge1xuICAgICAgcmV0dXJuIHRoaXMubW9kdWxlRGF0YSA9PSBudWxsID8gXCLor7fpgInkuK3mqKHlnZdcIiA6IHRoaXMubW9kdWxlRGF0YS5tb2R1bGVUZXh0O1xuICAgIH0sXG4gICAgc2VsZWN0aW9uQ2hhbmdlOiBmdW5jdGlvbiBzZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7XG4gICAgICB0aGlzLnNlbGVjdGlvblJvd3MgPSBzZWxlY3Rpb247XG4gICAgfSxcbiAgICByZWxvYWREYXRhOiBmdW5jdGlvbiByZWxvYWREYXRhKCkge1xuICAgICAgaWYgKHRoaXMubW9kdWxlRGF0YSAhPSBudWxsICYmIHRoaXMuYWN0aXZlVGFiTmFtZSA9PSBcImxpc3Qtd2VibGlzdFwiKSB7XG4gICAgICAgIHRoaXMuc2VhcmNoQ29uZGl0aW9uLmxpc3RNb2R1bGVJZC52YWx1ZSA9IHRoaXMubW9kdWxlRGF0YS5tb2R1bGVJZDtcbiAgICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVCaW5kRGF0YUJ5U2VhcmNoKHtcbiAgICAgICAgICB1cmw6IHRoaXMuYWNJbnRlcmZhY2UucmVsb2FkRGF0YSxcbiAgICAgICAgICBwYWdlTnVtOiB0aGlzLnBhZ2VOdW0sXG4gICAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUsXG4gICAgICAgICAgc2VhcmNoQ29uZGl0aW9uOiB0aGlzLnNlYXJjaENvbmRpdGlvbixcbiAgICAgICAgICBwYWdlQXBwT2JqOiB0aGlzLFxuICAgICAgICAgIHRhYmxlTGlzdDogdGhpcyxcbiAgICAgICAgICBpZEZpZWxkOiB0aGlzLmlkRmllbGROYW1lLFxuICAgICAgICAgIGF1dG9TZWxlY3RlZE9sZFJvd3M6IHRydWUsXG4gICAgICAgICAgc3VjY2Vzc0Z1bmM6IGZ1bmN0aW9uIHN1Y2Nlc3NGdW5jKHJlc3VsdCwgcGFnZUFwcE9iaikge1xuICAgICAgICAgICAgcGFnZUFwcE9iai50YWJsZURhdGFPcmlnaW5hbCA9IHJlc3VsdC5kYXRhLmxpc3Q7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsb2FkRGljdDogZmFsc2UsXG4gICAgICAgICAgY3VzdFBhcmFzOiB7fSxcbiAgICAgICAgICBfZXhwYW5kZWRBTEw6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCkge1xuICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgICBcIm9wXCI6IFwiYWRkXCIsXG4gICAgICAgICAgXCJtb2R1bGVJZFwiOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWRcbiAgICAgICAgfSk7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1RhYldpbmRvdyh1cmwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6K+36YCJ5oup5qih5Z2XIVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGVkaXQ6IGZ1bmN0aW9uIGVkaXQocmVjb3JkSWQpIHtcbiAgICAgIHZhciB1cmwgPSBCYXNlVXRpbGl0eS5CdWlsZFZpZXcodGhpcy5hY0ludGVyZmFjZS5lZGl0Vmlldywge1xuICAgICAgICBcIm9wXCI6IFwidXBkYXRlXCIsXG4gICAgICAgIFwicmVjb3JkSWRcIjogcmVjb3JkSWRcbiAgICAgIH0pO1xuICAgICAgRGlhbG9nVXRpbGl0eS5PcGVuTmV3VGFiV2luZG93KHVybCk7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChyZWNvcmRJZCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVEZWxldGVSb3codGhpcy5hY0ludGVyZmFjZVtcImRlbGV0ZVwiXSwgcmVjb3JkSWQsIHRoaXMpO1xuICAgIH0sXG4gICAgc3RhdHVzRW5hYmxlOiBmdW5jdGlvbiBzdGF0dXNFbmFibGUoc3RhdHVzTmFtZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSh0aGlzLmFjSW50ZXJmYWNlLnN0YXR1c0NoYW5nZSwgdGhpcy5zZWxlY3Rpb25Sb3dzLCBhcHBMaXN0LmlkRmllbGROYW1lLCBzdGF0dXNOYW1lLCBhcHBMaXN0KTtcbiAgICB9LFxuICAgIG1vdmU6IGZ1bmN0aW9uIG1vdmUodHlwZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3TW92ZUZhY2UodGhpcy5hY0ludGVyZmFjZS5tb3ZlLCB0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMuaWRGaWVsZE5hbWUsIHR5cGUsIHRoaXMpO1xuICAgIH0sXG4gICAgY29weTogZnVuY3Rpb24gY29weSgpIHtcbiAgICAgIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlTWFyZVN1cmVTZWxlY3RlZE9uZSh0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMpLnRoZW4oZnVuY3Rpb24gKHNlbGVjdGlvblJvd3MpIHtcbiAgICAgICAgdmFyIHJlY29yZElkID0gc2VsZWN0aW9uUm93c1swXVt0aGlzLmlkRmllbGROYW1lXTtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmNvcHlMaXN0LCB7XG4gICAgICAgICAgbGlzdElkOiByZWNvcmRJZFxuICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJtb2R1bGUtbGlzdC13cmFwXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cImxpc3QtYnV0dG9uLXdyYXBcIiBjbGFzcz1cImxpc3QtYnV0dG9uLW91dGVyLXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZHVsZS1saXN0LW5hbWVcIj48SWNvbiB0eXBlPVwiaW9zLWFycm93LWRyb3ByaWdodC1jaXJjbGVcIiAvPiZuYnNwO+aooeWdl+OAkHt7Z2V0TW9kdWxlTmFtZSgpfX3jgJE8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpc3QtYnV0dG9uLWlubmVyLXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cD5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gIHR5cGU9XCJzdWNjZXNzXCIgQGNsaWNrPVwiYWRkKClcIiBpY29uPVwibWQtYWRkXCI+5paw5aKePC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cInByaW1hcnlcIiBAY2xpY2s9XCJjb3B5KClcIiBpY29uPVwibWQtYWxidW1zXCI+5aSN5Yi2PC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cImVycm9yXCIgaWNvbj1cIm1kLXByaWNldGFnXCI+6aKE6KeIPC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cImVycm9yXCIgaWNvbj1cIm1kLWJvb2ttYXJrc1wiPuWOhuWPsueJiOacrDwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJlcnJvclwiIGljb249XCJtZC1icnVzaFwiPuWkjeWItklEPC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cInByaW1hcnlcIiBAY2xpY2s9XCJtb3ZlKFxcJ3VwXFwnKVwiIGljb249XCJtZC1hcnJvdy11cFwiPuS4iuenuzwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgQGNsaWNrPVwibW92ZShcXCdkb3duXFwnKVwiIGljb249XCJtZC1hcnJvdy1kb3duXCI+5LiL56e7PC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZsb2F0OiByaWdodDt3aWR0aDogMjAwcHg7bWFyZ2luLXJpZ2h0OiAxMHB4O1wiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVwiaW5wdXRfYm9yZGVyX2JvdHRvbVwiIHYtbW9kZWw9XCJzZWFyY2hUZXh0XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiY2xlYXI6IGJvdGhcIj48L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSA6aGVpZ2h0PVwibGlzdEhlaWdodFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XCJjb2x1bW5zQ29uZmlnXCIgOmRhdGE9XCJ0YWJsZURhdGFcIlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaXYtbGlzdC10YWJsZVwiIDpoaWdobGlnaHQtcm93PVwidHJ1ZVwiXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG9uLXNlbGVjdGlvbi1jaGFuZ2U9XCJzZWxlY3Rpb25DaGFuZ2VcIj48L2ktdGFibGU+XFxcbiAgICAgICAgICAgICAgICA8L2Rpdj4nXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcIm1vZHVsZS1saXN0LXdvcmtmbG93LWNvbXBcIiwge1xuICBwcm9wczogWydsaXN0SGVpZ2h0JywgJ21vZHVsZURhdGEnLCAnYWN0aXZlVGFiTmFtZSddLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZWRpdFZpZXc6IFwiL0hUTUwvV29ya0Zsb3cvTW9kZWxlci9Nb2RlbGVyRGVzaWduLmh0bWxcIixcbiAgICAgICAgcmVsb2FkRGF0YTogXCIvUmVzdC9Xb3JrZmxvdy9GbG93TW9kZWxJbnRlZ3JhdGVkL0dldE1vZHVsZUZsb3dMaXN0RGF0YVwiLFxuICAgICAgICBcImRlbGV0ZVwiOiBcIi9SZXN0L1dvcmtmbG93L0Zsb3dNb2RlbEludGVncmF0ZWQvRGVsZXRlXCIsXG4gICAgICAgIG1vdmU6IFwiL1Jlc3QvQnVpbGRlci9GbG93SW50ZWdyYXRlZC9Nb3ZlXCJcbiAgICAgIH0sXG4gICAgICBpZEZpZWxkTmFtZTogXCJtb2RlbElkXCIsXG4gICAgICBzZWFyY2hDb25kaXRpb246IHtcbiAgICAgICAgbW9kZWxNb2R1bGVJZDoge1xuICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgIHR5cGU6IFNlYXJjaFV0aWxpdHkuU2VhcmNoRmllbGRUeXBlLlN0cmluZ1R5cGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLFxuICAgICAgICB3aWR0aDogNjAsXG4gICAgICAgIGFsaWduOiAnY2VudGVyJ1xuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8luWPtycsXG4gICAgICAgIGtleTogJ21vZGVsQ29kZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICB3aWR0aDogODBcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmqKHlnovlkI3np7AnLFxuICAgICAgICBrZXk6ICdtb2RlbE5hbWUnLFxuICAgICAgICBhbGlnbjogXCJsZWZ0XCIsXG4gICAgICAgIHdpZHRoOiAyODBcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflpIfms6gnLFxuICAgICAgICBrZXk6ICdtb2RlbERlc2MnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8lui+keaXtumXtCcsXG4gICAgICAgIGtleTogJ21vZGVsQ3JlYXRlVGltZScsXG4gICAgICAgIHdpZHRoOiAxMDAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVSZW5kZXJlci5Ub0RhdGVZWVlZX01NX0REKGgsIHBhcmFtcy5yb3cubW9kZWxDcmVhdGVUaW1lKTtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgIGtleTogJ2ludGVncmF0ZWRJZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKSwgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5EZWxldGVCdXR0b24oaCwgcGFyYW1zLCBfc2VsZi5pZEZpZWxkTmFtZSwgX3NlbGYpXSk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIHRhYmxlRGF0YU9yaWdpbmFsOiBbXSxcbiAgICAgIHNlbGVjdGlvblJvd3M6IG51bGwsXG4gICAgICBwYWdlVG90YWw6IDAsXG4gICAgICBwYWdlU2l6ZTogNTAwLFxuICAgICAgcGFnZU51bTogMSxcbiAgICAgIHNlYXJjaFRleHQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHdpbmRvdy5fbW9kdWxlbGlzdHdvcmtmbG93bGlzdGNvbXAgPSB0aGlzO1xuXG4gICAgaWYgKFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZVdpZHRoKCkgPiAxMjAwKSB7XG4gICAgICBBcnJheVV0aWxpdHkuSW5zZXJ0KHRoaXMuY29sdW1uc0NvbmZpZywgMywge1xuICAgICAgICB0aXRsZTogJ+WQr+WKqEtleScsXG4gICAgICAgIGtleTogJ21vZGVsUmVLZXknLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgd2lkdGg6IDE4MFxuICAgICAgfSk7XG4gICAgICBBcnJheVV0aWxpdHkuSW5zZXJ0KHRoaXMuY29sdW1uc0NvbmZpZywgNSwge1xuICAgICAgICB0aXRsZTogJ+e8lui+keS6uicsXG4gICAgICAgIGtleTogJ21vZGVsQ3JlYXRvcicsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICB3aWR0aDogMTAwXG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgbW9kdWxlRGF0YTogZnVuY3Rpb24gbW9kdWxlRGF0YShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgYWN0aXZlVGFiTmFtZTogZnVuY3Rpb24gYWN0aXZlVGFiTmFtZShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgc2VhcmNoVGV4dDogZnVuY3Rpb24gc2VhcmNoVGV4dChuZXdWYWwpIHtcbiAgICAgIGlmIChuZXdWYWwpIHtcbiAgICAgICAgdmFyIGZpbHRlclRhYmxlRGF0YSA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgcm93ID0gdGhpcy50YWJsZURhdGFbaV07XG5cbiAgICAgICAgICBpZiAocm93LmZvcm1Db2RlLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocm93LmZvcm1OYW1lLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVEYXRhID0gZmlsdGVyVGFibGVEYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSB0aGlzLnRhYmxlRGF0YU9yaWdpbmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldE1vZHVsZU5hbWU6IGZ1bmN0aW9uIGdldE1vZHVsZU5hbWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tb2R1bGVEYXRhID09IG51bGwgPyBcIuivt+mAieS4reaooeWdl1wiIDogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZVRleHQ7XG4gICAgfSxcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb24pIHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uUm93cyA9IHNlbGVjdGlvbjtcbiAgICB9LFxuICAgIHJlbG9hZERhdGE6IGZ1bmN0aW9uIHJlbG9hZERhdGEoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwgJiYgdGhpcy5hY3RpdmVUYWJOYW1lID09IFwibGlzdC1mbG93XCIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb24ubW9kZWxNb2R1bGVJZC52YWx1ZSA9IHRoaXMubW9kdWxlRGF0YS5tb2R1bGVJZDtcbiAgICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVCaW5kRGF0YUJ5U2VhcmNoKHtcbiAgICAgICAgICB1cmw6IHRoaXMuYWNJbnRlcmZhY2UucmVsb2FkRGF0YSxcbiAgICAgICAgICBwYWdlTnVtOiB0aGlzLnBhZ2VOdW0sXG4gICAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUsXG4gICAgICAgICAgc2VhcmNoQ29uZGl0aW9uOiB0aGlzLnNlYXJjaENvbmRpdGlvbixcbiAgICAgICAgICBwYWdlQXBwT2JqOiB0aGlzLFxuICAgICAgICAgIHRhYmxlTGlzdDogdGhpcyxcbiAgICAgICAgICBpZEZpZWxkOiB0aGlzLmlkRmllbGROYW1lLFxuICAgICAgICAgIGF1dG9TZWxlY3RlZE9sZFJvd3M6IHRydWUsXG4gICAgICAgICAgc3VjY2Vzc0Z1bmM6IGZ1bmN0aW9uIHN1Y2Nlc3NGdW5jKHJlc3VsdCwgcGFnZUFwcE9iaikge1xuICAgICAgICAgICAgcGFnZUFwcE9iai50YWJsZURhdGFPcmlnaW5hbCA9IHJlc3VsdC5kYXRhLmxpc3Q7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsb2FkRGljdDogZmFsc2UsXG4gICAgICAgICAgY3VzdFBhcmFzOiB7fVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZDogZnVuY3Rpb24gYWRkKCkge1xuICAgICAgdGhpcy5hZGROZXdGcm9tVGVtcGxhdGUoXCJhZGROZXdGcm9tRW1wdHlUZW1wbGF0ZVwiKTtcbiAgICB9LFxuICAgIGFkZE5ld0Zyb21UZW1wbGF0ZTogZnVuY3Rpb24gYWRkTmV3RnJvbVRlbXBsYXRlKG5hbWUpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCkge1xuICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgICBcIm9wXCI6IFwiYWRkXCIsXG4gICAgICAgICAgXCJtb2R1bGVJZFwiOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWQsXG4gICAgICAgICAgXCJ0ZW1wbGF0ZU5hbWVcIjogbmFtZVxuICAgICAgICB9KTtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5PcGVuTmV3VGFiV2luZG93KHVybCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLor7fpgInmi6nmqKHlnZchXCIsIG51bGwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChyZWNvcmRJZCwgcGFyYW1zKSB7XG4gICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgXCJvcFwiOiBcInVwZGF0ZVwiLFxuICAgICAgICBcIm1vZGVsUmVLZXlcIjogcGFyYW1zLnJvdy5tb2RlbFJlS2V5LFxuICAgICAgICBcIm1vZHVsZUlkXCI6IHRoaXMubW9kdWxlRGF0YS5tb2R1bGVJZFxuICAgICAgfSk7XG4gICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdUYWJXaW5kb3codXJsKTtcbiAgICB9LFxuICAgIGRlbDogZnVuY3Rpb24gZGVsKHJlY29yZElkKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZURlbGV0ZVJvdyh0aGlzLmFjSW50ZXJmYWNlW1wiZGVsZXRlXCJdLCByZWNvcmRJZCwgdGhpcyk7XG4gICAgfSxcbiAgICBzdGF0dXNFbmFibGU6IGZ1bmN0aW9uIHN0YXR1c0VuYWJsZShzdGF0dXNOYW1lKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdDaGFuZ2VTZXJ2ZXJTdGF0dXNGYWNlKHRoaXMuYWNJbnRlcmZhY2Uuc3RhdHVzQ2hhbmdlLCB0aGlzLnNlbGVjdGlvblJvd3MsIGFwcExpc3QuaWRGaWVsZE5hbWUsIHN0YXR1c05hbWUsIGFwcExpc3QpO1xuICAgIH0sXG4gICAgbW92ZTogZnVuY3Rpb24gbW92ZSh0eXBlKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdNb3ZlRmFjZSh0aGlzLmFjSW50ZXJmYWNlLm1vdmUsIHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcy5pZEZpZWxkTmFtZSwgdHlwZSwgdGhpcyk7XG4gICAgfSxcbiAgICBjb3B5VGV4dDogZnVuY3Rpb24gY29weVRleHQobmFtZSkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5Ub2FzdEluZm9NZXNzYWdlKHRoaXMsIFwi5pyq5a6e546wXCIpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwibW9kdWxlLWxpc3Qtd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJsaXN0LWJ1dHRvbi13cmFwXFxcIiBjbGFzcz1cXFwibGlzdC1idXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibW9kdWxlLWxpc3QtbmFtZVxcXCI+PEljb24gdHlwZT1cXFwiaW9zLWFycm93LWRyb3ByaWdodC1jaXJjbGVcXFwiIC8+Jm5ic3A7XFx1NkEyMVxcdTU3NTdcXHUzMDEwe3tnZXRNb2R1bGVOYW1lKCl9fVxcdTMwMTE8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsaXN0LWJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uICB0eXBlPVxcXCJzdWNjZXNzXFxcIiBAY2xpY2s9XFxcImFkZCgpXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTY1QjBcXHU1ODlFXFx1N0E3QVxcdTc2N0RcXHU2RDQxXFx1N0EwQjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwiZXJyb3JcXFwiIGljb249XFxcIm1kLWFsYnVtc1xcXCIgZGlzYWJsZWQ+XFx1NTkwRFxcdTUyMzY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcImVycm9yXFxcIiBpY29uPVxcXCJtZC1ib29rbWFya3NcXFwiIGRpc2FibGVkPlxcdTUzODZcXHU1M0YyXFx1NzI0OFxcdTY3MkM8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcImVycm9yXFxcIiBpY29uPVxcXCJtZC1hcnJvdy11cFxcXCIgZGlzYWJsZWQ+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJlcnJvclxcXCIgaWNvbj1cXFwibWQtYXJyb3ctZG93blxcXCIgZGlzYWJsZWQ+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b25Hcm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsaXN0LWJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktbWVudSBtb2RlPVxcXCJob3Jpem9udGFsXFxcIiBhY3RpdmUtbmFtZT1cXFwiMS0xXFxcIiBjbGFzcz1cXFwibGlzdC1idXR0b24taW5uZXItbWVudVxcXCIgQG9uLXNlbGVjdD1cXFwiYWRkTmV3RnJvbVRlbXBsYXRlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdWJtZW51IG5hbWU9XFxcIjEtMVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9XFxcInRpdGxlXFxcIj5cXHU0RUNFXFx1NkEyMVxcdTY3N0ZcXHU2NUIwXFx1NUVGQTwvdGVtcGxhdGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1lbnUtZ3JvdXAgdGl0bGU9XFxcIlxcdTU3RkFcXHU0RThFXFx1NkEyMVxcdTY3N0ZcXHU2NUIwXFx1NUVGQVxcdTZENDFcXHU3QTBCXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1lbnUtaXRlbSBuYW1lPVxcXCJhZGROZXdGcm9tRW1wdHlUZW1wbGF0ZVxcXCI+XFx1N0E3QVxcdTc2N0RcXHU2QTIxXFx1Njc3RjwvbWVudS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWVudS1pdGVtIG5hbWU9XFxcImFkZE5ld0Zyb21BZ2VudFVzZXJUZW1wbGF0ZVxcXCI+XFx1N0VDRlxcdTUyOUVcXHU0RUJBXFx1NkEyMVxcdTVGMEZcXHU2QTIxXFx1Njc3RjwvbWVudS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWVudS1pdGVtIG5hbWU9XFxcImFkZE5ld0Zyb21TZXF1ZW5jZVRlbXBsYXRlXFxcIj5cXHU5ODdBXFx1NUU4RlxcdTZENDFcXHU4RjZDXFx1NkEyMVxcdTY3N0Y8L21lbnUtaXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1lbnUtaXRlbSBuYW1lPVxcXCJhZGROZXdGcm9tVGVzdFYxVGVtcGxhdGVcXFwiPlxcdTZENEJcXHU4QkQ1XFx1NkQ0MVxcdTdBMEJcXHU2QTIxXFx1Njc3RlYxPC9tZW51LWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9tZW51LWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdWJtZW51PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktbWVudT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsaXN0LWJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktbWVudSBtb2RlPVxcXCJob3Jpem9udGFsXFxcIiBhY3RpdmUtbmFtZT1cXFwiMS0xXFxcIiBjbGFzcz1cXFwibGlzdC1idXR0b24taW5uZXItbWVudVxcXCIgQG9uLXNlbGVjdD1cXFwiY29weVRleHRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN1Ym1lbnUgbmFtZT1cXFwiMS0xXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD1cXFwidGl0bGVcXFwiPlxcdTU5MERcXHU1MjM2XFx1NTE4NVxcdTVCQjk8L3RlbXBsYXRlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZW51LWdyb3VwIHRpdGxlPVxcXCJcXHU1OTBEXFx1NTIzNlxcdTUyMzBcXHU5RUNGXFx1OEQzNFxcdTcyNDhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWVudS1pdGVtIG5hbWU9XFxcImNvcHlJZFxcXCI+XFx1NTkwRFxcdTUyMzZJRDwvbWVudS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWVudS1pdGVtIG5hbWU9XFxcImNvcHlQYXRoXFxcIj5cXHU1OTBEXFx1NTIzNlxcdThERUZcXHU1Rjg0PC9tZW51LWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZW51LWl0ZW0gbmFtZT1cXFwiY29weUluZm9cXFwiPlxcdTU5MERcXHU1MjM2XFx1NEZFMVxcdTYwNkY8L21lbnUtaXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L21lbnUtZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N1Ym1lbnU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1tZW51PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImNsZWFyOiBib3RoXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgOmhlaWdodD1cXFwibGlzdEhlaWdodFxcXCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cXFwiY29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcInRhYmxlRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiA6aGlnaGxpZ2h0LXJvdz1cXFwidHJ1ZVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBvbi1zZWxlY3Rpb24tY2hhbmdlPVxcXCJzZWxlY3Rpb25DaGFuZ2VcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LWRibGluay1zaW5nbGUtY29tcFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldERCTGlua0RhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EQkxpbmsvR2V0RnVsbERCTGlua1wiLFxuICAgICAgICBnZXRTaW5nbGVEQkxpbmtEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvREJMaW5rL0dldERldGFpbERhdGFcIlxuICAgICAgfSxcbiAgICAgIGpzRWRpdG9ySW5zdGFuY2U6IG51bGwsXG4gICAgICBkYkxpbmtUcmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcImRiTGlua05hbWVcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJkYklkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJkYk9yZGVyTnVtXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkREJMaW5rKHRyZWVOb2RlKTtcblxuICAgICAgICAgICAgICBfc2VsZi5oYW5kbGVDbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGwsXG4gICAgICAgIGNsaWNrTm9kZTogbnVsbFxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkREJMaW5rRGF0YTogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0REJMaW5rTW9kZWxEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGJlZ2luU2VsZWN0REJMaW5rOiBmdW5jdGlvbiBiZWdpblNlbGVjdERCTGluaygpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3REQkxpbmtNb2RlbERpYWxvZ1dyYXA7XG4gICAgICB0aGlzLmdldERCTGlua0RhdGFJbml0VHJlZSgpO1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIHdpZHRoOiA0NzAsXG4gICAgICAgIGhlaWdodDogNTAwLFxuICAgICAgICB0aXRsZTogXCLpgInmi6nmlbDmja7lupPov57mjqVcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXREQkxpbmtEYXRhSW5pdFRyZWU6IGZ1bmN0aW9uIGdldERCTGlua0RhdGFJbml0VHJlZSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXREQkxpbmtEYXRhVXJsLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi5kYkxpbmtUcmVlLnRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGFbaV0uaWNvbiA9IFwiL1RoZW1lcy9QbmcxNlgxNi9kYXRhYmFzZV9jb25uZWN0LnBuZ1wiO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9zZWxmLiRyZWZzLmRiTGlua1pUcmVlVUwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWxlY3QtZGJMaW5rLXNpbmdsZS1jb21wLVwiICsgU3RyaW5nVXRpbGl0eS5HdWlkKCkpO1xuXG4gICAgICAgICAgX3NlbGYuZGJMaW5rVHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoX3NlbGYuJHJlZnMuZGJMaW5rWlRyZWVVTCksIF9zZWxmLmRiTGlua1RyZWUudHJlZVNldHRpbmcsIF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGEpO1xuXG4gICAgICAgICAgX3NlbGYuZGJMaW5rVHJlZS50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcblxuICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZU9iai5faG9zdCA9IF9zZWxmO1xuICAgICAgICAgIGZ1enp5U2VhcmNoVHJlZU9iaihfc2VsZi5kYkxpbmtUcmVlLnRyZWVPYmosIF9zZWxmLiRyZWZzLnR4dF9kYkxpbmtfc2VhcmNoX3RleHQuJHJlZnMuaW5wdXQsIG51bGwsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgc2VsZWN0ZWREQkxpbms6IGZ1bmN0aW9uIHNlbGVjdGVkREJMaW5rKGRiTGlua0RhdGEpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREQkxpbmtEYXRhID0gZGJMaW5rRGF0YTtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWRibGluaycsIGRiTGlua0RhdGEpO1xuICAgIH0sXG4gICAgZ2V0U2VsZWN0ZWREQkxpbmtOYW1lOiBmdW5jdGlvbiBnZXRTZWxlY3RlZERCTGlua05hbWUoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZERCTGlua0RhdGEgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gXCLor7fpgInmi6nmlbDmja7lupPov57mjqVcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkREJMaW5rRGF0YS5kYkxpbmtOYW1lO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0T2xkU2VsZWN0ZWREQkxpbms6IGZ1bmN0aW9uIHNldE9sZFNlbGVjdGVkREJMaW5rKGRiTGlua0lkKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0U2luZ2xlREJMaW5rRGF0YVVybCwge1xuICAgICAgICBcInJlY29yZElkXCI6IGRiTGlua0lkXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLnNlbGVjdGVkREJMaW5rRGF0YSA9IHJlc3VsdC5kYXRhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNlbGVjdC12aWV3LWRibGluay13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0ZXh0XFxcIj57e2dldFNlbGVjdGVkREJMaW5rTmFtZSgpfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaWRcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvblxcXCIgQGNsaWNrPVxcXCJiZWdpblNlbGVjdERCTGluaygpXFxcIj48SWNvbiB0eXBlPVxcXCJpb3MtZnVubmVsXFxcIiAvPiZuYnNwO1xcdTkwMDlcXHU2MkU5PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgcmVmPVxcXCJzZWxlY3REQkxpbmtNb2RlbERpYWxvZ1dyYXBcXFwiIGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtd3JhcCBnZW5lcmFsLWVkaXQtcGFnZS13cmFwXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF9kYkxpbmtfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU2NTcwXFx1NjM2RVxcdTVFOTNcXHU4RkRFXFx1NjNBNVxcdTU0MERcXHU3OUYwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwIGRpdi1jdXN0b20tc2Nyb2xsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcImRiTGlua1pUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LXNpdGUtc2luZ2xlLWNvbXBcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXREQkxpbmtEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvU2l0ZUluZm8vR2V0RnVsbFNpdGVcIixcbiAgICAgICAgZ2V0U2luZ2xlREJMaW5rRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RCTGluay9HZXREZXRhaWxEYXRhXCJcbiAgICAgIH0sXG4gICAgICBqc0VkaXRvckluc3RhbmNlOiBudWxsLFxuICAgICAgc2l0ZVRyZWU6IHtcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwic2l0ZU5hbWVcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJzaXRlSWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInNpdGVPcmRlck51bVwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXMuZ2V0WlRyZWVPYmoodHJlZUlkKS5faG9zdDtcblxuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZFNpdGUodHJlZU5vZGUpO1xuXG4gICAgICAgICAgICAgIF9zZWxmLmhhbmRsZUNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0cmVlRGF0YTogbnVsbCxcbiAgICAgICAgY2xpY2tOb2RlOiBudWxsXG4gICAgICB9LFxuICAgICAgc2VsZWN0ZWRTaXRlRGF0YTogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0U2l0ZU1vZGVsRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBiZWdpblNlbGVjdFNpdGU6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0U2l0ZSgpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3RTaXRlTW9kZWxEaWFsb2dXcmFwO1xuICAgICAgdGhpcy5nZXRTaXRlRGF0YUluaXRUcmVlKCk7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgd2lkdGg6IDQ3MCxcbiAgICAgICAgaGVpZ2h0OiA1MDAsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqeermeeCuVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFNpdGVEYXRhSW5pdFRyZWU6IGZ1bmN0aW9uIGdldFNpdGVEYXRhSW5pdFRyZWUoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0REJMaW5rRGF0YVVybCwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgX3NlbGYuc2l0ZVRyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3NlbGYuc2l0ZVRyZWUudHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIF9zZWxmLnNpdGVUcmVlLnRyZWVEYXRhW2ldLmljb24gPSBCYXNlVXRpbGl0eS5HZXRSb290UGF0aCgpICsgXCIvVGhlbWVzL1BuZzE2WDE2L2RhdGFiYXNlX2Nvbm5lY3QucG5nXCI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3NlbGYuJHJlZnMuc2l0ZVpUcmVlVUwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWxlY3QtZGJMaW5rLXNpbmdsZS1jb21wLVwiICsgU3RyaW5nVXRpbGl0eS5HdWlkKCkpO1xuXG4gICAgICAgICAgX3NlbGYuc2l0ZVRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKF9zZWxmLiRyZWZzLnNpdGVaVHJlZVVMKSwgX3NlbGYuc2l0ZVRyZWUudHJlZVNldHRpbmcsIF9zZWxmLnNpdGVUcmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLnNpdGVUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuXG4gICAgICAgICAgX3NlbGYuc2l0ZVRyZWUudHJlZU9iai5faG9zdCA9IF9zZWxmO1xuICAgICAgICAgIGZ1enp5U2VhcmNoVHJlZU9iaihfc2VsZi5zaXRlVHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfc2l0ZV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBzZWxlY3RlZFNpdGU6IGZ1bmN0aW9uIHNlbGVjdGVkU2l0ZShzaXRlRGF0YSkge1xuICAgICAgdGhpcy5zZWxlY3RlZFNpdGVEYXRhID0gc2l0ZURhdGE7XG4gICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1zaXRlJywgc2l0ZURhdGEpO1xuICAgIH0sXG4gICAgZ2V0U2VsZWN0ZWRTaXRlTmFtZTogZnVuY3Rpb24gZ2V0U2VsZWN0ZWRTaXRlTmFtZSgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkU2l0ZURhdGEgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gXCLor7fpgInmi6nnq5nngrlcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkU2l0ZURhdGEuc2l0ZU5hbWU7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZXRPbGRTZWxlY3RlZFNpdGU6IGZ1bmN0aW9uIHNldE9sZFNlbGVjdGVkU2l0ZShkYkxpbmtJZCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFNpbmdsZURCTGlua0RhdGFVcmwsIHtcbiAgICAgICAgXCJyZWNvcmRJZFwiOiBkYkxpbmtJZFxuICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi5zZWxlY3RlZFNpdGVEYXRhID0gcmVzdWx0LmRhdGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2VsZWN0LXZpZXctZGJsaW5rLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRleHRcXFwiPnt7Z2V0U2VsZWN0ZWRTaXRlTmFtZSgpfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaWRcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvblxcXCIgQGNsaWNrPVxcXCJiZWdpblNlbGVjdFNpdGUoKVxcXCI+PEljb24gdHlwZT1cXFwiaW9zLWZ1bm5lbFxcXCIgLz4mbmJzcDtcXHU5MDA5XFx1NjJFOTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHJlZj1cXFwic2VsZWN0U2l0ZU1vZGVsRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC13cmFwIGdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtc291cmNlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X3NpdGVfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU3QUQ5XFx1NzBCOVxcdTU0MERcXHU3OUYwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwIGRpdi1jdXN0b20tc2Nyb2xsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcInNpdGVaVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImRhdGFzZXQtZXhwYW5kLXJvd1wiLCB7XG4gIHByb3BzOiBbJ3JvdyddLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7fSxcbiAgdGVtcGxhdGU6IFwiPGRpdj5cXG4gICAgICAgIDxyb3c+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2PlxcdTVFOTRcXHU3NTI4XFx1NEU4RVxcdUZGMUE8L2Rpdj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgdi1mb3I9XFxcIml0ZW0gaW4gcm93LnVzZXJGb3JEZXNjTGlzdFxcXCIgY2xhc3M9XFxcImZvbnQtY29sb3ItcGV0ZXItcml2ZXItdjA0XFxcIj57eyBpdGVtIH19PC9kaXY+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXY+XFx1NTkwN1xcdTZDRThcXHVGRjFBPC9kaXY+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTFcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2Pnt7IHJvdy5kc0Rlc2MgfX08L2Rpdj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgPC9yb3c+XFxuICAgICAgICA8cm93IHN0eWxlPVxcXCJtYXJnaW4tdG9wOiA4cHhcXFwiPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxXFxcIj5cXG4gICAgICAgICAgICAgICAgIDxzcGFuPnNxbFxcdUZGMUE8L3NwYW4+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMjNcXFwiPlxcbiAgICAgICAgICAgICAgICA8c3Bhbj5cXHUzMDEwe3sgcm93LmRzU3FsU2VsZWN0VGV4dCB9fVxcdTMwMTE8L3NwYW4+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgIDwvcm93PlxcbiAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJpbnN0YW5jZS1tYW5hZ2VyLWV4cGFuZC1yb3dcIiwge1xuICBwcm9wczogWydyb3cnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge307XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge30sXG4gIHRlbXBsYXRlOiBcIjxkaXY+XFxuICAgICAgICA8cm93PlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdj5cXHU2QTIxXFx1NTc4QlxcdTU0MERcXHU3OUYwXFx1RkYxQTwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjExXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdj57eyByb3cubW9kZWxJbnRlZ3JhdGVkRW50aXR5Lm1vZGVsTmFtZSB9fTwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2PlxcdTZBMjFcXHU1NzhCSURcXHVGRjFBPC9kaXY+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTFcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2Pnt7IHJvdy5tb2RlbEludGVncmF0ZWRFbnRpdHkubW9kZWxJZCB9fTwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICA8L3Jvdz5cXG4gICAgICAgIDxyb3cgc3R5bGU9XFxcIm1hcmdpbi10b3A6IDhweFxcXCI+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2PlxcdTkwRThcXHU3RjcyXFx1NEVCQVxcdUZGMUE8L2Rpdj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXY+e3sgcm93Lm1vZGVsSW50ZWdyYXRlZEVudGl0eS5tb2RlbENyZWF0b3IgfX08L2Rpdj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdj5cXHU5MEU4XFx1N0Y3MlxcdTY1RjZcXHU5NUY0XFx1RkYxQTwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjExXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdj57eyByb3cubW9kZWxJbnRlZ3JhdGVkRW50aXR5Lm1vZGVsQ3JlYXRlVGltZSB9fTwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICA8L3Jvdz5cXG4gICAgICAgIDxyb3cgc3R5bGU9XFxcIm1hcmdpbi10b3A6IDhweFxcXCI+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICAgPHNwYW4+XFx1OTBFOFxcdTdGNzJcXHU2QTIxXFx1NTc4QklEXFx1RkYxQTwvc3Bhbj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXY+e3sgcm93Lm1vZGVsSW50ZWdyYXRlZEVudGl0eS5tb2RlbFJlSWQgfX08L2Rpdj5cXG4gICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxXFxcIj5cXG4gICAgICAgICAgICAgICAgIDxzcGFuPlxcdTVCOUVcXHU0RjhCSURcXHVGRjFBPC9zcGFuPlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjExXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdj57eyByb3cuaW5zdElkIH19PC9kaXY+XFxuICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgIDwvcm93PlxcbiAgICAgICAgPHJvdyBzdHlsZT1cXFwibWFyZ2luLXRvcDogOHB4XFxcIj5cXG4gICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMVxcXCI+XFxuICAgICAgICAgICAgICAgICA8c3Bhbj5cXHU1RjUzXFx1NTI0RFxcdTZEM0JcXHU1MkE4XFx1NEVGQlxcdTUyQTFcXHVGRjFBPC9zcGFuPlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjIzXFxcIj5cXG4gICAgICAgICAgICAgICAgIDxkaXYgdi1pZj1cXFwicm93LmFjdGl2ZUV4ZWN1dGlvblRhc2tFbnRpdHlMaXN0Lmxlbmd0aD09MFxcXCI+XFx1NjVFMDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgPGRpdiB2LWZvcj1cXFwiYWN0aXZlRXhlY3V0aW9uVGFzayBpbiByb3cuYWN0aXZlRXhlY3V0aW9uVGFza0VudGl0eUxpc3RcXFwiIHN0eWxlPVxcXCJib3JkZXI6IHNvbGlkIDFweCAjODVDMUU5O3BhZGRpbmc6IDRweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJ3aWR0aDogMTIwcHg7ZGlzcGxheTogaW5saW5lLWJsb2NrXFxcIj5cXHU2M0E1XFx1NjUzNlxcdTRFQkFcXHVGRjFBe3sgYWN0aXZlRXhlY3V0aW9uVGFzay5leHRhc2tSZWNlaXZlck5hbWUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcIndpZHRoOiAyMDBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2tcXFwiPlxcdTczQUZcXHU4MjgyXFx1NTQwRFxcdTc5RjBcXHVGRjFBe3sgYWN0aXZlRXhlY3V0aW9uVGFzay5leHRhc2tDdXJOb2RlTmFtZSB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwid2lkdGg6IDEyMHB4O2Rpc3BsYXk6IGlubGluZS1ibG9ja1xcXCI+XFx1NTNEMVxcdTkwMDFcXHU0RUJBXFx1RkYxQXt7IGFjdGl2ZUV4ZWN1dGlvblRhc2suZXh0YXNrU2VuZGVyTmFtZSB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwid2lkdGg6IDIwMHB4O2Rpc3BsYXk6IGlubGluZS1ibG9ja1xcXCI+XFx1NTNEMVxcdTkwMDFcXHU2NUY2XFx1OTVGNFxcdUZGMUF7eyBhY3RpdmVFeGVjdXRpb25UYXNrLmV4dGFza1NlbmRUaW1lIH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJ3aWR0aDogMjAwcHg7ZGlzcGxheTogaW5saW5lLWJsb2NrXFxcIj5cXHU1M0QxXFx1OTAwMVxcdTczQUZcXHU4MjgyXFx1RkYxQXt7IGFjdGl2ZUV4ZWN1dGlvblRhc2suZXh0YXNrUHJlTm9kZU5hbWUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICA8L3Jvdz5cXG4gICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwid2VibGlzdC1leHBhbmQtcm93XCIsIHtcbiAgcHJvcHM6IFsncm93J10sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBlZGl0RGF0YVNldDogZnVuY3Rpb24gZWRpdERhdGFTZXQoZGF0YVNldCkge1xuICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyhcIi9IVE1ML0J1aWxkZXIvRGF0YVNldC9EYXRhU2V0RWRpdC5odG1sXCIsIHtcbiAgICAgICAgXCJvcFwiOiBcInVwZGF0ZVwiLFxuICAgICAgICBcImdyb3VwSWRcIjogZGF0YVNldC5kc0dyb3VwSWQsXG4gICAgICAgIFwicmVjb3JkSWRcIjogZGF0YVNldC5kc0lkXG4gICAgICB9KTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRnJhbWVfT3BlbklmcmFtZVdpbmRvdyh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nSWQsIHVybCwge1xuICAgICAgICB0aXRsZTogXCLmlbDmja7pm4borr7orqFcIlxuICAgICAgfSwgMCk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2PlxcbiAgICAgICAgPGRpdiB2LWZvcj1cXFwiZGF0YVNldCBpbiByb3cuZGF0YVNldFBPTGlzdFxcXCI+XFxuICAgICAgICAgICAgPHJvdz5cXG4gICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cXHU2NTcwXFx1NjM2RVxcdTk2QzZcXHVGRjFBPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIyM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb250LWNvbG9yLWNvbmNyZXRlLXYxMFxcXCI+e3sgZGF0YVNldC5kc0NvZGUgfX1cXHUzMDEwe3sgZGF0YVNldC5kc0NhcHRpb24gfX1cXHUzMDExe3sgZGF0YVNldC5kc0Rlc2MgfX0gPGEgQGNsaWNrPVxcXCJlZGl0RGF0YVNldChkYXRhU2V0KVxcXCI+XFx1N0YxNlxcdThGOTE8L2E+PC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgPC9yb3c+XFxuICAgICAgICAgICAgPHJvdyBzdHlsZT1cXFwibWFyZ2luLXRvcDogOHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxcdTY1NzBcXHU2MzZFXFx1OTZDNnNxbFxcdUZGMUE8L3NwYW4+XFxuICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIyM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb250LWNvbG9yLWNvbmNyZXRlLXYxMFxcXCI+e3sgZGF0YVNldC5kc1NxbFNlbGVjdFRleHQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICA8L3Jvdz5cXG4gICAgICAgICAgICA8cm93IHN0eWxlPVxcXCJtYXJnaW4tdG9wOiA4cHhcXFwiPlxcbiAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XFx1NjU3MFxcdTYzNkVcXHU5NkM2XFx1NzUyOFxcdTRFOEVcXHVGRjFBPC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiAgdi1mb3I9XFxcInVzZXJGb3JEZXNjIGluIGRhdGFTZXQudXNlckZvckRlc2NMaXN0XFxcIiBjbGFzcz1cXFwiZm9udC1jb2xvci1jb25jcmV0ZS12MTBcXFwiPnt7dXNlckZvckRlc2N9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgIDwvcm93PlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlwiXG59KTsiXX0=
