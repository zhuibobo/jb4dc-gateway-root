"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var CKEditorPluginUtility=function(){function s(){_classCallCheck(this,s)}return _createClass(s,null,[{key:"AddPluginsServerConfig",value:function(e,t,i,n,o,l,r,a,s,u,d,c,m,f){this.PluginsServerConfig[e]={SingleName:e,ToolbarLocation:t,ToolbarLabel:i,ClientResolve:n,ServerResolve:o,ClientResolveJs:l,DialogWidth:r,DialogHeight:a,IsJBuild4DCData:s,ControlCategory:u,ServerDynamicBind:d,ShowRemoveButton:c,ShowInEditorToolbar:m,EnableChildControls:f}}},{key:"_UseServerConfigCoverEmptyPluginProp",value:function(e){var t=this.PluginsServerConfig[e.SingleName];if(t){for(var i in e)"function"!=typeof e[i]&&(""!=e[i]&&null!=e[i]||t[i]&&(e[i]=t[i]));return e}return null}},{key:"GetGeneralPluginInstance",value:function(e,t){var i={SingleName:e,DialogName:"",DialogWidth:null,DialogHeight:null,DialogPageUrl:BaseUtility.AppendTimeStampUrl("Dialog.html"),DialogTitle:"DIV",ToolbarCommand:"",ToolbarIcon:"Icon.png",ToolbarLabel:"",ToolbarLocation:"",IFrameWindow:null,IFrameExecuteActionName:"Insert",DesignModalInputCss:"",ClientResolve:"",ServerResolve:"",IsJBuild4DCData:"",ControlCategory:"",ServerDynamicBind:"",ShowRemoveButton:"",ShowInEditorToolbar:"",EnableChildControls:""};return i=$.extend(!0,{},i,t),null!=(i=s._UseServerConfigCoverEmptyPluginProp(i))?(i.DialogName=i.SingleName,i.ToolbarCommand="JBuild4DC.FormDesign.Plugins."+i.SingleName,i.DialogSettingTitle=i.ToolbarLabel+"Web控件",{Setting:i}):{}}},{key:"GetEnableChildControls",value:function(e){return this.Plugins[e].Setting.EnableChildControls}},{key:"GetPlugins",value:function(){return this.Plugins}},{key:"RegGeneralPluginToEditor",value:function(t,e,i,n){console.log(i),CKEDITOR.dialog.addIframe(i.DialogName,i.DialogSettingTitle,e+i.DialogPageUrl,i.DialogWidth,i.DialogHeight,function(){var e=document.getElementById(this._.frameId);i.IFrameWindow=e,s.SetElemPropsInEditDialog(i.IFrameWindow,i.IFrameExecuteActionName)},{onOk:function(){var e=i.IFrameWindow.contentWindow.DialogApp.getControlProps();if(0==e.success)return!1;n(t,i,e,i.IFrameWindow.contentWindow),i.IFrameExecuteActionName=s.DialogExecuteInsertActionName},onCancel:function(){i.IFrameExecuteActionName=s.DialogExecuteInsertActionName}}),t.addCommand(i.ToolbarCommand,new CKEDITOR.dialogCommand(i.DialogName)),"true"==i.ShowInEditorToolbar&&t.ui.addButton(i.SingleName,{label:i.ToolbarLabel,icon:e+i.ToolbarIcon,command:i.ToolbarCommand,toolbar:i.ToolbarLocation}),t.on("doubleclick",function(e){s.OnCKWysiwygElemDBClickEvent(e,i)})}},{key:"OnCKWysiwygElemDBClickEvent",value:function(e,t){var i=e.data.element;"true"==i.getAttribute("runtime_auto_remove")&&(i=e.data.element.getParent()),i.getAttribute("singleName")==t.SingleName&&(CKEditorUtility.SetSelectedElem(i.getOuterHtml()),e.data.dialog=t.DialogName,t.IFrameExecuteActionName=s.DialogExecuteEditActionName)}},{key:"SerializePropsToElem",value:function(e,t,i){if(e.setAttribute("jbuild4dc_custom","true"),e.setAttribute("singlename",i.SingleName),e.setAttribute("is_jbuild4dc_data",i.IsJBuild4DCData),e.setAttribute("control_category",i.ControlCategory),e.setAttribute("show_remove_button",i.ShowRemoveButton),t.baseInfo)for(var n in t.baseInfo)"readonly"==n?"readonly"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("readonly"):"disabled"==n?"disabled"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("disabled"):e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]);if(t.bindToField)for(var n in t.bindToField)e.setAttribute(n.toLocaleLowerCase(),t.bindToField[n]);if(t.defaultValue)for(var n in t.defaultValue)e.setAttribute(n.toLocaleLowerCase(),t.defaultValue[n]);if(t.validateRules&&t.validateRules.rules&&(0<t.validateRules.rules.length?e.setAttribute("validaterules",encodeURIComponent(JsonUtility.JsonToString(t.validateRules))):(console.log("没有验证规则"),e.removeAttribute("validaterules"))),t.normalProps)for(var n in t.normalProps)e.setAttribute(n.toLocaleLowerCase(),t.normalProps[n]);if(t.bindToSearchField)for(var n in t.bindToSearchField)e.setAttribute(n.toLocaleLowerCase(),t.bindToSearchField[n]);if(t.normalDataSource)for(var n in t.normalDataSource)e.setAttribute(n.toLocaleLowerCase(),t.normalDataSource[n]);if(t.multilevelProps)for(var n in t.multilevelProps)e.setAttribute(n.toLocaleLowerCase(),t.multilevelProps[n]);return e}},{key:"DeserializePropsFromElem",value:function(e){var t={},o=$(e);function i(e,t){var i={};for(var n in this.DefaultProps[t])o.attr(n)?i[n]=o.attr(n):i[n]=this.DefaultProps[t][n];return e[t]=i,e}return t=i.call(this,t,"baseInfo"),t=i.call(this,t,"bindToField"),t=i.call(this,t,"defaultValue"),t=i.call(this,t,"bindToSearchField"),t=i.call(this,t,"normalDataSource"),t=i.call(this,t,"multilevelProps"),o.attr("validateRules")&&(t.validateRules=JsonUtility.StringToJson(decodeURIComponent(o.attr("validateRules")))),t}},{key:"BuildGeneralElemToCKWysiwyg",value:function(e,t,i,n){if(this.ValidateBuildEnable(e,t,i,n))if(console.log("IFrameExecuteActionName:"+t.IFrameExecuteActionName),t.IFrameExecuteActionName==s.DialogExecuteInsertActionName){var o=CKEDITOR.dom.element.createFromHtml(e);this.SerializePropsToElem(o,i,t),CKEditorUtility.GetCKEditorInst().insertElement(o),CKEditorUtility.SingleElemBindDefaultEvent(o)}else{var l=CKEditorUtility.GetSelectedCKEditorElem();if(l){var r=new CKEDITOR.dom.element.createFromHtml(l.getOuterHtml());if("InputControl"==r.getAttribute("control_category")){var a=$(e).html();r.setHtml(a)}l.copyAttributes(r,{temp:"temp"}),this.SerializePropsToElem(r,i,t),r.replace(l),CKEditorUtility.SingleElemBindDefaultEvent(r)}}}},{key:"ValidateBuildEnable",value:function(e,t,i,n){return!0}},{key:"ValidateSerializeControlDialogCompletedEnable",value:function(e){return"true"==e.baseInfo.serialize&&""==e.bindToField.fieldName?(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"序列化的控件必须绑定字段!",null),{success:!1}):e}},{key:"SetElemPropsInEditDialog",value:function(e,t){var i=CKEditorUtility.GetCKEditorInst().getSelection().getStartElement(),n=null;if(i&&(n=i.getParents()),e.contentWindow.DialogApp.ready(t,i,n),t==this.DialogExecuteEditActionName){var o=CKEditorUtility.GetSelectedElem().outerHTML(),l=this.DeserializePropsFromElem(o);e.contentWindow.DialogApp.setControlProps($(o),l)}}},{key:"GetControlDescText",value:function(e,t){console.log(t);var i="类型:【"+e.ToolbarLabel+"】<br />绑定:【"+t.bindToField.tableCaption+"-"+t.bindToField.fieldCaption+"】";if(t.defaultValue&&t.defaultValue.defaultText&&(i+="<br />默认:【"+t.defaultValue.defaultType+":"+t.defaultValue.defaultText+"】"),t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length){i+="<br />验证:【";for(var n=0;n<t.validateRules.rules.length;n++)i+=t.validateRules.rules[n].validateType+";";i=StringUtility.RemoveLastChar(i),i+="】"}return i}},{key:"GetSearchControlDescText",value:function(e,t){return"["+e.ToolbarLabel+"] 绑定:["+t.bindToSearchField.columnCaption+"]("+t.bindToSearchField.columnOperator+")"}},{key:"GetAutoRemoveTipLabel",value:function(e){return e||(e="双击编辑该部件"),'<div runtime_auto_remove="true" class="wysiwyg-auto-remove-tip">'+e+"</div>"}},{key:"TryGetListButtonsInPluginPage",value:function(){var i=[],e=CKEditorUtility.GetCKEditorHTMLInPluginPage();return $(e).find("[buttoncaption]").each(function(){var e=$(this).attr("buttoncaption"),t=$(this).attr("id");i.push({buttonCaption:e,buttonId:t})}),i}},{key:"TryGetDataSetId",value:function(e,t){if(e)for(var i=t.length-1;i--;0<=i)if(null!=t[i].getAttribute("datasetid")&&""!=t[i].getAttribute("datasetid"))return t[i].getAttribute("datasetid");return this.dataSetId?null:window.parent.listDesign.listResourceEntity.listDatasetId}},{key:"TemplateAddDefProp",value:function(e,t,i,n,o){e.attr("classname",""),e.attr("control_category","ContainerControl"),e.attr("custdisabled","nodisabled"),e.attr("custreadonly","noreadonly"),e.attr("desc",""),e.attr("id",t),e.attr("is_jbuild4dc_data","false"),e.attr("jbuild4dc_custom","true"),e.attr("name",t),e.attr("placeholder",""),e.attr("serialize","false"),e.attr("show_remove_button",i),e.attr("singlename",n),e.attr("style",""),e.attr("status",o)}}]),s}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorPluginUtility,"PluginsServerConfig",{}),_defineProperty(CKEditorPluginUtility,"Plugins",{}),_defineProperty(CKEditorPluginUtility,"DefaultProps",{bindToField:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},validateRules:{msg:"",rules:[]},baseInfo:{id:"",serialize:"true",name:"",className:"",placeholder:"",custReadonly:"noreadonly",custDisabled:"nodisabled",style:"",desc:"",status:"enable",groupName:""},bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryGroupDataSourceId:"",dictionaryGroupDataSourceText:"",restDataSource:"",interfaceDataSource:"",staticDataSource:"",defaultSelected:"",layoutDirection:"vertical",rowNum:"0",displayValueInText:"false"},multilevelProps:{level2BindControlId:""}}),_defineProperty(CKEditorPluginUtility,"DialogExecuteEditActionName","Edit"),_defineProperty(CKEditorPluginUtility,"DialogExecuteInsertActionName","Insert");var CKEditorUtility=function(){function D(){_classCallCheck(this,D)}return _createClass(D,null,[{key:"SetSelectedElem",value:function(e){this._$CKEditorSelectElem=$(e)}},{key:"GetSelectedElem",value:function(){return this._$CKEditorSelectElem&&0<this._$CKEditorSelectElem.length?this._$CKEditorSelectElem:null}},{key:"GetSelectedCKEditorElem",value:function(){if(this.GetSelectedElem()){var e=this.GetSelectedElem().attr("id");return this.GetCKEditorInst().document.getById(e)}return null}},{key:"SetLastSelectedTempHTML",value:function(e){this._LastSelectedTempHTML=e}},{key:"GetLastSelectedTempHTML",value:function(){return this._LastSelectedTempHTML}},{key:"TryGetIdFromLastSelectedTempHTML",value:function(e){return this._LastSelectedTempHTML&&$(e).attr("name")==$(this.GetLastSelectedTempHTML()).attr("name")?$(this.GetLastSelectedTempHTML()).attr("id"):""}},{key:"GetCKEditorInst",value:function(){return this._CKEditorInst}},{key:"SetCKEditorInst",value:function(e){this._CKEditorInst=e}},{key:"GetCKEditorHTML",value:function(){return this.ClearALLForDivElemButton(),this.ClearALLPluginInnerPanel(),this.GetCKEditorInst().getData()}},{key:"SetCKEditorHTML",value:function(e){this.GetCKEditorInst().setData(e),window.setTimeout(function(){D.ALLElemBindDefaultEvent()},500)}},{key:"GetCKEditorHTMLInPluginPage",value:function(){return window.parent.CKEditorUtility.GetCKEditorHTML()}},{key:"InitializeCKEditor",value:function(e,t,i,n,o,l){for(var r=new Array,a=0;a<t.length;a++){var s=t[a],u=s.singleName,d=s.toolbarLocation,c=s.text,m=s.serverResolve,f=s.clientResolve,g=s.clientResolveJs,C=s.dialogWidth,v=s.dialogHeight,E=s.isJBuild4DCData,p=s.controlCategory,y=s.serverDynamicBind,b=s.showRemoveButton,h=s.showInEditorToolbar,T=s.enableChildControls,I=u+"Plugin.js",S=o+u+"/";CKEDITOR.plugins.addExternal(u,S,I),r.push(u),CKEditorPluginUtility.AddPluginsServerConfig(u,d,c,f,m,g,C,v,E,p,y,b,h,T)}this.SetThemeVo(l);var P=BaseUtility.AppendTimeStampUrl(n);CKEDITOR.replace(e,{customConfig:P,extraPlugins:r.join(",")}),CKEDITOR.instances.html_design.on("beforePaste",function(e){}),CKEDITOR.instances.html_design.on("paste",function(t){var i=t.data.dataValue;console.log(i);try{var e=$(i);if(e.find(".pluginInnerPanelWrap").remove(),1==e.find("div").length){var n=$(e.find("div").eq(0)),o=D.TryGetIdFromLastSelectedTempHTML(n);if(console.log(o),o)D.GetCKEditorInst().document.getById(o)&&(o="ct_copy_"+StringUtility.Timestamp());else o="ct_copy_"+StringUtility.Timestamp();t.data.dataValue=n.attr("id",o).outerHTML()}}catch(e){console.log("黏贴异常,还原HTML"),t.data.dataValue=i}}),CKEDITOR.instances.html_design.on("afterPaste",function(e){}),CKEDITOR.instances.html_design.on("insertElement",function(e){}),CKEDITOR.instances.html_design.on("insertHtml",function(e){}),CKEDITOR.instances.html_design.on("selectionChange",function(e){for(var t=e.data.selection.getSelectedElement(),i="",n=0;n<e.data.path.elements.length;n++){var o=(t=e.data.path.elements[n]).getAttribute("singlename"),l=t.getHtml();if(o){i=o,D.SetSelectedElem(t.getOuterHtml()),D.SetLastSelectedTempHTML(t.getOuterHtml());var r=t.getHtml();(r=r.replace(/<br \/>/g,"").replace(/<br>/g,"")).indexOf("<")<0&&(console.log(t),D.GetCKEditorInst().getSelection().selectElement(t)),"WFDCT_Template"!=i&&D.CreatePluginInnerPanel(t);break}if("td"==t.getName()&&"&nbsp;"==l){D.GetCKEditorInst().getSelection().selectElement(t.getChild(0));break}}i&&D.DisplayPluginControls(CKEditorPluginUtility.GetEnableChildControls(i))}),this.SetCKEditorInst(CKEDITOR.instances.html_design),CKEDITOR.on("instanceReady",function(e){"function"==typeof i&&i()})}},{key:"DisplayPluginControls",value:function(e){if($(".cke_button").show(),"*"!=e){var t=CKEditorPluginUtility.GetPlugins();for(var i in t){var n=t[i].Setting.SingleName;$(".cke_button__"+StringUtility.ToLowerCase(n)).hide()}for(var o=e.split(";"),l=0;l<o.length;l++){n=o[l];$(".cke_button__"+StringUtility.ToLowerCase(n)).show()}}}},{key:"GetThemeVo",value:function(){return this._ThemeVo}},{key:"SetThemeVo",value:function(e){this._ThemeVo=e,this.ResetRootElemTheme(e)}},{key:"ResetRootElemTheme",value:function(e){if(this.GetCKEditorInst()){var t=this.GetCKEditorHTML();if(null!=t&&""!=t){var i=$(t);if(0<i.length){var n=i.attr("class").split(/\s+/);$.each(n,function(e,t){0<=t.indexOf("html-design-theme-")&&i.removeClass(t)}),i.addClass(e.rootElemClass),this.SetCKEditorHTML(i.outerHTML())}}}}},{key:"ClearALLForDivElemButton",value:function(){for(var e=D.GetCKEditorInst().document.find(".del-button"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"CreatePluginInnerPanel",value:function(n){D.ClearALLPluginInnerPanel();var e=new CKEDITOR.dom.element("div");e.addClass("pluginInnerPanelWrap"),n.append(e);var t=new CKEDITOR.dom.element("div");t.addClass("button"),t.addClass("select-img"),t.setAttribute("title","选中"),e.append(t),t.on("click",function(e){alert("暂不支持!");var t=e.data;t.preventDefault(),t.stopPropagation()});var i=new CKEDITOR.dom.element("div");i.addClass("button"),i.addClass("del-img"),i.setAttribute("title","删除"),e.append(i),i.on("click",function(e){n.remove();var t=e.data;t.preventDefault(),t.stopPropagation()});var o=new CKEDITOR.dom.element("div");o.addClass("button"),o.addClass("copy-id-img"),o.setAttribute("title","复制ID"),e.append(o),o.on("click",function(e){var t=n.getAttribute("id");BaseUtility.CopyValueClipboard(t);var i=e.data;i.preventDefault(),i.stopPropagation()})}},{key:"ClearALLPluginInnerPanel",value:function(){for(var e=D.GetCKEditorInst().document.find(".pluginInnerPanelWrap"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"SingleElemBindDefaultEvent",value:function(e){var t=e.getAttribute("singlename"),i=e.getHtml();(i=i.replace(/<br \/>/g,"")).indexOf("<")<0&&t&&e.on("click",function(e){console.log(this),D.GetCKEditorInst().getSelection().selectElement(this),D.SetSelectedElem(this.getOuterHtml());var t=e.data;t.preventDefault(),t.stopPropagation()})}},{key:"ALLElemBindDefaultEvent",value:function(){console.log("取消使用点击进行元素选择和删除的功能,迁移为selectionChange事件进行!")}}]),D}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorUtility,"_$CKEditorSelectElem",null),_defineProperty(CKEditorUtility,"_LastSelectedTempHTML",null),_defineProperty(CKEditorUtility,"_CKEditorInst",null),_defineProperty(CKEditorUtility,"_ThemeVo",null);var HTMLEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"GetHTMLEditorInst",value:function(){return this._HTMLEditorInst}},{key:"SetHTMLEditorHTML",value:function(e){if(!StringUtility.IsNullOrEmpty(e)){this.GetHTMLEditorInst().setValue(e),CodeMirror.commands.selectAll(this.GetHTMLEditorInst());var t={from:this.GetHTMLEditorInst().getCursor(!0),to:this.GetHTMLEditorInst().getCursor(!1)};this.GetHTMLEditorInst().autoFormatRange(t.from,t.to);this.GetHTMLEditorInst().getDoc().eachLine(function(e){});var i=CKEditorUtility.GetSelectedElem(),n="";i&&(n=i.outerHTML().split(">")[0]);var o=this.GetHTMLEditorInst().getSearchCursor(n);o.findNext(),o.from()&&o.to()&&this.GetHTMLEditorInst().getDoc().setSelection(o.from(),o.to())}}},{key:"GetHtmlEditorHTML",value:function(){return this.GetHTMLEditorInst().getValue()}},{key:"InitializeHTMLCodeDesign",value:function(){this._HTMLEditorInst=CodeMirror.fromTextArea(document.getElementById("TextAreaHTMLEditor"),{mode:{name:"htmlmixed",scriptTypes:[{matches:/\/x-handlebars-template|\/x-mustache/i,mode:null},{matches:/(text|application)\/(x-)?vb(a|script)/i,mode:"vbscript"}]},selectionPointer:!0,theme:"monokai",foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],lineNumbers:!0,lineWrapping:!0}),this._HTMLEditorInst.setSize("100%",PageStyleUtility.GetPageHeight()-85)}}]),e}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(HTMLEditorUtility,"_HTMLEditorInst",null);var JsEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"_GetNewFormJsString",value:function(){return"<script>var FormPageObjectInstance={data:{userEntity:{},organEntity:{},formPO:[],formRecordComplexPO:[],webFormRTParas:{},config:[]},pageReady:function(){},bindRecordDataReady:function(){},validateEveryFromControl:function(validateResult){return validateResult;}}<\/script>"}},{key:"GetJsEditorInst",value:function(){return this._JsEditorInst}},{key:"SetJsEditorJs",value:function(e){this.GetJsEditorInst().setValue(e)}},{key:"GetJsEditorJs",value:function(){return this.GetJsEditorInst().getValue()}},{key:"InitializeJsCodeDesign",value:function(e){if(this._JsEditorInst=CodeMirror.fromTextArea($("#TextAreaJsEditor")[0],{mode:"application/ld+json",lineNumbers:!0,lineWrapping:!0,extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldGutter:!0,smartIndent:!0,matchBrackets:!0,theme:"monokai",gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]}),this._JsEditorInst.setSize("100%",PageStyleUtility.GetPageHeight()-85),"add"==e){this.SetJsEditorJs(this._GetNewFormJsString()),CodeMirror.commands.selectAll(this.GetJsEditorInst());var t={from:this.GetJsEditorInst().getCursor(!0),to:this.GetJsEditorInst().getCursor(!1)};this.GetJsEditorInst().autoFormatRange(t.from,t.to)}}}]),e}();_defineProperty(JsEditorUtility,"_JsEditorInst",null);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNLRWRpdG9yUGx1Z2luVXRpbGl0eS5qcyIsIkNLRWRpdG9yVXRpbGl0eS5qcyIsIkhUTUxFZGl0b3JVdGlsaXR5LmpzIiwiSnNFZGl0b3JVdGlsaXR5LmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsInZhbHVlIiwiQ0tFZGl0b3JQbHVnaW5VdGlsaXR5IiwidGhpcyIsInNpbmdsZU5hbWUiLCJ0b29sYmFyTG9jYXRpb24iLCJ0ZXh0IiwiY2xpZW50UmVzb2x2ZSIsInNlcnZlclJlc29sdmUiLCJjbGllbnRSZXNvbHZlSnMiLCJkaWFsb2dXaWR0aCIsImRpYWxvZ0hlaWdodCIsImlzSkJ1aWxkNERDRGF0YSIsImNvbnRyb2xDYXRlZ29yeSIsInNlcnZlckR5bmFtaWNCaW5kIiwic2hvd1JlbW92ZUJ1dHRvbiIsInNob3dJbkVkaXRvclRvb2xiYXIiLCJlbmFibGVDaGlsZENvbnRyb2xzIiwiUGx1Z2luc1NlcnZlckNvbmZpZyIsIlNpbmdsZU5hbWUiLCJUb29sYmFyTG9jYXRpb24iLCJUb29sYmFyTGFiZWwiLCJDbGllbnRSZXNvbHZlIiwiU2VydmVyUmVzb2x2ZSIsIkNsaWVudFJlc29sdmVKcyIsIkRpYWxvZ1dpZHRoIiwiRGlhbG9nSGVpZ2h0IiwiSXNKQnVpbGQ0RENEYXRhIiwiQ29udHJvbENhdGVnb3J5IiwiU2VydmVyRHluYW1pY0JpbmQiLCJTaG93UmVtb3ZlQnV0dG9uIiwiU2hvd0luRWRpdG9yVG9vbGJhciIsIkVuYWJsZUNoaWxkQ29udHJvbHMiLCJjb3Zlck9iaiIsInByb3AiLCJwbHVnaW5TaW5nbGVOYW1lIiwiZXhDb25maWciLCJkZWZhdWx0U2V0dGluZyIsIkRpYWxvZ05hbWUiLCJEaWFsb2dQYWdlVXJsIiwiQmFzZVV0aWxpdHkiLCJBcHBlbmRUaW1lU3RhbXBVcmwiLCJEaWFsb2dUaXRsZSIsIlRvb2xiYXJDb21tYW5kIiwiVG9vbGJhckljb24iLCJJRnJhbWVXaW5kb3ciLCJJRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSIsIkRlc2lnbk1vZGFsSW5wdXRDc3MiLCIkIiwiZXh0ZW5kIiwiX1VzZVNlcnZlckNvbmZpZ0NvdmVyRW1wdHlQbHVnaW5Qcm9wIiwiRGlhbG9nU2V0dGluZ1RpdGxlIiwiU2V0dGluZyIsIlBsdWdpbnMiLCJja0VkaXRvciIsInBhdGgiLCJwbHVnaW5TZXR0aW5nIiwib2tGdW5jIiwiY29uc29sZSIsImxvZyIsIkNLRURJVE9SIiwiZGlhbG9nIiwiYWRkSWZyYW1lIiwiaWZyYW1lIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIl8iLCJmcmFtZUlkIiwiU2V0RWxlbVByb3BzSW5FZGl0RGlhbG9nIiwib25PayIsImNvbnRlbnRXaW5kb3ciLCJEaWFsb2dBcHAiLCJnZXRDb250cm9sUHJvcHMiLCJzdWNjZXNzIiwiRGlhbG9nRXhlY3V0ZUluc2VydEFjdGlvbk5hbWUiLCJvbkNhbmNlbCIsImFkZENvbW1hbmQiLCJkaWFsb2dDb21tYW5kIiwidWkiLCJhZGRCdXR0b24iLCJsYWJlbCIsImljb24iLCJjb21tYW5kIiwidG9vbGJhciIsIm9uIiwiZXZlbnQiLCJPbkNLV3lzaXd5Z0VsZW1EQkNsaWNrRXZlbnQiLCJjb250cm9sU2V0dGluZyIsImVsZW1lbnQiLCJkYXRhIiwiZ2V0QXR0cmlidXRlIiwiZ2V0UGFyZW50IiwiQ0tFZGl0b3JVdGlsaXR5IiwiU2V0U2VsZWN0ZWRFbGVtIiwiZ2V0T3V0ZXJIdG1sIiwiRGlhbG9nRXhlY3V0ZUVkaXRBY3Rpb25OYW1lIiwiZWxlbSIsInNldEF0dHJpYnV0ZSIsInRvTG9jYWxlTG93ZXJDYXNlIiwicmVtb3ZlQXR0cmlidXRlIiwicnVsZXMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKc29uVXRpbGl0eSIsIkpzb25Ub1N0cmluZyIsIiRlbGVtIiwiYXR0clRvUHJvcCIsImdyb3VwTmFtZSIsImdyb3VwUHJvcCIsIkRlZmF1bHRQcm9wcyIsImF0dHIiLCJjYWxsIiwidmFsaWRhdGVSdWxlcyIsIlN0cmluZ1RvSnNvbiIsImRlY29kZVVSSUNvbXBvbmVudCIsImh0bWwiLCJjb250cm9sUHJvcHMiLCJfaWZyYW1lIiwiVmFsaWRhdGVCdWlsZEVuYWJsZSIsImRvbSIsImNyZWF0ZUZyb21IdG1sIiwiU2VyaWFsaXplUHJvcHNUb0VsZW0iLCJHZXRDS0VkaXRvckluc3QiLCJpbnNlcnRFbGVtZW50IiwiU2luZ2xlRWxlbUJpbmREZWZhdWx0RXZlbnQiLCJzZWxlY3RlZEVsZW0iLCJHZXRTZWxlY3RlZENLRWRpdG9yRWxlbSIsInJlRnJlc2hFbGVtIiwibmV3VGV4dCIsInNldEh0bWwiLCJjb3B5QXR0cmlidXRlcyIsInRlbXAiLCJyZXBsYWNlIiwicmV0dXJuUmVzdWx0IiwiYmFzZUluZm8iLCJzZXJpYWxpemUiLCJiaW5kVG9GaWVsZCIsImZpZWxkTmFtZSIsIkRpYWxvZ1V0aWxpdHkiLCJBbGVydCIsIndpbmRvdyIsIkRpYWxvZ0FsZXJ0SWQiLCJpZnJhbWVPYmoiLCJhY3Rpb25OYW1lIiwic2VsIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0U3RhcnRFbGVtZW50IiwicGFyZW50cyIsImdldFBhcmVudHMiLCJyZWFkeSIsIkdldFNlbGVjdGVkRWxlbSIsIm91dGVySFRNTCIsIkRlc2VyaWFsaXplUHJvcHNGcm9tRWxlbSIsInNldENvbnRyb2xQcm9wcyIsInJlc3VsdCIsInRhYmxlQ2FwdGlvbiIsImZpZWxkQ2FwdGlvbiIsImRlZmF1bHRWYWx1ZSIsImRlZmF1bHRUZXh0IiwiZGVmYXVsdFR5cGUiLCJ2YWxpZGF0ZVR5cGUiLCJTdHJpbmdVdGlsaXR5IiwiUmVtb3ZlTGFzdENoYXIiLCJiaW5kVG9TZWFyY2hGaWVsZCIsImNvbHVtbkNhcHRpb24iLCJjb2x1bW5PcGVyYXRvciIsInRpcE1zZyIsImJ1dHRvbnMiLCJHZXRDS0VkaXRvckhUTUxJblBsdWdpblBhZ2UiLCJmaW5kIiwiZWFjaCIsImJ1dHRvbkNhcHRpb24iLCJidXR0b25JZCIsInB1c2giLCJkYXRhU2V0SWQiLCJwYXJlbnQiLCJsaXN0RGVzaWduIiwibGlzdFJlc291cmNlRW50aXR5IiwibGlzdERhdGFzZXRJZCIsIiR0ZW1wbGF0ZUVsZW0iLCJpZCIsInNob3dfcmVtb3ZlX2J1dHRvbiIsInN0YXR1cyIsInJlbGF0aW9uSWQiLCJ0YWJsZUlkIiwidGFibGVOYW1lIiwiZmllbGREYXRhVHlwZSIsImZpZWxkTGVuZ3RoIiwibXNnIiwibmFtZSIsImNsYXNzTmFtZSIsInBsYWNlaG9sZGVyIiwiY3VzdFJlYWRvbmx5IiwiY3VzdERpc2FibGVkIiwic3R5bGUiLCJkZXNjIiwiY29sdW1uVGl0bGUiLCJjb2x1bW5UYWJsZU5hbWUiLCJjb2x1bW5OYW1lIiwiY29sdW1uRGF0YVR5cGVOYW1lIiwibm9ybWFsRGF0YVNvdXJjZSIsImRlZmF1bHRJc051bGwiLCJzcWxEYXRhU291cmNlIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZUlkIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZVRleHQiLCJyZXN0RGF0YVNvdXJjZSIsImludGVyZmFjZURhdGFTb3VyY2UiLCJzdGF0aWNEYXRhU291cmNlIiwiZGVmYXVsdFNlbGVjdGVkIiwibGF5b3V0RGlyZWN0aW9uIiwicm93TnVtIiwiZGlzcGxheVZhbHVlSW5UZXh0IiwibXVsdGlsZXZlbFByb3BzIiwibGV2ZWwyQmluZENvbnRyb2xJZCIsImVsZW1IdG1sIiwiXyRDS0VkaXRvclNlbGVjdEVsZW0iLCJnZXRCeUlkIiwiX0xhc3RTZWxlY3RlZFRlbXBIVE1MIiwibmV3SFRNTCIsIkdldExhc3RTZWxlY3RlZFRlbXBIVE1MIiwiX0NLRWRpdG9ySW5zdCIsImluc3QiLCJDbGVhckFMTEZvckRpdkVsZW1CdXR0b24iLCJDbGVhckFMTFBsdWdpbklubmVyUGFuZWwiLCJnZXREYXRhIiwic2V0RGF0YSIsInNldFRpbWVvdXQiLCJBTExFbGVtQmluZERlZmF1bHRFdmVudCIsIkdldENLRWRpdG9ySFRNTCIsInRleHRBcmVhRWxlbUlkIiwicGx1Z2luc0NvbmZpZyIsImxvYWRDb21wbGV0ZWRGdW5jIiwiY2tlZGl0b3JDb25maWdGdWxsUGF0aCIsInBsdWdpbkJhc2VQYXRoIiwidGhlbWVWbyIsImV4dHJhUGx1Z2lucyIsIkFycmF5Iiwic2luZ2xlUGx1Z2luQ29uZmlnIiwicGx1Z2luRmlsZU5hbWUiLCJwbHVnaW5Gb2xkZXJOYW1lIiwicGx1Z2lucyIsImFkZEV4dGVybmFsIiwiQWRkUGx1Z2luc1NlcnZlckNvbmZpZyIsIlNldFRoZW1lVm8iLCJlZGl0b3JDb25maWdVcmwiLCJjdXN0b21Db25maWciLCJqb2luIiwiaW5zdGFuY2VzIiwiaHRtbF9kZXNpZ24iLCJzb3VyY2VIVE1MIiwiZGF0YVZhbHVlIiwiJHNvdXJjZUhUTUwiLCJyZW1vdmUiLCIkaW5uZXJFbGVtIiwiZXEiLCJUcnlHZXRJZEZyb21MYXN0U2VsZWN0ZWRUZW1wSFRNTCIsIlRpbWVzdGFtcCIsImUiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3RlZEVsZW1lbnQiLCJsYXN0Q3VzdFNpbmdsZU5hbWUiLCJlbGVtZW50cyIsImVsZW1Jbm5lckhUTUwiLCJnZXRIdG1sIiwiU2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwiLCJpbm5lckh0bWwiLCJpbmRleE9mIiwic2VsZWN0RWxlbWVudCIsIkNyZWF0ZVBsdWdpbklubmVyUGFuZWwiLCJnZXROYW1lIiwiZ2V0Q2hpbGQiLCJEaXNwbGF5UGx1Z2luQ29udHJvbHMiLCJHZXRFbmFibGVDaGlsZENvbnRyb2xzIiwiU2V0Q0tFZGl0b3JJbnN0Iiwic2hvdyIsIkdldFBsdWdpbnMiLCJUb0xvd2VyQ2FzZSIsImhpZGUiLCJlbmFibGVQbHVnaW5zIiwic3BsaXQiLCJfVGhlbWVWbyIsIl90aGVtZVZvIiwiUmVzZXRSb290RWxlbVRoZW1lIiwicm9vdEVsZW0iLCJjbGFzc0xpc3QiLCJpbmRleCIsIml0ZW0iLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwicm9vdEVsZW1DbGFzcyIsIlNldENLRWRpdG9ySFRNTCIsIm9sZERlbEJ1dHRvbnMiLCJjb3VudCIsImdldEl0ZW0iLCJwbHVnaW5Jbm5lclBhbmVsIiwiYXBwZW5kIiwic2VsZWN0QWxsQnV0dG9uIiwiZXYiLCJhbGVydCIsImRvbUV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJkZWxCdXR0b24iLCJjb3B5SWRCdXR0b24iLCJDb3B5VmFsdWVDbGlwYm9hcmQiLCJIVE1MRWRpdG9yVXRpbGl0eSIsIl9IVE1MRWRpdG9ySW5zdCIsIklzTnVsbE9yRW1wdHkiLCJHZXRIVE1MRWRpdG9ySW5zdCIsInNldFZhbHVlIiwiQ29kZU1pcnJvciIsImNvbW1hbmRzIiwicmFuZ2UiLCJmcm9tIiwiZ2V0Q3Vyc29yIiwidG8iLCJhdXRvRm9ybWF0UmFuZ2UiLCJnZXREb2MiLCJlYWNoTGluZSIsImxpbmUiLCJzZWFyY2hIVE1MIiwiY3Vyc29yIiwiZ2V0U2VhcmNoQ3Vyc29yIiwiZmluZE5leHQiLCJzZXRTZWxlY3Rpb24iLCJnZXRWYWx1ZSIsImZyb21UZXh0QXJlYSIsIm1vZGUiLCJzY3JpcHRUeXBlcyIsIm1hdGNoZXMiLCJzZWxlY3Rpb25Qb2ludGVyIiwidGhlbWUiLCJmb2xkR3V0dGVyIiwiZ3V0dGVycyIsImxpbmVOdW1iZXJzIiwibGluZVdyYXBwaW5nIiwic2V0U2l6ZSIsIlBhZ2VTdHlsZVV0aWxpdHkiLCJHZXRQYWdlSGVpZ2h0IiwiSnNFZGl0b3JVdGlsaXR5IiwiX0pzRWRpdG9ySW5zdCIsImpzIiwiR2V0SnNFZGl0b3JJbnN0IiwiZXh0cmFLZXlzIiwiQ3RybC1RIiwiY20iLCJmb2xkQ29kZSIsInNtYXJ0SW5kZW50IiwibWF0Y2hCcmFja2V0cyIsIlNldEpzRWRpdG9ySnMiLCJfR2V0TmV3Rm9ybUpzU3RyaW5nIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLFNBQUFBLGdCQUFBQyxFQUFBQyxHQUFBLEtBQUFELGFBQUFDLEdBQUEsTUFBQSxJQUFBQyxVQUFBLHFDQUVBLFNBQUFDLGtCQUFBQyxFQUFBQyxHQUFBLElBQUEsSUFBQUMsRUFBQSxFQUFBQSxFQUFBRCxFQUFBRSxPQUFBRCxJQUFBLENBQUEsSUFBQUUsRUFBQUgsRUFBQUMsR0FBQUUsRUFBQUMsV0FBQUQsRUFBQUMsYUFBQSxFQUFBRCxFQUFBRSxjQUFBLEVBQUEsVUFBQUYsSUFBQUEsRUFBQUcsVUFBQSxHQUFBQyxPQUFBQyxlQUFBVCxFQUFBSSxFQUFBTSxJQUFBTixJQUVBLFNBQUFPLGFBQUFkLEVBQUFlLEVBQUFDLEdBQUEsT0FBQUQsR0FBQWIsa0JBQUFGLEVBQUFpQixVQUFBRixHQUFBQyxHQUFBZCxrQkFBQUYsRUFBQWdCLEdBQUFoQixFQUVBLFNBQUFrQixnQkFBQUMsRUFBQU4sRUFBQU8sR0FBQSxPQUFBUCxLQUFBTSxFQUFBUixPQUFBQyxlQUFBTyxFQUFBTixFQUFBLENBQUFPLE1BQUFBLEVBQUFaLFlBQUEsRUFBQUMsY0FBQSxFQUFBQyxVQUFBLElBQUFTLEVBQUFOLEdBQUFPLEVBQUFELEVBRUEsSUFBQUUsc0JBQUEsV0FDQSxTQUFBQSxJQUNBdkIsZ0JBQUF3QixLQUFBRCxHQXlhQSxPQXRhQVAsYUFBQU8sRUFBQSxLQUFBLENBQUEsQ0FDQVIsSUFBQSx5QkFDQU8sTUFBQSxTQUFBRyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBZCxLQUFBZSxvQkFBQWQsR0FBQSxDQUNBZSxXQUFBZixFQUNBZ0IsZ0JBQUFmLEVBQ0FnQixhQUFBZixFQUNBZ0IsY0FBQWYsRUFDQWdCLGNBQUFmLEVBQ0FnQixnQkFBQWYsRUFDQWdCLFlBQUFmLEVBQ0FnQixhQUFBZixFQUNBZ0IsZ0JBQUFmLEVBQ0FnQixnQkFBQWYsRUFDQWdCLGtCQUFBZixFQUNBZ0IsaUJBQUFmLEVBQ0FnQixvQkFBQWYsRUFDQWdCLG9CQUFBZixLQUdBLENBQ0F2QixJQUFBLHVDQUNBTyxNQUFBLFNBQUFELEdBQ0EsSUFBQWlDLEVBQUE5QixLQUFBZSxvQkFBQWxCLEVBQUFtQixZQUVBLEdBQUFjLEVBQUEsQ0FDQSxJQUFBLElBQUFDLEtBQUFsQyxFQUNBLG1CQUFBQSxFQUFBa0MsS0FDQSxJQUFBbEMsRUFBQWtDLElBQUEsTUFBQWxDLEVBQUFrQyxJQUNBRCxFQUFBQyxLQUNBbEMsRUFBQWtDLEdBQUFELEVBQUFDLEtBTUEsT0FBQWxDLEVBR0EsT0FBQSxPQUVBLENBQ0FOLElBQUEsMkJBQ0FPLE1BQUEsU0FBQWtDLEVBQUFDLEdBQ0EsSUFBQUMsRUFBQSxDQUNBbEIsV0FBQWdCLEVBQ0FHLFdBQUEsR0FDQWIsWUFBQSxLQUNBQyxhQUFBLEtBQ0FhLGNBQUFDLFlBQUFDLG1CQUFBLGVBQ0FDLFlBQUEsTUFDQUMsZUFBQSxHQUNBQyxZQUFBLFdBQ0F2QixhQUFBLEdBQ0FELGdCQUFBLEdBQ0F5QixhQUFBLEtBQ0FDLHdCQUFBLFNBQ0FDLG9CQUFBLEdBQ0F6QixjQUFBLEdBQ0FDLGNBQUEsR0FDQUksZ0JBQUEsR0FDQUMsZ0JBQUEsR0FDQUMsa0JBQUEsR0FDQUMsaUJBQUEsR0FDQUMsb0JBQUEsR0FDQUMsb0JBQUEsSUFLQSxPQUhBSyxFQUFBVyxFQUFBQyxRQUFBLEVBQUEsR0FBQVosRUFBQUQsR0FHQSxPQUZBQyxFQUFBbkMsRUFBQWdELHFDQUFBYixLQUdBQSxFQUFBQyxXQUFBRCxFQUFBbEIsV0FDQWtCLEVBQUFNLGVBQUEsZ0NBQUFOLEVBQUFsQixXQUNBa0IsRUFBQWMsbUJBQUFkLEVBQUFoQixhQUFBLFFBQ0EsQ0FDQStCLFFBQUFmLElBSUEsS0FFQSxDQUNBM0MsSUFBQSx5QkFDQU8sTUFBQSxTQUFBRyxHQUNBLE9BQUFELEtBQUFrRCxRQUFBakQsR0FBQWdELFFBQUFwQixzQkFFQSxDQUNBdEMsSUFBQSxhQUNBTyxNQUFBLFdBQ0EsT0FBQUUsS0FBQWtELFVBRUEsQ0FDQTNELElBQUEsMkJBQ0FPLE1BQUEsU0FBQXFELEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FDLFFBQUFDLElBQUFILEdBQ0FJLFNBQUFDLE9BQUFDLFVBQUFOLEVBQUFsQixXQUFBa0IsRUFBQUwsbUJBQUFJLEVBQUFDLEVBQUFqQixjQUFBaUIsRUFBQS9CLFlBQUErQixFQUFBOUIsYUFBQSxXQUNBLElBQUFxQyxFQUFBQyxTQUFBQyxlQUFBOUQsS0FBQStELEVBQUFDLFNBQ0FYLEVBQUFYLGFBQUFrQixFQUNBN0QsRUFBQWtFLHlCQUFBWixFQUFBWCxhQUFBVyxFQUFBViwwQkFDQSxDQUNBdUIsS0FBQSxXQUNBLElBQUFwRixFQUFBdUUsRUFBQVgsYUFBQXlCLGNBQUFDLFVBQUFDLGtCQUVBLEdBQUEsR0FBQXZGLEVBQUF3RixRQUNBLE9BQUEsRUFHQWhCLEVBQUFILEVBQUFFLEVBQUF2RSxFQUFBdUUsRUFBQVgsYUFBQXlCLGVBQ0FkLEVBQUFWLHdCQUFBNUMsRUFBQXdFLCtCQUVBQyxTQUFBLFdBQ0FuQixFQUFBVix3QkFBQTVDLEVBQUF3RSxpQ0FHQXBCLEVBQUFzQixXQUFBcEIsRUFBQWIsZUFBQSxJQUFBaUIsU0FBQWlCLGNBQUFyQixFQUFBbEIsYUFFQSxRQUFBa0IsRUFBQXpCLHFCQUNBdUIsRUFBQXdCLEdBQUFDLFVBQUF2QixFQUFBckMsV0FBQSxDQUNBNkQsTUFBQXhCLEVBQUFuQyxhQUNBNEQsS0FBQTFCLEVBQUFDLEVBQUFaLFlBQ0FzQyxRQUFBMUIsRUFBQWIsZUFDQXdDLFFBQUEzQixFQUFBcEMsa0JBSUFrQyxFQUFBOEIsR0FBQSxjQUFBLFNBQUFDLEdBQ0FuRixFQUFBb0YsNEJBQUFELEVBQUE3QixPQUdBLENBQ0E5RCxJQUFBLDhCQUNBTyxNQUFBLFNBQUFvRixFQUFBRSxHQUNBLElBQUFDLEVBQUFILEVBQUFJLEtBQUFELFFBRUEsUUFBQUEsRUFBQUUsYUFBQSx5QkFDQUYsRUFBQUgsRUFBQUksS0FBQUQsUUFBQUcsYUFHQUgsRUFBQUUsYUFBQSxlQUVBSCxFQUFBcEUsYUFDQXlFLGdCQUFBQyxnQkFBQUwsRUFBQU0sZ0JBQ0FULEVBQUFJLEtBQUE1QixPQUFBMEIsRUFBQWpELFdBQ0FpRCxFQUFBekMsd0JBQUE1QyxFQUFBNkYsK0JBR0EsQ0FDQXJHLElBQUEsdUJBQ0FPLE1BQUEsU0FBQStGLEVBQUEvRyxFQUFBc0csR0FPQSxHQU5BUyxFQUFBQyxhQUFBLG1CQUFBLFFBQ0FELEVBQUFDLGFBQUEsYUFBQVYsRUFBQXBFLFlBQ0E2RSxFQUFBQyxhQUFBLG9CQUFBVixFQUFBNUQsaUJBQ0FxRSxFQUFBQyxhQUFBLG1CQUFBVixFQUFBM0QsaUJBQ0FvRSxFQUFBQyxhQUFBLHFCQUFBVixFQUFBekQsa0JBRUE3QyxFQUFBLFNBQ0EsSUFBQSxJQUFBUyxLQUFBVCxFQUFBLFNBQ0EsWUFBQVMsRUFDQSxZQUFBVCxFQUFBLFNBQUFTLEdBQ0FzRyxFQUFBQyxhQUFBdkcsRUFBQXdHLG9CQUFBakgsRUFBQSxTQUFBUyxJQUVBc0csRUFBQUcsZ0JBQUEsWUFFQSxZQUFBekcsRUFDQSxZQUFBVCxFQUFBLFNBQUFTLEdBQ0FzRyxFQUFBQyxhQUFBdkcsRUFBQXdHLG9CQUFBakgsRUFBQSxTQUFBUyxJQUVBc0csRUFBQUcsZ0JBQUEsWUFHQUgsRUFBQUMsYUFBQXZHLEVBQUF3RyxvQkFBQWpILEVBQUEsU0FBQVMsSUFLQSxHQUFBVCxFQUFBLFlBQ0EsSUFBQSxJQUFBUyxLQUFBVCxFQUFBLFlBQ0ErRyxFQUFBQyxhQUFBdkcsRUFBQXdHLG9CQUFBakgsRUFBQSxZQUFBUyxJQUlBLEdBQUFULEVBQUEsYUFDQSxJQUFBLElBQUFTLEtBQUFULEVBQUEsYUFDQStHLEVBQUFDLGFBQUF2RyxFQUFBd0csb0JBQUFqSCxFQUFBLGFBQUFTLElBZUEsR0FYQVQsRUFBQSxlQUNBQSxFQUFBLGNBQUFtSCxRQUNBLEVBQUFuSCxFQUFBLGNBQUFtSCxNQUFBakgsT0FDQTZHLEVBQUFDLGFBQUEsZ0JBQUFJLG1CQUFBQyxZQUFBQyxhQUFBdEgsRUFBQSxrQkFFQXlFLFFBQUFDLElBQUEsVUFDQXFDLEVBQUFHLGdCQUFBLG1CQUtBbEgsRUFBQSxZQUNBLElBQUEsSUFBQVMsS0FBQVQsRUFBQSxZQUNBK0csRUFBQUMsYUFBQXZHLEVBQUF3RyxvQkFBQWpILEVBQUEsWUFBQVMsSUFJQSxHQUFBVCxFQUFBLGtCQUNBLElBQUEsSUFBQVMsS0FBQVQsRUFBQSxrQkFDQStHLEVBQUFDLGFBQUF2RyxFQUFBd0csb0JBQUFqSCxFQUFBLGtCQUFBUyxJQUlBLEdBQUFULEVBQUEsaUJBQ0EsSUFBQSxJQUFBUyxLQUFBVCxFQUFBLGlCQUNBK0csRUFBQUMsYUFBQXZHLEVBQUF3RyxvQkFBQWpILEVBQUEsaUJBQUFTLElBSUEsR0FBQVQsRUFBQSxnQkFDQSxJQUFBLElBQUFTLEtBQUFULEVBQUEsZ0JBQ0ErRyxFQUFBQyxhQUFBdkcsRUFBQXdHLG9CQUFBakgsRUFBQSxnQkFBQVMsSUFJQSxPQUFBc0csSUFFQSxDQUNBdEcsSUFBQSwyQkFDQU8sTUFBQSxTQUFBK0YsR0FDQSxJQUFBL0csRUFBQSxHQUNBdUgsRUFBQXhELEVBQUFnRCxHQUVBLFNBQUFTLEVBQUF4SCxFQUFBeUgsR0FDQSxJQUFBQyxFQUFBLEdBRUEsSUFBQSxJQUFBakgsS0FBQVMsS0FBQXlHLGFBQUFGLEdBQ0FGLEVBQUFLLEtBQUFuSCxHQUNBaUgsRUFBQWpILEdBQUE4RyxFQUFBSyxLQUFBbkgsR0FFQWlILEVBQUFqSCxHQUFBUyxLQUFBeUcsYUFBQUYsR0FBQWhILEdBS0EsT0FEQVQsRUFBQXlILEdBQUFDLEVBQ0ExSCxFQWNBLE9BWEFBLEVBQUF3SCxFQUFBSyxLQUFBM0csS0FBQWxCLEVBQUEsWUFDQUEsRUFBQXdILEVBQUFLLEtBQUEzRyxLQUFBbEIsRUFBQSxlQUNBQSxFQUFBd0gsRUFBQUssS0FBQTNHLEtBQUFsQixFQUFBLGdCQUNBQSxFQUFBd0gsRUFBQUssS0FBQTNHLEtBQUFsQixFQUFBLHFCQUNBQSxFQUFBd0gsRUFBQUssS0FBQTNHLEtBQUFsQixFQUFBLG9CQUNBQSxFQUFBd0gsRUFBQUssS0FBQTNHLEtBQUFsQixFQUFBLG1CQUVBdUgsRUFBQUssS0FBQSxtQkFDQTVILEVBQUE4SCxjQUFBVCxZQUFBVSxhQUFBQyxtQkFBQVQsRUFBQUssS0FBQSxvQkFHQTVILElBRUEsQ0FDQVMsSUFBQSw4QkFDQU8sTUFBQSxTQUFBaUgsRUFBQTNCLEVBQUE0QixFQUFBQyxHQUNBLEdBQUFqSCxLQUFBa0gsb0JBQUFILEVBQUEzQixFQUFBNEIsRUFBQUMsR0FHQSxHQUZBMUQsUUFBQUMsSUFBQSwyQkFBQTRCLEVBQUF6Qyx5QkFFQXlDLEVBQUF6Qyx5QkFBQTVDLEVBQUF3RSw4QkFBQSxDQUNBLElBQUFzQixFQUFBcEMsU0FBQTBELElBQUE5QixRQUFBK0IsZUFBQUwsR0FDQS9HLEtBQUFxSCxxQkFBQXhCLEVBQUFtQixFQUFBNUIsR0FDQUssZ0JBQUE2QixrQkFBQUMsY0FBQTFCLEdBQ0FKLGdCQUFBK0IsMkJBQUEzQixPQUNBLENBQ0EsSUFBQTRCLEVBQUFoQyxnQkFBQWlDLDBCQUVBLEdBQUFELEVBQUEsQ0FDQSxJQUFBRSxFQUFBLElBQUFsRSxTQUFBMEQsSUFBQTlCLFFBQUErQixlQUFBSyxFQUFBOUIsZ0JBRUEsR0FBQSxnQkFBQWdDLEVBQUFwQyxhQUFBLG9CQUFBLENBQ0EsSUFBQXFDLEVBQUEvRSxFQUFBa0UsR0FBQUEsT0FDQVksRUFBQUUsUUFBQUQsR0FHQUgsRUFBQUssZUFBQUgsRUFBQSxDQUNBSSxLQUFBLFNBRUEvSCxLQUFBcUgscUJBQUFNLEVBQUFYLEVBQUE1QixHQUNBdUMsRUFBQUssUUFBQVAsR0FDQWhDLGdCQUFBK0IsMkJBQUFHLE9BS0EsQ0FDQXBJLElBQUEsc0JBQ0FPLE1BQUEsU0FBQWlILEVBQUEzQixFQUFBNEIsRUFBQUMsR0FDQSxPQUFBLElBRUEsQ0FDQTFILElBQUEsZ0RBQ0FPLE1BQUEsU0FBQW1JLEdBQ0EsTUFBQSxRQUFBQSxFQUFBQyxTQUFBQyxXQUFBLElBQUFGLEVBQUFHLFlBQUFDLFdBQ0FDLGNBQUFDLE1BQUFDLE9BQUFGLGNBQUFHLGNBQUEsR0FBQSxnQkFBQSxNQUNBLENBQ0FuRSxTQUFBLElBSUEyRCxJQUVBLENBQ0ExSSxJQUFBLDJCQUNBTyxNQUFBLFNBQUE0SSxFQUFBQyxHQUNBLElBQUFDLEVBQUFuRCxnQkFBQTZCLGtCQUFBdUIsZUFBQUMsa0JBQ0FDLEVBQUEsS0FRQSxHQU5BSCxJQUNBRyxFQUFBSCxFQUFBSSxjQUdBTixFQUFBdkUsY0FBQUMsVUFBQTZFLE1BQUFOLEVBQUFDLEVBQUFHLEdBRUFKLEdBQUEzSSxLQUFBNEYsNEJBQUEsQ0FDQSxJQUFBQyxFQUFBSixnQkFBQXlELGtCQUFBQyxZQUNBckssRUFBQWtCLEtBQUFvSix5QkFBQXZELEdBQ0E2QyxFQUFBdkUsY0FBQUMsVUFBQWlGLGdCQUFBeEcsRUFBQWdELEdBQUEvRyxNQUdBLENBQ0FTLElBQUEscUJBQ0FPLE1BQUEsU0FBQXVELEVBQUF2RSxHQUNBeUUsUUFBQUMsSUFBQTFFLEdBQ0EsSUFBQXdLLEVBQUEsT0FBQWpHLEVBQUFuQyxhQUFBLGNBQUFwQyxFQUFBc0osWUFBQW1CLGFBQUEsSUFBQXpLLEVBQUFzSixZQUFBb0IsYUFBQSxJQVFBLEdBTkExSyxFQUFBMkssY0FDQTNLLEVBQUEySyxhQUFBQyxjQUNBSixHQUFBLGFBQUF4SyxFQUFBMkssYUFBQUUsWUFBQSxJQUFBN0ssRUFBQTJLLGFBQUFDLFlBQUEsS0FJQTVLLEVBQUE4SCxlQUNBOUgsRUFBQThILGNBQUFYLE9BQ0EsRUFBQW5ILEVBQUE4SCxjQUFBWCxNQUFBakgsT0FBQSxDQUNBc0ssR0FBQSxhQUVBLElBQUEsSUFBQXZLLEVBQUEsRUFBQUEsRUFBQUQsRUFBQThILGNBQUFYLE1BQUFqSCxPQUFBRCxJQUNBdUssR0FBQXhLLEVBQUE4SCxjQUFBWCxNQUFBbEgsR0FBQTZLLGFBQUEsSUFHQU4sRUFBQU8sY0FBQUMsZUFBQVIsR0FDQUEsR0FBQSxJQUtBLE9BQUFBLElBRUEsQ0FDQS9KLElBQUEsMkJBQ0FPLE1BQUEsU0FBQXVELEVBQUF2RSxHQUNBLE1BQUEsSUFBQXVFLEVBQUFuQyxhQUFBLFNBQUFwQyxFQUFBaUwsa0JBQUFDLGNBQUEsS0FBQWxMLEVBQUFpTCxrQkFBQUUsZUFBQSxNQUVBLENBQ0ExSyxJQUFBLHdCQUNBTyxNQUFBLFNBQUFvSyxHQUtBLE9BSkFBLElBQ0FBLEVBQUEsV0FHQSxtRUFBQUEsRUFBQSxXQUVBLENBQ0EzSyxJQUFBLGdDQUNBTyxNQUFBLFdBQ0EsSUFBQXFLLEVBQUEsR0FDQXBELEVBQUF0QixnQkFBQTJFLDhCQVVBLE9BVEF2SCxFQUFBa0UsR0FBQXNELEtBQUEsbUJBQ0FDLEtBQUEsV0FDQSxJQUFBQyxFQUFBMUgsRUFBQTdDLE1BQUEwRyxLQUFBLGlCQUNBOEQsRUFBQTNILEVBQUE3QyxNQUFBMEcsS0FBQSxNQUNBeUQsRUFBQU0sS0FBQSxDQUNBRixjQUFBQSxFQUNBQyxTQUFBQSxNQUdBTCxJQUVBLENBQ0E1SyxJQUFBLGtCQUNBTyxNQUFBLFNBQUE4SSxFQUFBRyxHQUNBLEdBQUFILEVBQ0EsSUFBQSxJQUFBN0osRUFBQWdLLEVBQUEvSixPQUFBLEVBQUFELElBQUEsR0FBQUEsRUFDQSxHQUFBLE1BQUFnSyxFQUFBaEssR0FBQXdHLGFBQUEsY0FBQSxJQUFBd0QsRUFBQWhLLEdBQUF3RyxhQUFBLGFBQ0EsT0FBQXdELEVBQUFoSyxHQUFBd0csYUFBQSxhQUtBLE9BQUF2RixLQUFBMEssVUFJQSxLQUhBbEMsT0FBQW1DLE9BQUFDLFdBQUFDLG1CQUFBQyxnQkFLQSxDQUNBdkwsSUFBQSxxQkFDQU8sTUFBQSxTQUFBaUwsRUFBQUMsRUFBQUMsRUFBQWhMLEVBQUFpTCxHQUNBSCxFQUFBckUsS0FBQSxZQUFBLElBQ0FxRSxFQUFBckUsS0FBQSxtQkFBQSxvQkFDQXFFLEVBQUFyRSxLQUFBLGVBQUEsY0FDQXFFLEVBQUFyRSxLQUFBLGVBQUEsY0FDQXFFLEVBQUFyRSxLQUFBLE9BQUEsSUFDQXFFLEVBQUFyRSxLQUFBLEtBQUFzRSxHQUNBRCxFQUFBckUsS0FBQSxvQkFBQSxTQUNBcUUsRUFBQXJFLEtBQUEsbUJBQUEsUUFDQXFFLEVBQUFyRSxLQUFBLE9BQUFzRSxHQUNBRCxFQUFBckUsS0FBQSxjQUFBLElBQ0FxRSxFQUFBckUsS0FBQSxZQUFBLFNBQ0FxRSxFQUFBckUsS0FBQSxxQkFBQXVFLEdBQ0FGLEVBQUFyRSxLQUFBLGFBQUF6RyxHQUNBOEssRUFBQXJFLEtBQUEsUUFBQSxJQUNBcUUsRUFBQXJFLEtBQUEsU0FBQXdFLE9BSUFuTCxFQTNhQSxHQ1JBLFNBQUF2QixnQkFBQUMsRUFBQUMsR0FBQSxLQUFBRCxhQUFBQyxHQUFBLE1BQUEsSUFBQUMsVUFBQSxxQ0FFQSxTQUFBQyxrQkFBQUMsRUFBQUMsR0FBQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQUQsRUFBQUUsT0FBQUQsSUFBQSxDQUFBLElBQUFFLEVBQUFILEVBQUFDLEdBQUFFLEVBQUFDLFdBQUFELEVBQUFDLGFBQUEsRUFBQUQsRUFBQUUsY0FBQSxFQUFBLFVBQUFGLElBQUFBLEVBQUFHLFVBQUEsR0FBQUMsT0FBQUMsZUFBQVQsRUFBQUksRUFBQU0sSUFBQU4sSUFFQSxTQUFBTyxhQUFBZCxFQUFBZSxFQUFBQyxHQUFBLE9BQUFELEdBQUFiLGtCQUFBRixFQUFBaUIsVUFBQUYsR0FBQUMsR0FBQWQsa0JBQUFGLEVBQUFnQixHQUFBaEIsRUFFQSxTQUFBa0IsZ0JBQUFDLEVBQUFOLEVBQUFPLEdBQUEsT0FBQVAsS0FBQU0sRUFBQVIsT0FBQUMsZUFBQU8sRUFBQU4sRUFBQSxDQUFBTyxNQUFBQSxFQUFBWixZQUFBLEVBQUFDLGNBQUEsRUFBQUMsVUFBQSxJQUFBUyxFQUFBTixHQUFBTyxFQUFBRCxFRGdiQUQsZ0JBQUFHLHNCQUFBLHNCQUFBLElBRUFILGdCQUFBRyxzQkFBQSxVQUFBLElBRUFILGdCQUFBRyxzQkFBQSxlQUFBLENBQ0FxSSxZQUFBLENBQ0ErQyxXQUFBLEdBQ0FDLFFBQUEsR0FDQUMsVUFBQSxHQUNBOUIsYUFBQSxHQUNBbEIsVUFBQSxHQUNBbUIsYUFBQSxHQUNBOEIsY0FBQSxHQUNBQyxZQUFBLElBRUE5QixhQUFBLENBQ0FFLFlBQUEsR0FDQUYsYUFBQSxHQUNBQyxZQUFBLElBRUE5QyxjQUFBLENBQ0E0RSxJQUFBLEdBQ0F2RixNQUFBLElBRUFpQyxTQUFBLENBQ0E4QyxHQUFBLEdBQ0E3QyxVQUFBLE9BQ0FzRCxLQUFBLEdBQ0FDLFVBQUEsR0FDQUMsWUFBQSxHQUNBQyxhQUFBLGFBQ0FDLGFBQUEsYUFDQUMsTUFBQSxHQUNBQyxLQUFBLEdBQ0FiLE9BQUEsU0FDQTNFLFVBQUEsSUFFQXdELGtCQUFBLENBQ0FpQyxZQUFBLEdBQ0FDLGdCQUFBLEdBQ0FDLFdBQUEsR0FDQWxDLGNBQUEsR0FDQW1DLG1CQUFBLEdBQ0FsQyxlQUFBLE1BRUFtQyxpQkFBQSxDQUNBQyxjQUFBLE9BQ0FDLGNBQUEsR0FDQUMsNEJBQUEsR0FDQUMsOEJBQUEsR0FDQUMsZUFBQSxHQUNBQyxvQkFBQSxHQUNBQyxpQkFBQSxHQUNBQyxnQkFBQSxHQUNBQyxnQkFBQSxXQUNBQyxPQUFBLElBQ0FDLG1CQUFBLFNBRUFDLGdCQUFBLENBQ0FDLG9CQUFBLE1BSUFyTixnQkFBQUcsc0JBQUEsOEJBQUEsUUFFQUgsZ0JBQUFHLHNCQUFBLGdDQUFBLFVDL2VBLElBQUEwRixnQkFBQSxXQUNBLFNBQUFBLElBQ0FqSCxnQkFBQXdCLEtBQUF5RixHQXlWQSxPQXRWQWpHLGFBQUFpRyxFQUFBLEtBQUEsQ0FBQSxDQUNBbEcsSUFBQSxrQkFDQU8sTUFBQSxTQUFBb04sR0FDQWxOLEtBQUFtTixxQkFBQXRLLEVBQUFxSyxLQUVBLENBQ0EzTixJQUFBLGtCQUNBTyxNQUFBLFdBQ0EsT0FBQUUsS0FBQW1OLHNCQUNBLEVBQUFuTixLQUFBbU4scUJBQUFuTyxPQUNBZ0IsS0FBQW1OLHFCQUlBLE9BRUEsQ0FDQTVOLElBQUEsMEJBQ0FPLE1BQUEsV0FDQSxHQUFBRSxLQUFBa0osa0JBQUEsQ0FDQSxJQUFBOEIsRUFBQWhMLEtBQUFrSixrQkFBQXhDLEtBQUEsTUFFQSxPQURBMUcsS0FBQXNILGtCQUFBekQsU0FBQXVKLFFBQUFwQyxHQUlBLE9BQUEsT0FFQSxDQUNBekwsSUFBQSwwQkFDQU8sTUFBQSxTQUFBaUgsR0FDQS9HLEtBQUFxTixzQkFBQXRHLElBRUEsQ0FDQXhILElBQUEsMEJBQ0FPLE1BQUEsV0FDQSxPQUFBRSxLQUFBcU4sd0JBRUEsQ0FDQTlOLElBQUEsbUNBQ0FPLE1BQUEsU0FBQXdOLEdBQ0EsT0FBQXROLEtBQUFxTix1QkFHQXhLLEVBQUF5SyxHQUFBNUcsS0FBQSxTQUNBN0QsRUFBQTdDLEtBQUF1TiwyQkFBQTdHLEtBQUEsUUFHQTdELEVBQUE3QyxLQUFBdU4sMkJBQUE3RyxLQUFBLE1BTkEsS0FZQSxDQUNBbkgsSUFBQSxrQkFDQU8sTUFBQSxXQUNBLE9BQUFFLEtBQUF3TixnQkFFQSxDQUNBak8sSUFBQSxrQkFDQU8sTUFBQSxTQUFBMk4sR0FDQXpOLEtBQUF3TixjQUFBQyxJQUVBLENBQ0FsTyxJQUFBLGtCQUNBTyxNQUFBLFdBR0EsT0FGQUUsS0FBQTBOLDJCQUNBMU4sS0FBQTJOLDJCQUNBM04sS0FBQXNILGtCQUFBc0csWUFFQSxDQUNBck8sSUFBQSxrQkFDQU8sTUFBQSxTQUFBaUgsR0FDQS9HLEtBQUFzSCxrQkFBQXVHLFFBQUE5RyxHQUNBeUIsT0FBQXNGLFdBQUEsV0FDQXJJLEVBQUFzSSwyQkFDQSxPQUVBLENBQ0F4TyxJQUFBLDhCQUNBTyxNQUFBLFdBQ0EsT0FBQTBJLE9BQUFtQyxPQUFBbEYsZ0JBQUF1SSxvQkFFQSxDQUNBek8sSUFBQSxxQkFDQU8sTUFBQSxTQUFBbU8sRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FHQSxJQUZBLElBQUFDLEVBQUEsSUFBQUMsTUFFQXpQLEVBQUEsRUFBQUEsRUFBQW1QLEVBQUFsUCxPQUFBRCxJQUFBLENBQ0EsSUFBQTBQLEVBQUFQLEVBQUFuUCxHQUNBa0IsRUFBQXdPLEVBQUF4TyxXQUNBQyxFQUFBdU8sRUFBQXZPLGdCQUNBQyxFQUFBc08sRUFBQXRPLEtBQ0FFLEVBQUFvTyxFQUFBcE8sY0FDQUQsRUFBQXFPLEVBQUFyTyxjQUNBRSxFQUFBbU8sRUFBQW5PLGdCQUNBQyxFQUFBa08sRUFBQWxPLFlBQ0FDLEVBQUFpTyxFQUFBak8sYUFDQUMsRUFBQWdPLEVBQUFoTyxnQkFDQUMsRUFBQStOLEVBQUEvTixnQkFDQUMsRUFBQThOLEVBQUE5TixrQkFDQUMsRUFBQTZOLEVBQUE3TixpQkFDQUMsRUFBQTROLEVBQUE1TixvQkFDQUMsRUFBQTJOLEVBQUEzTixvQkFDQTROLEVBQUF6TyxFQUFBLFlBQ0EwTyxFQUFBTixFQUFBcE8sRUFBQSxJQUNBd0QsU0FBQW1MLFFBQUFDLFlBQUE1TyxFQUFBME8sRUFBQUQsR0FDQUgsRUFBQTlELEtBQUF4SyxHQUNBRixzQkFBQStPLHVCQUFBN08sRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FHQWQsS0FBQStPLFdBQUFULEdBQ0EsSUFBQVUsRUFBQTNNLFlBQUFDLG1CQUFBOEwsR0FDQTNLLFNBQUF1RSxRQUFBaUcsRUFBQSxDQUNBZ0IsYUFBQUQsRUFDQVQsYUFBQUEsRUFBQVcsS0FBQSxPQUVBekwsU0FBQTBMLFVBQUFDLFlBQUFuSyxHQUFBLGNBQUEsU0FBQUMsTUFDQXpCLFNBQUEwTCxVQUFBQyxZQUFBbkssR0FBQSxRQUFBLFNBQUFDLEdBQ0EsSUFBQW1LLEVBQUFuSyxFQUFBSSxLQUFBZ0ssVUFDQS9MLFFBQUFDLElBQUE2TCxHQUVBLElBQ0EsSUFBQUUsRUFBQTFNLEVBQUF3TSxHQUdBLEdBRkFFLEVBQUFsRixLQUFBLHlCQUFBbUYsU0FFQSxHQUFBRCxFQUFBbEYsS0FBQSxPQUFBckwsT0FBQSxDQUNBLElBQUF5USxFQUFBNU0sRUFBQTBNLEVBQUFsRixLQUFBLE9BQUFxRixHQUFBLElBQ0ExRSxFQUFBdkYsRUFBQWtLLGlDQUFBRixHQUdBLEdBRkFsTSxRQUFBQyxJQUFBd0gsR0FFQUEsRUFDQXZGLEVBQUE2QixrQkFBQXpELFNBQUF1SixRQUFBcEMsS0FHQUEsRUFBQSxXQUFBbkIsY0FBQStGLGtCQUdBNUUsRUFBQSxXQUFBbkIsY0FBQStGLFlBR0ExSyxFQUFBSSxLQUFBZ0ssVUFBQUcsRUFBQS9JLEtBQUEsS0FBQXNFLEdBQUE3QixhQUVBLE1BQUEwRyxHQUNBdE0sUUFBQUMsSUFBQSxlQUNBMEIsRUFBQUksS0FBQWdLLFVBQUFELEtBR0E1TCxTQUFBMEwsVUFBQUMsWUFBQW5LLEdBQUEsYUFBQSxTQUFBQyxNQUNBekIsU0FBQTBMLFVBQUFDLFlBQUFuSyxHQUFBLGdCQUFBLFNBQUFDLE1BQ0F6QixTQUFBMEwsVUFBQUMsWUFBQW5LLEdBQUEsYUFBQSxTQUFBQyxNQUNBekIsU0FBQTBMLFVBQUFDLFlBQUFuSyxHQUFBLGtCQUFBLFNBQUFDLEdBSUEsSUFIQSxJQUFBVyxFQUFBWCxFQUFBSSxLQUFBd0ssVUFBQUMscUJBQ0FDLEVBQUEsR0FFQWpSLEVBQUEsRUFBQUEsRUFBQW1HLEVBQUFJLEtBQUFsQyxLQUFBNk0sU0FBQWpSLE9BQUFELElBQUEsQ0FDQSxJQUNBa0IsR0FEQTRGLEVBQUFYLEVBQUFJLEtBQUFsQyxLQUFBNk0sU0FBQWxSLElBQ0F3RyxhQUFBLGNBQ0EySyxFQUFBckssRUFBQXNLLFVBRUEsR0FBQWxRLEVBQUEsQ0FDQStQLEVBQUEvUCxFQUNBd0YsRUFBQUMsZ0JBQUFHLEVBQUFGLGdCQUNBRixFQUFBMkssd0JBQUF2SyxFQUFBRixnQkFDQSxJQUFBMEssRUFBQXhLLEVBQUFzSyxXQUNBRSxFQUFBQSxFQUFBckksUUFBQSxXQUFBLElBQUFBLFFBQUEsUUFBQSxLQUVBc0ksUUFBQSxLQUFBLElBQ0EvTSxRQUFBQyxJQUFBcUMsR0FDQUosRUFBQTZCLGtCQUFBdUIsZUFBQTBILGNBQUExSyxJQUdBLGtCQUFBbUssR0FDQXZLLEVBQUErSyx1QkFBQTNLLEdBR0EsTUFHQSxHQUFBLE1BQUFBLEVBQUE0SyxXQUFBLFVBQUFQLEVBQUEsQ0FDQXpLLEVBQUE2QixrQkFBQXVCLGVBQUEwSCxjQUFBMUssRUFBQTZLLFNBQUEsSUFDQSxPQUlBVixHQUNBdkssRUFBQWtMLHNCQUFBNVEsc0JBQUE2USx1QkFBQVosTUFHQWhRLEtBQUE2USxnQkFBQXBOLFNBQUEwTCxVQUFBQyxhQUNBM0wsU0FBQXdCLEdBQUEsZ0JBQUEsU0FBQTRLLEdBQ0EsbUJBQUExQixHQUNBQSxRQUtBLENBQ0E1TyxJQUFBLHdCQUNBTyxNQUFBLFNBQUFnQixHQUdBLEdBRkErQixFQUFBLGVBQUFpTyxPQUVBLEtBQUFoUSxFQUFBLENBSUEsSUFBQThOLEVBQUE3TyxzQkFBQWdSLGFBRUEsSUFBQSxJQUFBeFIsS0FBQXFQLEVBQUEsQ0FDQSxJQUNBM08sRUFEQTJPLEVBQUFyUCxHQUNBMEQsUUFBQWpDLFdBQ0E2QixFQUFBLGdCQUFBZ0gsY0FBQW1ILFlBQUEvUSxJQUFBZ1IsT0FLQSxJQUZBLElBQUFDLEVBQUFwUSxFQUFBcVEsTUFBQSxLQUVBcFMsRUFBQSxFQUFBQSxFQUFBbVMsRUFBQWxTLE9BQUFELElBQUEsQ0FDQWtCLEVBQUFpUixFQUFBblMsR0FDQThELEVBQUEsZ0JBQUFnSCxjQUFBbUgsWUFBQS9RLElBQUE2USxXQUdBLENBQ0F2UixJQUFBLGFBQ0FPLE1BQUEsV0FDQSxPQUFBRSxLQUFBb1IsV0FFQSxDQUNBN1IsSUFBQSxhQUNBTyxNQUFBLFNBQUF1UixHQUNBclIsS0FBQW9SLFNBQUFDLEVBQ0FyUixLQUFBc1IsbUJBQUFELEtBRUEsQ0FDQTlSLElBQUEscUJBQ0FPLE1BQUEsU0FBQXVSLEdBQ0EsR0FBQXJSLEtBQUFzSCxrQkFBQSxDQUNBLElBQUErSCxFQUFBclAsS0FBQWdPLGtCQUVBLEdBQUEsTUFBQXFCLEdBQUEsSUFBQUEsRUFBQSxDQUNBLElBQUFrQyxFQUFBMU8sRUFBQXdNLEdBRUEsR0FBQSxFQUFBa0MsRUFBQXZTLE9BQUEsQ0FDQSxJQUFBd1MsRUFBQUQsRUFBQTdLLEtBQUEsU0FBQXlLLE1BQUEsT0FFQXRPLEVBQUF5SCxLQUFBa0gsRUFBQSxTQUFBQyxFQUFBQyxHQUNBLEdBQUFBLEVBQUFwQixRQUFBLHVCQUNBaUIsRUFBQUksWUFBQUQsS0FHQUgsRUFBQUssU0FBQVAsRUFBQVEsZUFDQTdSLEtBQUE4UixnQkFBQVAsRUFBQXBJLGtCQUtBLENBQ0E1SixJQUFBLDJCQUNBTyxNQUFBLFdBR0EsSUFGQSxJQUFBaVMsRUFBQXRNLEVBQUE2QixrQkFBQXpELFNBQUF3RyxLQUFBLGVBRUF0TCxFQUFBLEVBQUFBLEVBQUFnVCxFQUFBQyxRQUFBalQsSUFDQWdULEVBQUFFLFFBQUFsVCxHQUFBeVEsV0FHQSxDQUNBalEsSUFBQSx5QkFDQU8sTUFBQSxTQUFBK0YsR0FDQUosRUFBQWtJLDJCQUNBLElBQUF1RSxFQUFBLElBQUF6TyxTQUFBMEQsSUFBQTlCLFFBQUEsT0FDQTZNLEVBQUFOLFNBQUEsd0JBQ0EvTCxFQUFBc00sT0FBQUQsR0FDQSxJQUFBRSxFQUFBLElBQUEzTyxTQUFBMEQsSUFBQTlCLFFBQUEsT0FDQStNLEVBQUFSLFNBQUEsVUFDQVEsRUFBQVIsU0FBQSxjQUNBUSxFQUFBdE0sYUFBQSxRQUFBLE1BQ0FvTSxFQUFBQyxPQUFBQyxHQUNBQSxFQUFBbk4sR0FBQSxRQUFBLFNBQUFvTixHQUNBQyxNQUFBLFNBQ0EsSUFBQUMsRUFBQUYsRUFBQS9NLEtBQ0FpTixFQUFBQyxpQkFDQUQsRUFBQUUsb0JBRUEsSUFBQUMsRUFBQSxJQUFBalAsU0FBQTBELElBQUE5QixRQUFBLE9BQ0FxTixFQUFBZCxTQUFBLFVBQ0FjLEVBQUFkLFNBQUEsV0FDQWMsRUFBQTVNLGFBQUEsUUFBQSxNQUNBb00sRUFBQUMsT0FBQU8sR0FDQUEsRUFBQXpOLEdBQUEsUUFBQSxTQUFBb04sR0FDQXhNLEVBQUEySixTQUNBLElBQUErQyxFQUFBRixFQUFBL00sS0FDQWlOLEVBQUFDLGlCQUNBRCxFQUFBRSxvQkFFQSxJQUFBRSxFQUFBLElBQUFsUCxTQUFBMEQsSUFBQTlCLFFBQUEsT0FDQXNOLEVBQUFmLFNBQUEsVUFDQWUsRUFBQWYsU0FBQSxlQUNBZSxFQUFBN00sYUFBQSxRQUFBLFFBQ0FvTSxFQUFBQyxPQUFBUSxHQUNBQSxFQUFBMU4sR0FBQSxRQUFBLFNBQUFvTixHQUNBLElBQUFySCxFQUFBbkYsRUFBQU4sYUFBQSxNQUNBbEQsWUFBQXVRLG1CQUFBNUgsR0FDQSxJQUFBdUgsRUFBQUYsRUFBQS9NLEtBQ0FpTixFQUFBQyxpQkFDQUQsRUFBQUUsc0JBR0EsQ0FDQWxULElBQUEsMkJBQ0FPLE1BQUEsV0FHQSxJQUZBLElBQUFpUyxFQUFBdE0sRUFBQTZCLGtCQUFBekQsU0FBQXdHLEtBQUEseUJBRUF0TCxFQUFBLEVBQUFBLEVBQUFnVCxFQUFBQyxRQUFBalQsSUFDQWdULEVBQUFFLFFBQUFsVCxHQUFBeVEsV0FHQSxDQUNBalEsSUFBQSw2QkFDQU8sTUFBQSxTQUFBK0YsR0FDQSxJQUFBNUYsRUFBQTRGLEVBQUFOLGFBQUEsY0FDQThLLEVBQUF4SyxFQUFBc0ssV0FDQUUsRUFBQUEsRUFBQXJJLFFBQUEsV0FBQSxLQUVBc0ksUUFBQSxLQUFBLEdBQ0FyUSxHQUNBNEYsRUFBQVosR0FBQSxRQUFBLFNBQUFvTixHQUNBOU8sUUFBQUMsSUFBQXhELE1BQ0F5RixFQUFBNkIsa0JBQUF1QixlQUFBMEgsY0FBQXZRLE1BQ0F5RixFQUFBQyxnQkFBQTFGLEtBQUEyRixnQkFDQSxJQUFBNE0sRUFBQUYsRUFBQS9NLEtBQ0FpTixFQUFBQyxpQkFDQUQsRUFBQUUsc0JBS0EsQ0FDQWxULElBQUEsMEJBQ0FPLE1BQUEsV0FDQXlELFFBQUFDLElBQUEsa0RBSUFpQyxFQTNWQSxHQ1JBLFNBQUFqSCxnQkFBQUMsRUFBQUMsR0FBQSxLQUFBRCxhQUFBQyxHQUFBLE1BQUEsSUFBQUMsVUFBQSxxQ0FFQSxTQUFBQyxrQkFBQUMsRUFBQUMsR0FBQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQUQsRUFBQUUsT0FBQUQsSUFBQSxDQUFBLElBQUFFLEVBQUFILEVBQUFDLEdBQUFFLEVBQUFDLFdBQUFELEVBQUFDLGFBQUEsRUFBQUQsRUFBQUUsY0FBQSxFQUFBLFVBQUFGLElBQUFBLEVBQUFHLFVBQUEsR0FBQUMsT0FBQUMsZUFBQVQsRUFBQUksRUFBQU0sSUFBQU4sSUFFQSxTQUFBTyxhQUFBZCxFQUFBZSxFQUFBQyxHQUFBLE9BQUFELEdBQUFiLGtCQUFBRixFQUFBaUIsVUFBQUYsR0FBQUMsR0FBQWQsa0JBQUFGLEVBQUFnQixHQUFBaEIsRUFFQSxTQUFBa0IsZ0JBQUFDLEVBQUFOLEVBQUFPLEdBQUEsT0FBQVAsS0FBQU0sRUFBQVIsT0FBQUMsZUFBQU8sRUFBQU4sRUFBQSxDQUFBTyxNQUFBQSxFQUFBWixZQUFBLEVBQUFDLGNBQUEsRUFBQUMsVUFBQSxJQUFBUyxFQUFBTixHQUFBTyxFQUFBRCxFRGdXQUQsZ0JBQUE2RixnQkFBQSx1QkFBQSxNQUVBN0YsZ0JBQUE2RixnQkFBQSx3QkFBQSxNQUVBN0YsZ0JBQUE2RixnQkFBQSxnQkFBQSxNQUVBN0YsZ0JBQUE2RixnQkFBQSxXQUFBLE1DcFdBLElBQUFvTixrQkFBQSxXQUNBLFNBQUFBLElBQ0FyVSxnQkFBQXdCLEtBQUE2UyxHQXdFQSxPQXJFQXJULGFBQUFxVCxFQUFBLEtBQUEsQ0FBQSxDQUNBdFQsSUFBQSxvQkFDQU8sTUFBQSxXQUNBLE9BQUFFLEtBQUE4UyxrQkFFQSxDQUNBdlQsSUFBQSxvQkFDQU8sTUFBQSxTQUFBaUgsR0FDQSxJQUFBOEMsY0FBQWtKLGNBQUFoTSxHQUFBLENBQ0EvRyxLQUFBZ1Qsb0JBQUFDLFNBQUFsTSxHQUNBbU0sV0FBQUMsU0FBQSxVQUFBblQsS0FBQWdULHFCQUNBLElBQUFJLEVBQUEsQ0FDQUMsS0FBQXJULEtBQUFnVCxvQkFBQU0sV0FBQSxHQUNBQyxHQUFBdlQsS0FBQWdULG9CQUFBTSxXQUFBLElBR0F0VCxLQUFBZ1Qsb0JBQUFRLGdCQUFBSixFQUFBQyxLQUFBRCxFQUFBRyxJQUtBdlQsS0FBQWdULG9CQUFBUyxTQUFBQyxTQUFBLFNBQUFDLE1BQ0EsSUFBQWxNLEVBQUFoQyxnQkFBQXlELGtCQUNBMEssRUFBQSxHQUVBbk0sSUFDQW1NLEVBQUFuTSxFQUFBMEIsWUFBQWdJLE1BQUEsS0FBQSxJQUdBLElBQUEwQyxFQUFBN1QsS0FBQWdULG9CQUFBYyxnQkFBQUYsR0FDQUMsRUFBQUUsV0FFQUYsRUFBQVIsUUFBQVEsRUFBQU4sTUFDQXZULEtBQUFnVCxvQkFBQVMsU0FBQU8sYUFBQUgsRUFBQVIsT0FBQVEsRUFBQU4sU0FJQSxDQUNBaFUsSUFBQSxvQkFDQU8sTUFBQSxXQUNBLE9BQUFFLEtBQUFnVCxvQkFBQWlCLGFBRUEsQ0FDQTFVLElBQUEsMkJBQ0FPLE1BQUEsV0FXQUUsS0FBQThTLGdCQUFBSSxXQUFBZ0IsYUFBQXJRLFNBQUFDLGVBQUEsc0JBQUEsQ0FDQXFRLEtBWEEsQ0FDQTFJLEtBQUEsWUFDQTJJLFlBQUEsQ0FBQSxDQUNBQyxRQUFBLHdDQUNBRixLQUFBLE1BQ0EsQ0FDQUUsUUFBQSx5Q0FDQUYsS0FBQSxjQUtBRyxrQkFBQSxFQUNBQyxNQUFBLFVBQ0FDLFlBQUEsRUFDQUMsUUFBQSxDQUFBLHlCQUFBLHlCQUNBQyxhQUFBLEVBQ0FDLGNBQUEsSUFHQTNVLEtBQUE4UyxnQkFBQThCLFFBQUEsT0FBQUMsaUJBQUFDLGdCQUFBLFFBSUFqQyxFQTFFQSxHQ1JBLFNBQUFyVSxnQkFBQUMsRUFBQUMsR0FBQSxLQUFBRCxhQUFBQyxHQUFBLE1BQUEsSUFBQUMsVUFBQSxxQ0FFQSxTQUFBQyxrQkFBQUMsRUFBQUMsR0FBQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQUQsRUFBQUUsT0FBQUQsSUFBQSxDQUFBLElBQUFFLEVBQUFILEVBQUFDLEdBQUFFLEVBQUFDLFdBQUFELEVBQUFDLGFBQUEsRUFBQUQsRUFBQUUsY0FBQSxFQUFBLFVBQUFGLElBQUFBLEVBQUFHLFVBQUEsR0FBQUMsT0FBQUMsZUFBQVQsRUFBQUksRUFBQU0sSUFBQU4sSUFFQSxTQUFBTyxhQUFBZCxFQUFBZSxFQUFBQyxHQUFBLE9BQUFELEdBQUFiLGtCQUFBRixFQUFBaUIsVUFBQUYsR0FBQUMsR0FBQWQsa0JBQUFGLEVBQUFnQixHQUFBaEIsRUFFQSxTQUFBa0IsZ0JBQUFDLEVBQUFOLEVBQUFPLEdBQUEsT0FBQVAsS0FBQU0sRUFBQVIsT0FBQUMsZUFBQU8sRUFBQU4sRUFBQSxDQUFBTyxNQUFBQSxFQUFBWixZQUFBLEVBQUFDLGNBQUEsRUFBQUMsVUFBQSxJQUFBUyxFQUFBTixHQUFBTyxFQUFBRCxFRCtFQUQsZ0JBQUFpVCxrQkFBQSxrQkFBQSxNQzdFQSxJQUFBa0MsZ0JBQUEsV0FDQSxTQUFBQSxJQUNBdlcsZ0JBQUF3QixLQUFBK1UsR0F3REEsT0FyREF2VixhQUFBdVYsRUFBQSxLQUFBLENBQUEsQ0FDQXhWLElBQUEsc0JBQ0FPLE1BQUEsV0FDQSxNQUFBLHNSQUVBLENBQ0FQLElBQUEsa0JBQ0FPLE1BQUEsV0FDQSxPQUFBRSxLQUFBZ1YsZ0JBRUEsQ0FDQXpWLElBQUEsZ0JBQ0FPLE1BQUEsU0FBQW1WLEdBQ0FqVixLQUFBa1Ysa0JBQUFqQyxTQUFBZ0MsS0FFQSxDQUNBMVYsSUFBQSxnQkFDQU8sTUFBQSxXQUNBLE9BQUFFLEtBQUFrVixrQkFBQWpCLGFBRUEsQ0FDQTFVLElBQUEseUJBQ0FPLE1BQUEsU0FBQW9MLEdBbUJBLEdBbEJBbEwsS0FBQWdWLGNBQUE5QixXQUFBZ0IsYUFBQXJSLEVBQUEscUJBQUEsR0FBQSxDQUNBc1IsS0FBQSxzQkFDQU8sYUFBQSxFQUNBQyxjQUFBLEVBQ0FRLFVBQUEsQ0FDQUMsU0FBQSxTQUFBQyxHQUNBQSxFQUFBQyxTQUFBRCxFQUFBL0IsZUFHQWtCLFlBQUEsRUFDQWUsYUFBQSxFQUNBQyxlQUFBLEVBQ0FqQixNQUFBLFVBQ0FFLFFBQUEsQ0FBQSx5QkFBQSwyQkFHQXpVLEtBQUFnVixjQUFBSixRQUFBLE9BQUFDLGlCQUFBQyxnQkFBQSxJQUVBLE9BQUE1SixFQUFBLENBQ0FsTCxLQUFBeVYsY0FBQXpWLEtBQUEwVix1QkFDQXhDLFdBQUFDLFNBQUEsVUFBQW5ULEtBQUFrVixtQkFDQSxJQUFBOUIsRUFBQSxDQUNBQyxLQUFBclQsS0FBQWtWLGtCQUFBNUIsV0FBQSxHQUNBQyxHQUFBdlQsS0FBQWtWLGtCQUFBNUIsV0FBQSxJQUVBdFQsS0FBQWtWLGtCQUFBMUIsZ0JBQUFKLEVBQUFDLEtBQUFELEVBQUFHLFNBS0F3QixFQTFEQSxHQTZEQW5WLGdCQUFBbVYsZ0JBQUEsZ0JBQUEiLCJmaWxlIjoiSFRNTERlc2lnblV0aWxpdHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDS0VkaXRvclBsdWdpblV0aWxpdHkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENLRWRpdG9yUGx1Z2luVXRpbGl0eSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBudWxsLCBbe1xuICAgIGtleTogXCJBZGRQbHVnaW5zU2VydmVyQ29uZmlnXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEFkZFBsdWdpbnNTZXJ2ZXJDb25maWcoc2luZ2xlTmFtZSwgdG9vbGJhckxvY2F0aW9uLCB0ZXh0LCBjbGllbnRSZXNvbHZlLCBzZXJ2ZXJSZXNvbHZlLCBjbGllbnRSZXNvbHZlSnMsIGRpYWxvZ1dpZHRoLCBkaWFsb2dIZWlnaHQsIGlzSkJ1aWxkNERDRGF0YSwgY29udHJvbENhdGVnb3J5LCBzZXJ2ZXJEeW5hbWljQmluZCwgc2hvd1JlbW92ZUJ1dHRvbiwgc2hvd0luRWRpdG9yVG9vbGJhciwgZW5hYmxlQ2hpbGRDb250cm9scykge1xuICAgICAgdGhpcy5QbHVnaW5zU2VydmVyQ29uZmlnW3NpbmdsZU5hbWVdID0ge1xuICAgICAgICBTaW5nbGVOYW1lOiBzaW5nbGVOYW1lLFxuICAgICAgICBUb29sYmFyTG9jYXRpb246IHRvb2xiYXJMb2NhdGlvbixcbiAgICAgICAgVG9vbGJhckxhYmVsOiB0ZXh0LFxuICAgICAgICBDbGllbnRSZXNvbHZlOiBjbGllbnRSZXNvbHZlLFxuICAgICAgICBTZXJ2ZXJSZXNvbHZlOiBzZXJ2ZXJSZXNvbHZlLFxuICAgICAgICBDbGllbnRSZXNvbHZlSnM6IGNsaWVudFJlc29sdmVKcyxcbiAgICAgICAgRGlhbG9nV2lkdGg6IGRpYWxvZ1dpZHRoLFxuICAgICAgICBEaWFsb2dIZWlnaHQ6IGRpYWxvZ0hlaWdodCxcbiAgICAgICAgSXNKQnVpbGQ0RENEYXRhOiBpc0pCdWlsZDREQ0RhdGEsXG4gICAgICAgIENvbnRyb2xDYXRlZ29yeTogY29udHJvbENhdGVnb3J5LFxuICAgICAgICBTZXJ2ZXJEeW5hbWljQmluZDogc2VydmVyRHluYW1pY0JpbmQsXG4gICAgICAgIFNob3dSZW1vdmVCdXR0b246IHNob3dSZW1vdmVCdXR0b24sXG4gICAgICAgIFNob3dJbkVkaXRvclRvb2xiYXI6IHNob3dJbkVkaXRvclRvb2xiYXIsXG4gICAgICAgIEVuYWJsZUNoaWxkQ29udHJvbHM6IGVuYWJsZUNoaWxkQ29udHJvbHNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9Vc2VTZXJ2ZXJDb25maWdDb3ZlckVtcHR5UGx1Z2luUHJvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfVXNlU2VydmVyQ29uZmlnQ292ZXJFbXB0eVBsdWdpblByb3Aob2JqKSB7XG4gICAgICB2YXIgY292ZXJPYmogPSB0aGlzLlBsdWdpbnNTZXJ2ZXJDb25maWdbb2JqLlNpbmdsZU5hbWVdO1xuXG4gICAgICBpZiAoY292ZXJPYmopIHtcbiAgICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcbiAgICAgICAgICBpZiAodHlwZW9mIG9ialtwcm9wXSAhPSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGlmIChvYmpbcHJvcF0gPT0gXCJcIiB8fCBvYmpbcHJvcF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICBpZiAoY292ZXJPYmpbcHJvcF0pIHtcbiAgICAgICAgICAgICAgICBvYmpbcHJvcF0gPSBjb3Zlck9ialtwcm9wXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRHZW5lcmFsUGx1Z2luSW5zdGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0R2VuZXJhbFBsdWdpbkluc3RhbmNlKHBsdWdpblNpbmdsZU5hbWUsIGV4Q29uZmlnKSB7XG4gICAgICB2YXIgZGVmYXVsdFNldHRpbmcgPSB7XG4gICAgICAgIFNpbmdsZU5hbWU6IHBsdWdpblNpbmdsZU5hbWUsXG4gICAgICAgIERpYWxvZ05hbWU6ICcnLFxuICAgICAgICBEaWFsb2dXaWR0aDogbnVsbCxcbiAgICAgICAgRGlhbG9nSGVpZ2h0OiBudWxsLFxuICAgICAgICBEaWFsb2dQYWdlVXJsOiBCYXNlVXRpbGl0eS5BcHBlbmRUaW1lU3RhbXBVcmwoJ0RpYWxvZy5odG1sJyksXG4gICAgICAgIERpYWxvZ1RpdGxlOiBcIkRJVlwiLFxuICAgICAgICBUb29sYmFyQ29tbWFuZDogJycsXG4gICAgICAgIFRvb2xiYXJJY29uOiAnSWNvbi5wbmcnLFxuICAgICAgICBUb29sYmFyTGFiZWw6IFwiXCIsXG4gICAgICAgIFRvb2xiYXJMb2NhdGlvbjogJycsXG4gICAgICAgIElGcmFtZVdpbmRvdzogbnVsbCxcbiAgICAgICAgSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWU6IFwiSW5zZXJ0XCIsXG4gICAgICAgIERlc2lnbk1vZGFsSW5wdXRDc3M6IFwiXCIsXG4gICAgICAgIENsaWVudFJlc29sdmU6IFwiXCIsXG4gICAgICAgIFNlcnZlclJlc29sdmU6IFwiXCIsXG4gICAgICAgIElzSkJ1aWxkNERDRGF0YTogXCJcIixcbiAgICAgICAgQ29udHJvbENhdGVnb3J5OiBcIlwiLFxuICAgICAgICBTZXJ2ZXJEeW5hbWljQmluZDogXCJcIixcbiAgICAgICAgU2hvd1JlbW92ZUJ1dHRvbjogXCJcIixcbiAgICAgICAgU2hvd0luRWRpdG9yVG9vbGJhcjogXCJcIixcbiAgICAgICAgRW5hYmxlQ2hpbGRDb250cm9sczogXCJcIlxuICAgICAgfTtcbiAgICAgIGRlZmF1bHRTZXR0aW5nID0gJC5leHRlbmQodHJ1ZSwge30sIGRlZmF1bHRTZXR0aW5nLCBleENvbmZpZyk7XG4gICAgICBkZWZhdWx0U2V0dGluZyA9IENLRWRpdG9yUGx1Z2luVXRpbGl0eS5fVXNlU2VydmVyQ29uZmlnQ292ZXJFbXB0eVBsdWdpblByb3AoZGVmYXVsdFNldHRpbmcpO1xuXG4gICAgICBpZiAoZGVmYXVsdFNldHRpbmcgIT0gbnVsbCkge1xuICAgICAgICBkZWZhdWx0U2V0dGluZy5EaWFsb2dOYW1lID0gZGVmYXVsdFNldHRpbmcuU2luZ2xlTmFtZTtcbiAgICAgICAgZGVmYXVsdFNldHRpbmcuVG9vbGJhckNvbW1hbmQgPSBcIkpCdWlsZDREQy5Gb3JtRGVzaWduLlBsdWdpbnMuXCIgKyBkZWZhdWx0U2V0dGluZy5TaW5nbGVOYW1lO1xuICAgICAgICBkZWZhdWx0U2V0dGluZy5EaWFsb2dTZXR0aW5nVGl0bGUgPSBkZWZhdWx0U2V0dGluZy5Ub29sYmFyTGFiZWwgKyBcIldlYuaOp+S7tlwiO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIFNldHRpbmc6IGRlZmF1bHRTZXR0aW5nXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0RW5hYmxlQ2hpbGRDb250cm9sc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRFbmFibGVDaGlsZENvbnRyb2xzKHNpbmdsZU5hbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLlBsdWdpbnNbc2luZ2xlTmFtZV0uU2V0dGluZy5FbmFibGVDaGlsZENvbnRyb2xzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRQbHVnaW5zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldFBsdWdpbnMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5QbHVnaW5zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJSZWdHZW5lcmFsUGx1Z2luVG9FZGl0b3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gUmVnR2VuZXJhbFBsdWdpblRvRWRpdG9yKGNrRWRpdG9yLCBwYXRoLCBwbHVnaW5TZXR0aW5nLCBva0Z1bmMpIHtcbiAgICAgIGNvbnNvbGUubG9nKHBsdWdpblNldHRpbmcpO1xuICAgICAgQ0tFRElUT1IuZGlhbG9nLmFkZElmcmFtZShwbHVnaW5TZXR0aW5nLkRpYWxvZ05hbWUsIHBsdWdpblNldHRpbmcuRGlhbG9nU2V0dGluZ1RpdGxlLCBwYXRoICsgcGx1Z2luU2V0dGluZy5EaWFsb2dQYWdlVXJsLCBwbHVnaW5TZXR0aW5nLkRpYWxvZ1dpZHRoLCBwbHVnaW5TZXR0aW5nLkRpYWxvZ0hlaWdodCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaWZyYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fLmZyYW1lSWQpO1xuICAgICAgICBwbHVnaW5TZXR0aW5nLklGcmFtZVdpbmRvdyA9IGlmcmFtZTtcbiAgICAgICAgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LlNldEVsZW1Qcm9wc0luRWRpdERpYWxvZyhwbHVnaW5TZXR0aW5nLklGcmFtZVdpbmRvdywgcGx1Z2luU2V0dGluZy5JRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSk7XG4gICAgICB9LCB7XG4gICAgICAgIG9uT2s6IGZ1bmN0aW9uIG9uT2soKSB7XG4gICAgICAgICAgdmFyIHByb3BzID0gcGx1Z2luU2V0dGluZy5JRnJhbWVXaW5kb3cuY29udGVudFdpbmRvdy5EaWFsb2dBcHAuZ2V0Q29udHJvbFByb3BzKCk7XG5cbiAgICAgICAgICBpZiAocHJvcHMuc3VjY2VzcyA9PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG9rRnVuYyhja0VkaXRvciwgcGx1Z2luU2V0dGluZywgcHJvcHMsIHBsdWdpblNldHRpbmcuSUZyYW1lV2luZG93LmNvbnRlbnRXaW5kb3cpO1xuICAgICAgICAgIHBsdWdpblNldHRpbmcuSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWUgPSBDS0VkaXRvclBsdWdpblV0aWxpdHkuRGlhbG9nRXhlY3V0ZUluc2VydEFjdGlvbk5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2FuY2VsOiBmdW5jdGlvbiBvbkNhbmNlbCgpIHtcbiAgICAgICAgICBwbHVnaW5TZXR0aW5nLklGcmFtZUV4ZWN1dGVBY3Rpb25OYW1lID0gQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LkRpYWxvZ0V4ZWN1dGVJbnNlcnRBY3Rpb25OYW1lO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGNrRWRpdG9yLmFkZENvbW1hbmQocGx1Z2luU2V0dGluZy5Ub29sYmFyQ29tbWFuZCwgbmV3IENLRURJVE9SLmRpYWxvZ0NvbW1hbmQocGx1Z2luU2V0dGluZy5EaWFsb2dOYW1lKSk7XG5cbiAgICAgIGlmIChwbHVnaW5TZXR0aW5nLlNob3dJbkVkaXRvclRvb2xiYXIgPT0gXCJ0cnVlXCIpIHtcbiAgICAgICAgY2tFZGl0b3IudWkuYWRkQnV0dG9uKHBsdWdpblNldHRpbmcuU2luZ2xlTmFtZSwge1xuICAgICAgICAgIGxhYmVsOiBwbHVnaW5TZXR0aW5nLlRvb2xiYXJMYWJlbCxcbiAgICAgICAgICBpY29uOiBwYXRoICsgcGx1Z2luU2V0dGluZy5Ub29sYmFySWNvbixcbiAgICAgICAgICBjb21tYW5kOiBwbHVnaW5TZXR0aW5nLlRvb2xiYXJDb21tYW5kLFxuICAgICAgICAgIHRvb2xiYXI6IHBsdWdpblNldHRpbmcuVG9vbGJhckxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBja0VkaXRvci5vbignZG91YmxlY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5Lk9uQ0tXeXNpd3lnRWxlbURCQ2xpY2tFdmVudChldmVudCwgcGx1Z2luU2V0dGluZyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiT25DS1d5c2l3eWdFbGVtREJDbGlja0V2ZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIE9uQ0tXeXNpd3lnRWxlbURCQ2xpY2tFdmVudChldmVudCwgY29udHJvbFNldHRpbmcpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZXZlbnQuZGF0YS5lbGVtZW50O1xuXG4gICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJydW50aW1lX2F1dG9fcmVtb3ZlXCIpID09IFwidHJ1ZVwiKSB7XG4gICAgICAgIGVsZW1lbnQgPSBldmVudC5kYXRhLmVsZW1lbnQuZ2V0UGFyZW50KCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBzaW5nbGVOYW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzaW5nbGVOYW1lXCIpO1xuXG4gICAgICBpZiAoc2luZ2xlTmFtZSA9PSBjb250cm9sU2V0dGluZy5TaW5nbGVOYW1lKSB7XG4gICAgICAgIENLRWRpdG9yVXRpbGl0eS5TZXRTZWxlY3RlZEVsZW0oZWxlbWVudC5nZXRPdXRlckh0bWwoKSk7XG4gICAgICAgIGV2ZW50LmRhdGEuZGlhbG9nID0gY29udHJvbFNldHRpbmcuRGlhbG9nTmFtZTtcbiAgICAgICAgY29udHJvbFNldHRpbmcuSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWUgPSBDS0VkaXRvclBsdWdpblV0aWxpdHkuRGlhbG9nRXhlY3V0ZUVkaXRBY3Rpb25OYW1lO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJTZXJpYWxpemVQcm9wc1RvRWxlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXJpYWxpemVQcm9wc1RvRWxlbShlbGVtLCBwcm9wcywgY29udHJvbFNldHRpbmcpIHtcbiAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwiamJ1aWxkNGRjX2N1c3RvbVwiLCBcInRydWVcIik7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcInNpbmdsZW5hbWVcIiwgY29udHJvbFNldHRpbmcuU2luZ2xlTmFtZSk7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcImlzX2pidWlsZDRkY19kYXRhXCIsIGNvbnRyb2xTZXR0aW5nLklzSkJ1aWxkNERDRGF0YSk7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcImNvbnRyb2xfY2F0ZWdvcnlcIiwgY29udHJvbFNldHRpbmcuQ29udHJvbENhdGVnb3J5KTtcbiAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwic2hvd19yZW1vdmVfYnV0dG9uXCIsIGNvbnRyb2xTZXR0aW5nLlNob3dSZW1vdmVCdXR0b24pO1xuXG4gICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJiYXNlSW5mb1wiXSkge1xuICAgICAgICAgIGlmIChrZXkgPT0gXCJyZWFkb25seVwiKSB7XG4gICAgICAgICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldID09IFwicmVhZG9ubHlcIikge1xuICAgICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW0ucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT0gXCJkaXNhYmxlZFwiKSB7XG4gICAgICAgICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldID09IFwiZGlzYWJsZWRcIikge1xuICAgICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW0ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBwcm9wc1tcImJhc2VJbmZvXCJdW2tleV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHNbXCJiaW5kVG9GaWVsZFwiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJiaW5kVG9GaWVsZFwiXSkge1xuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBwcm9wc1tcImJpbmRUb0ZpZWxkXCJdW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1tcImRlZmF1bHRWYWx1ZVwiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJkZWZhdWx0VmFsdWVcIl0pIHtcbiAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJkZWZhdWx0VmFsdWVcIl1ba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzW1widmFsaWRhdGVSdWxlc1wiXSkge1xuICAgICAgICBpZiAocHJvcHNbXCJ2YWxpZGF0ZVJ1bGVzXCJdLnJ1bGVzKSB7XG4gICAgICAgICAgaWYgKHByb3BzW1widmFsaWRhdGVSdWxlc1wiXS5ydWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShcInZhbGlkYXRlcnVsZXNcIiwgZW5jb2RlVVJJQ29tcG9uZW50KEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyhwcm9wc1tcInZhbGlkYXRlUnVsZXNcIl0pKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5rKh5pyJ6aqM6K+B6KeE5YiZXCIpO1xuICAgICAgICAgICAgZWxlbS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWxpZGF0ZXJ1bGVzXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHNbXCJub3JtYWxQcm9wc1wiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJub3JtYWxQcm9wc1wiXSkge1xuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBwcm9wc1tcIm5vcm1hbFByb3BzXCJdW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1tcImJpbmRUb1NlYXJjaEZpZWxkXCJdKSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wc1tcImJpbmRUb1NlYXJjaEZpZWxkXCJdKSB7XG4gICAgICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoa2V5LnRvTG9jYWxlTG93ZXJDYXNlKCksIHByb3BzW1wiYmluZFRvU2VhcmNoRmllbGRcIl1ba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzW1wibm9ybWFsRGF0YVNvdXJjZVwiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJub3JtYWxEYXRhU291cmNlXCJdKSB7XG4gICAgICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoa2V5LnRvTG9jYWxlTG93ZXJDYXNlKCksIHByb3BzW1wibm9ybWFsRGF0YVNvdXJjZVwiXVtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHNbXCJtdWx0aWxldmVsUHJvcHNcIl0pIHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHByb3BzW1wibXVsdGlsZXZlbFByb3BzXCJdKSB7XG4gICAgICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoa2V5LnRvTG9jYWxlTG93ZXJDYXNlKCksIHByb3BzW1wibXVsdGlsZXZlbFByb3BzXCJdW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBlbGVtO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJEZXNlcmlhbGl6ZVByb3BzRnJvbUVsZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gRGVzZXJpYWxpemVQcm9wc0Zyb21FbGVtKGVsZW0pIHtcbiAgICAgIHZhciBwcm9wcyA9IHt9O1xuICAgICAgdmFyICRlbGVtID0gJChlbGVtKTtcblxuICAgICAgZnVuY3Rpb24gYXR0clRvUHJvcChwcm9wcywgZ3JvdXBOYW1lKSB7XG4gICAgICAgIHZhciBncm91cFByb3AgPSB7fTtcblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5EZWZhdWx0UHJvcHNbZ3JvdXBOYW1lXSkge1xuICAgICAgICAgIGlmICgkZWxlbS5hdHRyKGtleSkpIHtcbiAgICAgICAgICAgIGdyb3VwUHJvcFtrZXldID0gJGVsZW0uYXR0cihrZXkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBncm91cFByb3Bba2V5XSA9IHRoaXMuRGVmYXVsdFByb3BzW2dyb3VwTmFtZV1ba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcm9wc1tncm91cE5hbWVdID0gZ3JvdXBQcm9wO1xuICAgICAgICByZXR1cm4gcHJvcHM7XG4gICAgICB9XG5cbiAgICAgIHByb3BzID0gYXR0clRvUHJvcC5jYWxsKHRoaXMsIHByb3BzLCBcImJhc2VJbmZvXCIpO1xuICAgICAgcHJvcHMgPSBhdHRyVG9Qcm9wLmNhbGwodGhpcywgcHJvcHMsIFwiYmluZFRvRmllbGRcIik7XG4gICAgICBwcm9wcyA9IGF0dHJUb1Byb3AuY2FsbCh0aGlzLCBwcm9wcywgXCJkZWZhdWx0VmFsdWVcIik7XG4gICAgICBwcm9wcyA9IGF0dHJUb1Byb3AuY2FsbCh0aGlzLCBwcm9wcywgXCJiaW5kVG9TZWFyY2hGaWVsZFwiKTtcbiAgICAgIHByb3BzID0gYXR0clRvUHJvcC5jYWxsKHRoaXMsIHByb3BzLCBcIm5vcm1hbERhdGFTb3VyY2VcIik7XG4gICAgICBwcm9wcyA9IGF0dHJUb1Byb3AuY2FsbCh0aGlzLCBwcm9wcywgXCJtdWx0aWxldmVsUHJvcHNcIik7XG5cbiAgICAgIGlmICgkZWxlbS5hdHRyKFwidmFsaWRhdGVSdWxlc1wiKSkge1xuICAgICAgICBwcm9wcy52YWxpZGF0ZVJ1bGVzID0gSnNvblV0aWxpdHkuU3RyaW5nVG9Kc29uKGRlY29kZVVSSUNvbXBvbmVudCgkZWxlbS5hdHRyKFwidmFsaWRhdGVSdWxlc1wiKSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkJ1aWxkR2VuZXJhbEVsZW1Ub0NLV3lzaXd5Z1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBCdWlsZEdlbmVyYWxFbGVtVG9DS1d5c2l3eWcoaHRtbCwgY29udHJvbFNldHRpbmcsIGNvbnRyb2xQcm9wcywgX2lmcmFtZSkge1xuICAgICAgaWYgKHRoaXMuVmFsaWRhdGVCdWlsZEVuYWJsZShodG1sLCBjb250cm9sU2V0dGluZywgY29udHJvbFByb3BzLCBfaWZyYW1lKSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIklGcmFtZUV4ZWN1dGVBY3Rpb25OYW1lOlwiICsgY29udHJvbFNldHRpbmcuSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWUpO1xuXG4gICAgICAgIGlmIChjb250cm9sU2V0dGluZy5JRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSA9PSBDS0VkaXRvclBsdWdpblV0aWxpdHkuRGlhbG9nRXhlY3V0ZUluc2VydEFjdGlvbk5hbWUpIHtcbiAgICAgICAgICB2YXIgZWxlbSA9IENLRURJVE9SLmRvbS5lbGVtZW50LmNyZWF0ZUZyb21IdG1sKGh0bWwpO1xuICAgICAgICAgIHRoaXMuU2VyaWFsaXplUHJvcHNUb0VsZW0oZWxlbSwgY29udHJvbFByb3BzLCBjb250cm9sU2V0dGluZyk7XG4gICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmluc2VydEVsZW1lbnQoZWxlbSk7XG4gICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LlNpbmdsZUVsZW1CaW5kRGVmYXVsdEV2ZW50KGVsZW0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBzZWxlY3RlZEVsZW0gPSBDS0VkaXRvclV0aWxpdHkuR2V0U2VsZWN0ZWRDS0VkaXRvckVsZW0oKTtcblxuICAgICAgICAgIGlmIChzZWxlY3RlZEVsZW0pIHtcbiAgICAgICAgICAgIHZhciByZUZyZXNoRWxlbSA9IG5ldyBDS0VESVRPUi5kb20uZWxlbWVudC5jcmVhdGVGcm9tSHRtbChzZWxlY3RlZEVsZW0uZ2V0T3V0ZXJIdG1sKCkpO1xuXG4gICAgICAgICAgICBpZiAocmVGcmVzaEVsZW0uZ2V0QXR0cmlidXRlKFwiY29udHJvbF9jYXRlZ29yeVwiKSA9PSBcIklucHV0Q29udHJvbFwiKSB7XG4gICAgICAgICAgICAgIHZhciBuZXdUZXh0ID0gJChodG1sKS5odG1sKCk7XG4gICAgICAgICAgICAgIHJlRnJlc2hFbGVtLnNldEh0bWwobmV3VGV4dCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHNlbGVjdGVkRWxlbS5jb3B5QXR0cmlidXRlcyhyZUZyZXNoRWxlbSwge1xuICAgICAgICAgICAgICB0ZW1wOiBcInRlbXBcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLlNlcmlhbGl6ZVByb3BzVG9FbGVtKHJlRnJlc2hFbGVtLCBjb250cm9sUHJvcHMsIGNvbnRyb2xTZXR0aW5nKTtcbiAgICAgICAgICAgIHJlRnJlc2hFbGVtLnJlcGxhY2Uoc2VsZWN0ZWRFbGVtKTtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5TaW5nbGVFbGVtQmluZERlZmF1bHRFdmVudChyZUZyZXNoRWxlbSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlZhbGlkYXRlQnVpbGRFbmFibGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gVmFsaWRhdGVCdWlsZEVuYWJsZShodG1sLCBjb250cm9sU2V0dGluZywgY29udHJvbFByb3BzLCBfaWZyYW1lKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiVmFsaWRhdGVTZXJpYWxpemVDb250cm9sRGlhbG9nQ29tcGxldGVkRW5hYmxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFZhbGlkYXRlU2VyaWFsaXplQ29udHJvbERpYWxvZ0NvbXBsZXRlZEVuYWJsZShyZXR1cm5SZXN1bHQpIHtcbiAgICAgIGlmIChyZXR1cm5SZXN1bHQuYmFzZUluZm8uc2VyaWFsaXplID09IFwidHJ1ZVwiICYmIHJldHVyblJlc3VsdC5iaW5kVG9GaWVsZC5maWVsZE5hbWUgPT0gXCJcIikge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLluo/liJfljJbnmoTmjqfku7blv4Xpobvnu5HlrprlrZfmrrUhXCIsIG51bGwpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXR1cm5SZXN1bHQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldEVsZW1Qcm9wc0luRWRpdERpYWxvZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRFbGVtUHJvcHNJbkVkaXREaWFsb2coaWZyYW1lT2JqLCBhY3Rpb25OYW1lKSB7XG4gICAgICB2YXIgc2VsID0gQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmdldFNlbGVjdGlvbigpLmdldFN0YXJ0RWxlbWVudCgpO1xuICAgICAgdmFyIHBhcmVudHMgPSBudWxsO1xuXG4gICAgICBpZiAoc2VsKSB7XG4gICAgICAgIHBhcmVudHMgPSBzZWwuZ2V0UGFyZW50cygpO1xuICAgICAgfVxuXG4gICAgICBpZnJhbWVPYmouY29udGVudFdpbmRvdy5EaWFsb2dBcHAucmVhZHkoYWN0aW9uTmFtZSwgc2VsLCBwYXJlbnRzKTtcblxuICAgICAgaWYgKGFjdGlvbk5hbWUgPT0gdGhpcy5EaWFsb2dFeGVjdXRlRWRpdEFjdGlvbk5hbWUpIHtcbiAgICAgICAgdmFyIGVsZW0gPSBDS0VkaXRvclV0aWxpdHkuR2V0U2VsZWN0ZWRFbGVtKCkub3V0ZXJIVE1MKCk7XG4gICAgICAgIHZhciBwcm9wcyA9IHRoaXMuRGVzZXJpYWxpemVQcm9wc0Zyb21FbGVtKGVsZW0pO1xuICAgICAgICBpZnJhbWVPYmouY29udGVudFdpbmRvdy5EaWFsb2dBcHAuc2V0Q29udHJvbFByb3BzKCQoZWxlbSksIHByb3BzKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0Q29udHJvbERlc2NUZXh0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldENvbnRyb2xEZXNjVGV4dChwbHVnaW5TZXR0aW5nLCBwcm9wcykge1xuICAgICAgY29uc29sZS5sb2cocHJvcHMpO1xuICAgICAgdmFyIHJlc3VsdCA9IFwi57G75Z6LOuOAkFwiICsgcGx1Z2luU2V0dGluZy5Ub29sYmFyTGFiZWwgKyBcIuOAkTxiciAvPue7keWumjrjgJBcIiArIHByb3BzLmJpbmRUb0ZpZWxkLnRhYmxlQ2FwdGlvbiArIFwiLVwiICsgcHJvcHMuYmluZFRvRmllbGQuZmllbGRDYXB0aW9uICsgXCLjgJFcIjtcblxuICAgICAgaWYgKHByb3BzLmRlZmF1bHRWYWx1ZSkge1xuICAgICAgICBpZiAocHJvcHMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KSB7XG4gICAgICAgICAgcmVzdWx0ICs9IFwiPGJyIC8+6buY6K6kOuOAkFwiICsgcHJvcHMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlICsgXCI6XCIgKyBwcm9wcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgKyBcIuOAkVwiO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wcy52YWxpZGF0ZVJ1bGVzKSB7XG4gICAgICAgIGlmIChwcm9wcy52YWxpZGF0ZVJ1bGVzLnJ1bGVzKSB7XG4gICAgICAgICAgaWYgKHByb3BzLnZhbGlkYXRlUnVsZXMucnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwiPGJyIC8+6aqM6K+BOuOAkFwiO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLnZhbGlkYXRlUnVsZXMucnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgcmVzdWx0ICs9IHByb3BzLnZhbGlkYXRlUnVsZXMucnVsZXNbaV0udmFsaWRhdGVUeXBlICsgXCI7XCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlc3VsdCA9IFN0cmluZ1V0aWxpdHkuUmVtb3ZlTGFzdENoYXIocmVzdWx0KTtcbiAgICAgICAgICAgIHJlc3VsdCArPSBcIuOAkVwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRTZWFyY2hDb250cm9sRGVzY1RleHRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0U2VhcmNoQ29udHJvbERlc2NUZXh0KHBsdWdpblNldHRpbmcsIHByb3BzKSB7XG4gICAgICByZXR1cm4gXCJbXCIgKyBwbHVnaW5TZXR0aW5nLlRvb2xiYXJMYWJlbCArIFwiXSDnu5Hlrpo6W1wiICsgcHJvcHMuYmluZFRvU2VhcmNoRmllbGQuY29sdW1uQ2FwdGlvbiArIFwiXShcIiArIHByb3BzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtbk9wZXJhdG9yICsgXCIpXCI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldEF1dG9SZW1vdmVUaXBMYWJlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRBdXRvUmVtb3ZlVGlwTGFiZWwodGlwTXNnKSB7XG4gICAgICBpZiAoIXRpcE1zZykge1xuICAgICAgICB0aXBNc2cgPSBcIuWPjOWHu+e8lui+keivpemDqOS7tlwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gJzxkaXYgcnVudGltZV9hdXRvX3JlbW92ZT1cInRydWVcIiBjbGFzcz1cInd5c2l3eWctYXV0by1yZW1vdmUtdGlwXCI+JyArIHRpcE1zZyArICc8L2Rpdj4nO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJUcnlHZXRMaXN0QnV0dG9uc0luUGx1Z2luUGFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBUcnlHZXRMaXN0QnV0dG9uc0luUGx1Z2luUGFnZSgpIHtcbiAgICAgIHZhciBidXR0b25zID0gW107XG4gICAgICB2YXIgaHRtbCA9IENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckhUTUxJblBsdWdpblBhZ2UoKTtcbiAgICAgIHZhciAkYnV0dG9ucyA9ICQoaHRtbCkuZmluZChcIltidXR0b25jYXB0aW9uXVwiKTtcbiAgICAgICRidXR0b25zLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYnV0dG9uQ2FwdGlvbiA9ICQodGhpcykuYXR0cihcImJ1dHRvbmNhcHRpb25cIik7XG4gICAgICAgIHZhciBidXR0b25JZCA9ICQodGhpcykuYXR0cihcImlkXCIpO1xuICAgICAgICBidXR0b25zLnB1c2goe1xuICAgICAgICAgIGJ1dHRvbkNhcHRpb246IGJ1dHRvbkNhcHRpb24sXG4gICAgICAgICAgYnV0dG9uSWQ6IGJ1dHRvbklkXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gYnV0dG9ucztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiVHJ5R2V0RGF0YVNldElkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFRyeUdldERhdGFTZXRJZChzZWwsIHBhcmVudHMpIHtcbiAgICAgIGlmIChzZWwpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IHBhcmVudHMubGVuZ3RoIC0gMTsgaS0tOyBpID49IDApIHtcbiAgICAgICAgICBpZiAocGFyZW50c1tpXS5nZXRBdHRyaWJ1dGUoXCJkYXRhc2V0aWRcIikgIT0gbnVsbCAmJiBwYXJlbnRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGFzZXRpZFwiKSAhPSBcIlwiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50c1tpXS5nZXRBdHRyaWJ1dGUoXCJkYXRhc2V0aWRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5kYXRhU2V0SWQpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5wYXJlbnQubGlzdERlc2lnbi5saXN0UmVzb3VyY2VFbnRpdHkubGlzdERhdGFzZXRJZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlRlbXBsYXRlQWRkRGVmUHJvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBUZW1wbGF0ZUFkZERlZlByb3AoJHRlbXBsYXRlRWxlbSwgaWQsIHNob3dfcmVtb3ZlX2J1dHRvbiwgc2luZ2xlTmFtZSwgc3RhdHVzKSB7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJjbGFzc25hbWVcIiwgXCJcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJjb250cm9sX2NhdGVnb3J5XCIsIFwiQ29udGFpbmVyQ29udHJvbFwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImN1c3RkaXNhYmxlZFwiLCBcIm5vZGlzYWJsZWRcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJjdXN0cmVhZG9ubHlcIiwgXCJub3JlYWRvbmx5XCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwiZGVzY1wiLCBcIlwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImlkXCIsIGlkKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImlzX2pidWlsZDRkY19kYXRhXCIsIFwiZmFsc2VcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJqYnVpbGQ0ZGNfY3VzdG9tXCIsIFwidHJ1ZVwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcIm5hbWVcIiwgaWQpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwicGxhY2Vob2xkZXJcIiwgXCJcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJzZXJpYWxpemVcIiwgXCJmYWxzZVwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcInNob3dfcmVtb3ZlX2J1dHRvblwiLCBzaG93X3JlbW92ZV9idXR0b24pO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwic2luZ2xlbmFtZVwiLCBzaW5nbGVOYW1lKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcInN0eWxlXCIsIFwiXCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwic3RhdHVzXCIsIHN0YXR1cyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENLRWRpdG9yUGx1Z2luVXRpbGl0eTtcbn0oKTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yUGx1Z2luVXRpbGl0eSwgXCJQbHVnaW5zU2VydmVyQ29uZmlnXCIsIHt9KTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yUGx1Z2luVXRpbGl0eSwgXCJQbHVnaW5zXCIsIHt9KTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yUGx1Z2luVXRpbGl0eSwgXCJEZWZhdWx0UHJvcHNcIiwge1xuICBiaW5kVG9GaWVsZDoge1xuICAgIHJlbGF0aW9uSWQ6IFwiXCIsXG4gICAgdGFibGVJZDogXCJcIixcbiAgICB0YWJsZU5hbWU6IFwiXCIsXG4gICAgdGFibGVDYXB0aW9uOiBcIlwiLFxuICAgIGZpZWxkTmFtZTogXCJcIixcbiAgICBmaWVsZENhcHRpb246IFwiXCIsXG4gICAgZmllbGREYXRhVHlwZTogXCJcIixcbiAgICBmaWVsZExlbmd0aDogXCJcIlxuICB9LFxuICBkZWZhdWx0VmFsdWU6IHtcbiAgICBkZWZhdWx0VHlwZTogXCJcIixcbiAgICBkZWZhdWx0VmFsdWU6IFwiXCIsXG4gICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgfSxcbiAgdmFsaWRhdGVSdWxlczoge1xuICAgIG1zZzogXCJcIixcbiAgICBydWxlczogW11cbiAgfSxcbiAgYmFzZUluZm86IHtcbiAgICBpZDogXCJcIixcbiAgICBzZXJpYWxpemU6IFwidHJ1ZVwiLFxuICAgIG5hbWU6IFwiXCIsXG4gICAgY2xhc3NOYW1lOiBcIlwiLFxuICAgIHBsYWNlaG9sZGVyOiBcIlwiLFxuICAgIGN1c3RSZWFkb25seTogXCJub3JlYWRvbmx5XCIsXG4gICAgY3VzdERpc2FibGVkOiBcIm5vZGlzYWJsZWRcIixcbiAgICBzdHlsZTogXCJcIixcbiAgICBkZXNjOiBcIlwiLFxuICAgIHN0YXR1czogXCJlbmFibGVcIixcbiAgICBncm91cE5hbWU6IFwiXCJcbiAgfSxcbiAgYmluZFRvU2VhcmNoRmllbGQ6IHtcbiAgICBjb2x1bW5UaXRsZTogXCJcIixcbiAgICBjb2x1bW5UYWJsZU5hbWU6IFwiXCIsXG4gICAgY29sdW1uTmFtZTogXCJcIixcbiAgICBjb2x1bW5DYXB0aW9uOiBcIlwiLFxuICAgIGNvbHVtbkRhdGFUeXBlTmFtZTogXCJcIixcbiAgICBjb2x1bW5PcGVyYXRvcjogXCLljLnphY1cIlxuICB9LFxuICBub3JtYWxEYXRhU291cmNlOiB7XG4gICAgZGVmYXVsdElzTnVsbDogXCJ0cnVlXCIsXG4gICAgc3FsRGF0YVNvdXJjZTogXCJcIixcbiAgICBkaWN0aW9uYXJ5R3JvdXBEYXRhU291cmNlSWQ6IFwiXCIsXG4gICAgZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZVRleHQ6IFwiXCIsXG4gICAgcmVzdERhdGFTb3VyY2U6IFwiXCIsXG4gICAgaW50ZXJmYWNlRGF0YVNvdXJjZTogXCJcIixcbiAgICBzdGF0aWNEYXRhU291cmNlOiBcIlwiLFxuICAgIGRlZmF1bHRTZWxlY3RlZDogXCJcIixcbiAgICBsYXlvdXREaXJlY3Rpb246IFwidmVydGljYWxcIixcbiAgICByb3dOdW06IFwiMFwiLFxuICAgIGRpc3BsYXlWYWx1ZUluVGV4dDogXCJmYWxzZVwiXG4gIH0sXG4gIG11bHRpbGV2ZWxQcm9wczoge1xuICAgIGxldmVsMkJpbmRDb250cm9sSWQ6IFwiXCJcbiAgfVxufSk7XG5cbl9kZWZpbmVQcm9wZXJ0eShDS0VkaXRvclBsdWdpblV0aWxpdHksIFwiRGlhbG9nRXhlY3V0ZUVkaXRBY3Rpb25OYW1lXCIsIFwiRWRpdFwiKTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yUGx1Z2luVXRpbGl0eSwgXCJEaWFsb2dFeGVjdXRlSW5zZXJ0QWN0aW9uTmFtZVwiLCBcIkluc2VydFwiKTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgQ0tFZGl0b3JVdGlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDS0VkaXRvclV0aWxpdHkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENLRWRpdG9yVXRpbGl0eSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ0tFZGl0b3JVdGlsaXR5LCBudWxsLCBbe1xuICAgIGtleTogXCJTZXRTZWxlY3RlZEVsZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU2V0U2VsZWN0ZWRFbGVtKGVsZW1IdG1sKSB7XG4gICAgICB0aGlzLl8kQ0tFZGl0b3JTZWxlY3RFbGVtID0gJChlbGVtSHRtbCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldFNlbGVjdGVkRWxlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRTZWxlY3RlZEVsZW0oKSB7XG4gICAgICBpZiAodGhpcy5fJENLRWRpdG9yU2VsZWN0RWxlbSkge1xuICAgICAgICBpZiAodGhpcy5fJENLRWRpdG9yU2VsZWN0RWxlbS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuXyRDS0VkaXRvclNlbGVjdEVsZW07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldFNlbGVjdGVkQ0tFZGl0b3JFbGVtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldFNlbGVjdGVkQ0tFZGl0b3JFbGVtKCkge1xuICAgICAgaWYgKHRoaXMuR2V0U2VsZWN0ZWRFbGVtKCkpIHtcbiAgICAgICAgdmFyIGlkID0gdGhpcy5HZXRTZWxlY3RlZEVsZW0oKS5hdHRyKFwiaWRcIik7XG4gICAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5HZXRDS0VkaXRvckluc3QoKS5kb2N1bWVudC5nZXRCeUlkKGlkKTtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJTZXRMYXN0U2VsZWN0ZWRUZW1wSFRNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRMYXN0U2VsZWN0ZWRUZW1wSFRNTChodG1sKSB7XG4gICAgICB0aGlzLl9MYXN0U2VsZWN0ZWRUZW1wSFRNTCA9IGh0bWw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldExhc3RTZWxlY3RlZFRlbXBIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldExhc3RTZWxlY3RlZFRlbXBIVE1MKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX0xhc3RTZWxlY3RlZFRlbXBIVE1MO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJUcnlHZXRJZEZyb21MYXN0U2VsZWN0ZWRUZW1wSFRNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBUcnlHZXRJZEZyb21MYXN0U2VsZWN0ZWRUZW1wSFRNTChuZXdIVE1MKSB7XG4gICAgICBpZiAoIXRoaXMuX0xhc3RTZWxlY3RlZFRlbXBIVE1MKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIG5hbWUgPSAkKG5ld0hUTUwpLmF0dHIoXCJuYW1lXCIpO1xuICAgICAgICB2YXIgbGFzdEh0bWxOYW1lID0gJCh0aGlzLkdldExhc3RTZWxlY3RlZFRlbXBIVE1MKCkpLmF0dHIoXCJuYW1lXCIpO1xuXG4gICAgICAgIGlmIChuYW1lID09IGxhc3RIdG1sTmFtZSkge1xuICAgICAgICAgIHJldHVybiAkKHRoaXMuR2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwoKSkuYXR0cihcImlkXCIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRDS0VkaXRvckluc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0Q0tFZGl0b3JJbnN0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX0NLRWRpdG9ySW5zdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0Q0tFZGl0b3JJbnN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNldENLRWRpdG9ySW5zdChpbnN0KSB7XG4gICAgICB0aGlzLl9DS0VkaXRvckluc3QgPSBpbnN0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRDS0VkaXRvckhUTUxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0Q0tFZGl0b3JIVE1MKCkge1xuICAgICAgdGhpcy5DbGVhckFMTEZvckRpdkVsZW1CdXR0b24oKTtcbiAgICAgIHRoaXMuQ2xlYXJBTExQbHVnaW5Jbm5lclBhbmVsKCk7XG4gICAgICByZXR1cm4gdGhpcy5HZXRDS0VkaXRvckluc3QoKS5nZXREYXRhKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldENLRWRpdG9ySFRNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRDS0VkaXRvckhUTUwoaHRtbCkge1xuICAgICAgdGhpcy5HZXRDS0VkaXRvckluc3QoKS5zZXREYXRhKGh0bWwpO1xuICAgICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBDS0VkaXRvclV0aWxpdHkuQUxMRWxlbUJpbmREZWZhdWx0RXZlbnQoKTtcbiAgICAgIH0sIDUwMCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldENLRWRpdG9ySFRNTEluUGx1Z2luUGFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRDS0VkaXRvckhUTUxJblBsdWdpblBhZ2UoKSB7XG4gICAgICByZXR1cm4gd2luZG93LnBhcmVudC5DS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JIVE1MKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkluaXRpYWxpemVDS0VkaXRvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBJbml0aWFsaXplQ0tFZGl0b3IodGV4dEFyZWFFbGVtSWQsIHBsdWdpbnNDb25maWcsIGxvYWRDb21wbGV0ZWRGdW5jLCBja2VkaXRvckNvbmZpZ0Z1bGxQYXRoLCBwbHVnaW5CYXNlUGF0aCwgdGhlbWVWbykge1xuICAgICAgdmFyIGV4dHJhUGx1Z2lucyA9IG5ldyBBcnJheSgpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsdWdpbnNDb25maWcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNpbmdsZVBsdWdpbkNvbmZpZyA9IHBsdWdpbnNDb25maWdbaV07XG4gICAgICAgIHZhciBzaW5nbGVOYW1lID0gc2luZ2xlUGx1Z2luQ29uZmlnLnNpbmdsZU5hbWU7XG4gICAgICAgIHZhciB0b29sYmFyTG9jYXRpb24gPSBzaW5nbGVQbHVnaW5Db25maWcudG9vbGJhckxvY2F0aW9uO1xuICAgICAgICB2YXIgdGV4dCA9IHNpbmdsZVBsdWdpbkNvbmZpZy50ZXh0O1xuICAgICAgICB2YXIgc2VydmVyUmVzb2x2ZSA9IHNpbmdsZVBsdWdpbkNvbmZpZy5zZXJ2ZXJSZXNvbHZlO1xuICAgICAgICB2YXIgY2xpZW50UmVzb2x2ZSA9IHNpbmdsZVBsdWdpbkNvbmZpZy5jbGllbnRSZXNvbHZlO1xuICAgICAgICB2YXIgY2xpZW50UmVzb2x2ZUpzID0gc2luZ2xlUGx1Z2luQ29uZmlnLmNsaWVudFJlc29sdmVKcztcbiAgICAgICAgdmFyIGRpYWxvZ1dpZHRoID0gc2luZ2xlUGx1Z2luQ29uZmlnLmRpYWxvZ1dpZHRoO1xuICAgICAgICB2YXIgZGlhbG9nSGVpZ2h0ID0gc2luZ2xlUGx1Z2luQ29uZmlnLmRpYWxvZ0hlaWdodDtcbiAgICAgICAgdmFyIGlzSkJ1aWxkNERDRGF0YSA9IHNpbmdsZVBsdWdpbkNvbmZpZy5pc0pCdWlsZDREQ0RhdGE7XG4gICAgICAgIHZhciBjb250cm9sQ2F0ZWdvcnkgPSBzaW5nbGVQbHVnaW5Db25maWcuY29udHJvbENhdGVnb3J5O1xuICAgICAgICB2YXIgc2VydmVyRHluYW1pY0JpbmQgPSBzaW5nbGVQbHVnaW5Db25maWcuc2VydmVyRHluYW1pY0JpbmQ7XG4gICAgICAgIHZhciBzaG93UmVtb3ZlQnV0dG9uID0gc2luZ2xlUGx1Z2luQ29uZmlnLnNob3dSZW1vdmVCdXR0b247XG4gICAgICAgIHZhciBzaG93SW5FZGl0b3JUb29sYmFyID0gc2luZ2xlUGx1Z2luQ29uZmlnLnNob3dJbkVkaXRvclRvb2xiYXI7XG4gICAgICAgIHZhciBlbmFibGVDaGlsZENvbnRyb2xzID0gc2luZ2xlUGx1Z2luQ29uZmlnLmVuYWJsZUNoaWxkQ29udHJvbHM7XG4gICAgICAgIHZhciBwbHVnaW5GaWxlTmFtZSA9IHNpbmdsZU5hbWUgKyBcIlBsdWdpbi5qc1wiO1xuICAgICAgICB2YXIgcGx1Z2luRm9sZGVyTmFtZSA9IHBsdWdpbkJhc2VQYXRoICsgc2luZ2xlTmFtZSArIFwiL1wiO1xuICAgICAgICBDS0VESVRPUi5wbHVnaW5zLmFkZEV4dGVybmFsKHNpbmdsZU5hbWUsIHBsdWdpbkZvbGRlck5hbWUsIHBsdWdpbkZpbGVOYW1lKTtcbiAgICAgICAgZXh0cmFQbHVnaW5zLnB1c2goc2luZ2xlTmFtZSk7XG4gICAgICAgIENLRWRpdG9yUGx1Z2luVXRpbGl0eS5BZGRQbHVnaW5zU2VydmVyQ29uZmlnKHNpbmdsZU5hbWUsIHRvb2xiYXJMb2NhdGlvbiwgdGV4dCwgY2xpZW50UmVzb2x2ZSwgc2VydmVyUmVzb2x2ZSwgY2xpZW50UmVzb2x2ZUpzLCBkaWFsb2dXaWR0aCwgZGlhbG9nSGVpZ2h0LCBpc0pCdWlsZDREQ0RhdGEsIGNvbnRyb2xDYXRlZ29yeSwgc2VydmVyRHluYW1pY0JpbmQsIHNob3dSZW1vdmVCdXR0b24sIHNob3dJbkVkaXRvclRvb2xiYXIsIGVuYWJsZUNoaWxkQ29udHJvbHMpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLlNldFRoZW1lVm8odGhlbWVWbyk7XG4gICAgICB2YXIgZWRpdG9yQ29uZmlnVXJsID0gQmFzZVV0aWxpdHkuQXBwZW5kVGltZVN0YW1wVXJsKGNrZWRpdG9yQ29uZmlnRnVsbFBhdGgpO1xuICAgICAgQ0tFRElUT1IucmVwbGFjZSh0ZXh0QXJlYUVsZW1JZCwge1xuICAgICAgICBjdXN0b21Db25maWc6IGVkaXRvckNvbmZpZ1VybCxcbiAgICAgICAgZXh0cmFQbHVnaW5zOiBleHRyYVBsdWdpbnMuam9pbihcIixcIilcbiAgICAgIH0pO1xuICAgICAgQ0tFRElUT1IuaW5zdGFuY2VzLmh0bWxfZGVzaWduLm9uKFwiYmVmb3JlUGFzdGVcIiwgZnVuY3Rpb24gKGV2ZW50KSB7fSk7XG4gICAgICBDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24ub24oXCJwYXN0ZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyIHNvdXJjZUhUTUwgPSBldmVudC5kYXRhLmRhdGFWYWx1ZTtcbiAgICAgICAgY29uc29sZS5sb2coc291cmNlSFRNTCk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgJHNvdXJjZUhUTUwgPSAkKHNvdXJjZUhUTUwpO1xuICAgICAgICAgICRzb3VyY2VIVE1MLmZpbmQoXCIucGx1Z2luSW5uZXJQYW5lbFdyYXBcIikucmVtb3ZlKCk7XG5cbiAgICAgICAgICBpZiAoJHNvdXJjZUhUTUwuZmluZChcImRpdlwiKS5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgdmFyICRpbm5lckVsZW0gPSAkKCRzb3VyY2VIVE1MLmZpbmQoXCJkaXZcIikuZXEoMCkpO1xuICAgICAgICAgICAgdmFyIGlkID0gQ0tFZGl0b3JVdGlsaXR5LlRyeUdldElkRnJvbUxhc3RTZWxlY3RlZFRlbXBIVE1MKCRpbm5lckVsZW0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coaWQpO1xuXG4gICAgICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgICAgdmFyIG9sZEVsZW0gPSBDS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JJbnN0KCkuZG9jdW1lbnQuZ2V0QnlJZChpZCk7XG5cbiAgICAgICAgICAgICAgaWYgKG9sZEVsZW0pIHtcbiAgICAgICAgICAgICAgICBpZCA9IFwiY3RfY29weV9cIiArIFN0cmluZ1V0aWxpdHkuVGltZXN0YW1wKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlkID0gXCJjdF9jb3B5X1wiICsgU3RyaW5nVXRpbGl0eS5UaW1lc3RhbXAoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZXZlbnQuZGF0YS5kYXRhVmFsdWUgPSAkaW5uZXJFbGVtLmF0dHIoXCJpZFwiLCBpZCkub3V0ZXJIVE1MKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCLpu4/otLTlvILluLgs6L+Y5Y6fSFRNTFwiKTtcbiAgICAgICAgICBldmVudC5kYXRhLmRhdGFWYWx1ZSA9IHNvdXJjZUhUTUw7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgQ0tFRElUT1IuaW5zdGFuY2VzLmh0bWxfZGVzaWduLm9uKFwiYWZ0ZXJQYXN0ZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHt9KTtcbiAgICAgIENLRURJVE9SLmluc3RhbmNlcy5odG1sX2Rlc2lnbi5vbignaW5zZXJ0RWxlbWVudCcsIGZ1bmN0aW9uIChldmVudCkge30pO1xuICAgICAgQ0tFRElUT1IuaW5zdGFuY2VzLmh0bWxfZGVzaWduLm9uKCdpbnNlcnRIdG1sJywgZnVuY3Rpb24gKGV2ZW50KSB7fSk7XG4gICAgICBDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24ub24oJ3NlbGVjdGlvbkNoYW5nZScsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgZWxlbSA9IGV2ZW50LmRhdGEuc2VsZWN0aW9uLmdldFNlbGVjdGVkRWxlbWVudCgpO1xuICAgICAgICB2YXIgbGFzdEN1c3RTaW5nbGVOYW1lID0gXCJcIjtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGV2ZW50LmRhdGEucGF0aC5lbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBlbGVtID0gZXZlbnQuZGF0YS5wYXRoLmVsZW1lbnRzW2ldO1xuICAgICAgICAgIHZhciBzaW5nbGVOYW1lID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJzaW5nbGVuYW1lXCIpO1xuICAgICAgICAgIHZhciBlbGVtSW5uZXJIVE1MID0gZWxlbS5nZXRIdG1sKCk7XG5cbiAgICAgICAgICBpZiAoc2luZ2xlTmFtZSkge1xuICAgICAgICAgICAgbGFzdEN1c3RTaW5nbGVOYW1lID0gc2luZ2xlTmFtZTtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5TZXRTZWxlY3RlZEVsZW0oZWxlbS5nZXRPdXRlckh0bWwoKSk7XG4gICAgICAgICAgICBDS0VkaXRvclV0aWxpdHkuU2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwoZWxlbS5nZXRPdXRlckh0bWwoKSk7XG4gICAgICAgICAgICB2YXIgaW5uZXJIdG1sID0gZWxlbS5nZXRIdG1sKCk7XG4gICAgICAgICAgICBpbm5lckh0bWwgPSBpbm5lckh0bWwucmVwbGFjZSgvPGJyIFxcLz4vZywgXCJcIikucmVwbGFjZSgvPGJyPi9nLCBcIlwiKTtcblxuICAgICAgICAgICAgaWYgKGlubmVySHRtbC5pbmRleE9mKFwiPFwiKSA8IDApIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZWxlbSk7XG4gICAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckluc3QoKS5nZXRTZWxlY3Rpb24oKS5zZWxlY3RFbGVtZW50KGVsZW0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobGFzdEN1c3RTaW5nbGVOYW1lICE9IFwiV0ZEQ1RfVGVtcGxhdGVcIikge1xuICAgICAgICAgICAgICBDS0VkaXRvclV0aWxpdHkuQ3JlYXRlUGx1Z2luSW5uZXJQYW5lbChlbGVtKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGVsZW0uZ2V0TmFtZSgpID09IFwidGRcIiAmJiBlbGVtSW5uZXJIVE1MID09IFwiJm5ic3A7XCIpIHtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckluc3QoKS5nZXRTZWxlY3Rpb24oKS5zZWxlY3RFbGVtZW50KGVsZW0uZ2V0Q2hpbGQoMCkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxhc3RDdXN0U2luZ2xlTmFtZSkge1xuICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5EaXNwbGF5UGx1Z2luQ29udHJvbHMoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LkdldEVuYWJsZUNoaWxkQ29udHJvbHMobGFzdEN1c3RTaW5nbGVOYW1lKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5TZXRDS0VkaXRvckluc3QoQ0tFRElUT1IuaW5zdGFuY2VzLmh0bWxfZGVzaWduKTtcbiAgICAgIENLRURJVE9SLm9uKCdpbnN0YW5jZVJlYWR5JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBsb2FkQ29tcGxldGVkRnVuYyA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICBsb2FkQ29tcGxldGVkRnVuYygpO1xuICAgICAgICAgIDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkRpc3BsYXlQbHVnaW5Db250cm9sc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBEaXNwbGF5UGx1Z2luQ29udHJvbHMoZW5hYmxlQ2hpbGRDb250cm9scykge1xuICAgICAgJChcIi5ja2VfYnV0dG9uXCIpLnNob3coKTtcblxuICAgICAgaWYgKGVuYWJsZUNoaWxkQ29udHJvbHMgPT0gXCIqXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGx1Z2lucyA9IENLRWRpdG9yUGx1Z2luVXRpbGl0eS5HZXRQbHVnaW5zKCk7XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBwbHVnaW5zKSB7XG4gICAgICAgIHZhciBwbHVnaW4gPSBwbHVnaW5zW2tleV07XG4gICAgICAgIHZhciBzaW5nbGVOYW1lID0gcGx1Z2luLlNldHRpbmcuU2luZ2xlTmFtZTtcbiAgICAgICAgJChcIi5ja2VfYnV0dG9uX19cIiArIFN0cmluZ1V0aWxpdHkuVG9Mb3dlckNhc2Uoc2luZ2xlTmFtZSkpLmhpZGUoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGVuYWJsZVBsdWdpbnMgPSBlbmFibGVDaGlsZENvbnRyb2xzLnNwbGl0KFwiO1wiKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmFibGVQbHVnaW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBzaW5nbGVOYW1lID0gZW5hYmxlUGx1Z2luc1tpXTtcbiAgICAgICAgJChcIi5ja2VfYnV0dG9uX19cIiArIFN0cmluZ1V0aWxpdHkuVG9Mb3dlckNhc2Uoc2luZ2xlTmFtZSkpLnNob3coKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0VGhlbWVWb1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRUaGVtZVZvKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX1RoZW1lVm87XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldFRoZW1lVm9cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU2V0VGhlbWVWbyhfdGhlbWVWbykge1xuICAgICAgdGhpcy5fVGhlbWVWbyA9IF90aGVtZVZvO1xuICAgICAgdGhpcy5SZXNldFJvb3RFbGVtVGhlbWUoX3RoZW1lVm8pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJSZXNldFJvb3RFbGVtVGhlbWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gUmVzZXRSb290RWxlbVRoZW1lKF90aGVtZVZvKSB7XG4gICAgICBpZiAodGhpcy5HZXRDS0VkaXRvckluc3QoKSkge1xuICAgICAgICB2YXIgc291cmNlSFRNTCA9IHRoaXMuR2V0Q0tFZGl0b3JIVE1MKCk7XG5cbiAgICAgICAgaWYgKHNvdXJjZUhUTUwgIT0gbnVsbCAmJiBzb3VyY2VIVE1MICE9IFwiXCIpIHtcbiAgICAgICAgICB2YXIgcm9vdEVsZW0gPSAkKHNvdXJjZUhUTUwpO1xuXG4gICAgICAgICAgaWYgKHJvb3RFbGVtLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHZhciBjbGFzc0xpc3QgPSByb290RWxlbS5hdHRyKCdjbGFzcycpLnNwbGl0KC9cXHMrLyk7XG4gICAgICAgICAgICB2YXIgY2xhc3NhcnkgPSBbXTtcbiAgICAgICAgICAgICQuZWFjaChjbGFzc0xpc3QsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuICAgICAgICAgICAgICBpZiAoaXRlbS5pbmRleE9mKCdodG1sLWRlc2lnbi10aGVtZS0nKSA+PSAwKSB7XG4gICAgICAgICAgICAgICAgcm9vdEVsZW0ucmVtb3ZlQ2xhc3MoaXRlbSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcm9vdEVsZW0uYWRkQ2xhc3MoX3RoZW1lVm8ucm9vdEVsZW1DbGFzcyk7XG4gICAgICAgICAgICB0aGlzLlNldENLRWRpdG9ySFRNTChyb290RWxlbS5vdXRlckhUTUwoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkNsZWFyQUxMRm9yRGl2RWxlbUJ1dHRvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBDbGVhckFMTEZvckRpdkVsZW1CdXR0b24oKSB7XG4gICAgICB2YXIgb2xkRGVsQnV0dG9ucyA9IENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckluc3QoKS5kb2N1bWVudC5maW5kKFwiLmRlbC1idXR0b25cIik7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2xkRGVsQnV0dG9ucy5jb3VudCgpOyBpKyspIHtcbiAgICAgICAgb2xkRGVsQnV0dG9ucy5nZXRJdGVtKGkpLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJDcmVhdGVQbHVnaW5Jbm5lclBhbmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIENyZWF0ZVBsdWdpbklubmVyUGFuZWwoZWxlbSkge1xuICAgICAgQ0tFZGl0b3JVdGlsaXR5LkNsZWFyQUxMUGx1Z2luSW5uZXJQYW5lbCgpO1xuICAgICAgdmFyIHBsdWdpbklubmVyUGFuZWwgPSBuZXcgQ0tFRElUT1IuZG9tLmVsZW1lbnQoJ2RpdicpO1xuICAgICAgcGx1Z2luSW5uZXJQYW5lbC5hZGRDbGFzcyhcInBsdWdpbklubmVyUGFuZWxXcmFwXCIpO1xuICAgICAgZWxlbS5hcHBlbmQocGx1Z2luSW5uZXJQYW5lbCk7XG4gICAgICB2YXIgc2VsZWN0QWxsQnV0dG9uID0gbmV3IENLRURJVE9SLmRvbS5lbGVtZW50KCdkaXYnKTtcbiAgICAgIHNlbGVjdEFsbEJ1dHRvbi5hZGRDbGFzcyhcImJ1dHRvblwiKTtcbiAgICAgIHNlbGVjdEFsbEJ1dHRvbi5hZGRDbGFzcyhcInNlbGVjdC1pbWdcIik7XG4gICAgICBzZWxlY3RBbGxCdXR0b24uc2V0QXR0cmlidXRlKCd0aXRsZScsICfpgInkuK0nKTtcbiAgICAgIHBsdWdpbklubmVyUGFuZWwuYXBwZW5kKHNlbGVjdEFsbEJ1dHRvbik7XG4gICAgICBzZWxlY3RBbGxCdXR0b24ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgIGFsZXJ0KFwi5pqC5LiN5pSv5oyBIVwiKTtcbiAgICAgICAgdmFyIGRvbUV2ZW50ID0gZXYuZGF0YTtcbiAgICAgICAgZG9tRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9KTtcbiAgICAgIHZhciBkZWxCdXR0b24gPSBuZXcgQ0tFRElUT1IuZG9tLmVsZW1lbnQoJ2RpdicpO1xuICAgICAgZGVsQnV0dG9uLmFkZENsYXNzKFwiYnV0dG9uXCIpO1xuICAgICAgZGVsQnV0dG9uLmFkZENsYXNzKFwiZGVsLWltZ1wiKTtcbiAgICAgIGRlbEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJ+WIoOmZpCcpO1xuICAgICAgcGx1Z2luSW5uZXJQYW5lbC5hcHBlbmQoZGVsQnV0dG9uKTtcbiAgICAgIGRlbEJ1dHRvbi5vbignY2xpY2snLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgZWxlbS5yZW1vdmUoKTtcbiAgICAgICAgdmFyIGRvbUV2ZW50ID0gZXYuZGF0YTtcbiAgICAgICAgZG9tRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9KTtcbiAgICAgIHZhciBjb3B5SWRCdXR0b24gPSBuZXcgQ0tFRElUT1IuZG9tLmVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29weUlkQnV0dG9uLmFkZENsYXNzKFwiYnV0dG9uXCIpO1xuICAgICAgY29weUlkQnV0dG9uLmFkZENsYXNzKFwiY29weS1pZC1pbWdcIik7XG4gICAgICBjb3B5SWRCdXR0b24uc2V0QXR0cmlidXRlKCd0aXRsZScsICflpI3liLZJRCcpO1xuICAgICAgcGx1Z2luSW5uZXJQYW5lbC5hcHBlbmQoY29weUlkQnV0dG9uKTtcbiAgICAgIGNvcHlJZEJ1dHRvbi5vbignY2xpY2snLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgdmFyIGlkID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgICAgQmFzZVV0aWxpdHkuQ29weVZhbHVlQ2xpcGJvYXJkKGlkKTtcbiAgICAgICAgdmFyIGRvbUV2ZW50ID0gZXYuZGF0YTtcbiAgICAgICAgZG9tRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiQ2xlYXJBTExQbHVnaW5Jbm5lclBhbmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIENsZWFyQUxMUGx1Z2luSW5uZXJQYW5lbCgpIHtcbiAgICAgIHZhciBvbGREZWxCdXR0b25zID0gQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmRvY3VtZW50LmZpbmQoXCIucGx1Z2luSW5uZXJQYW5lbFdyYXBcIik7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2xkRGVsQnV0dG9ucy5jb3VudCgpOyBpKyspIHtcbiAgICAgICAgb2xkRGVsQnV0dG9ucy5nZXRJdGVtKGkpLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJTaW5nbGVFbGVtQmluZERlZmF1bHRFdmVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTaW5nbGVFbGVtQmluZERlZmF1bHRFdmVudChlbGVtKSB7XG4gICAgICB2YXIgc2luZ2xlTmFtZSA9IGVsZW0uZ2V0QXR0cmlidXRlKFwic2luZ2xlbmFtZVwiKTtcbiAgICAgIHZhciBpbm5lckh0bWwgPSBlbGVtLmdldEh0bWwoKTtcbiAgICAgIGlubmVySHRtbCA9IGlubmVySHRtbC5yZXBsYWNlKC88YnIgXFwvPi9nLCBcIlwiKTtcblxuICAgICAgaWYgKGlubmVySHRtbC5pbmRleE9mKFwiPFwiKSA8IDApIHtcbiAgICAgICAgaWYgKHNpbmdsZU5hbWUpIHtcbiAgICAgICAgICBlbGVtLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcyk7XG4gICAgICAgICAgICBDS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JJbnN0KCkuZ2V0U2VsZWN0aW9uKCkuc2VsZWN0RWxlbWVudCh0aGlzKTtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5TZXRTZWxlY3RlZEVsZW0odGhpcy5nZXRPdXRlckh0bWwoKSk7XG4gICAgICAgICAgICB2YXIgZG9tRXZlbnQgPSBldi5kYXRhO1xuICAgICAgICAgICAgZG9tRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkFMTEVsZW1CaW5kRGVmYXVsdEV2ZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEFMTEVsZW1CaW5kRGVmYXVsdEV2ZW50KCkge1xuICAgICAgY29uc29sZS5sb2coXCLlj5bmtojkvb/nlKjngrnlh7vov5vooYzlhYPntKDpgInmi6nlkozliKDpmaTnmoTlip/og70s6L+B56e75Li6c2VsZWN0aW9uQ2hhbmdl5LqL5Lu26L+b6KGMIVwiKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ0tFZGl0b3JVdGlsaXR5O1xufSgpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JVdGlsaXR5LCBcIl8kQ0tFZGl0b3JTZWxlY3RFbGVtXCIsIG51bGwpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JVdGlsaXR5LCBcIl9MYXN0U2VsZWN0ZWRUZW1wSFRNTFwiLCBudWxsKTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yVXRpbGl0eSwgXCJfQ0tFZGl0b3JJbnN0XCIsIG51bGwpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JVdGlsaXR5LCBcIl9UaGVtZVZvXCIsIG51bGwpOyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBIVE1MRWRpdG9yVXRpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gSFRNTEVkaXRvclV0aWxpdHkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEhUTUxFZGl0b3JVdGlsaXR5KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhIVE1MRWRpdG9yVXRpbGl0eSwgbnVsbCwgW3tcbiAgICBrZXk6IFwiR2V0SFRNTEVkaXRvckluc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0SFRNTEVkaXRvckluc3QoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fSFRNTEVkaXRvckluc3Q7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldEhUTUxFZGl0b3JIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNldEhUTUxFZGl0b3JIVE1MKGh0bWwpIHtcbiAgICAgIGlmICghU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KGh0bWwpKSB7XG4gICAgICAgIHRoaXMuR2V0SFRNTEVkaXRvckluc3QoKS5zZXRWYWx1ZShodG1sKTtcbiAgICAgICAgQ29kZU1pcnJvci5jb21tYW5kc1tcInNlbGVjdEFsbFwiXSh0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkpO1xuICAgICAgICB2YXIgcmFuZ2UgPSB7XG4gICAgICAgICAgZnJvbTogdGhpcy5HZXRIVE1MRWRpdG9ySW5zdCgpLmdldEN1cnNvcih0cnVlKSxcbiAgICAgICAgICB0bzogdGhpcy5HZXRIVE1MRWRpdG9ySW5zdCgpLmdldEN1cnNvcihmYWxzZSlcbiAgICAgICAgfTtcbiAgICAgICAgO1xuICAgICAgICB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuYXV0b0Zvcm1hdFJhbmdlKHJhbmdlLmZyb20sIHJhbmdlLnRvKTtcbiAgICAgICAgdmFyIGExID0ge1xuICAgICAgICAgIGxpbmU6IDAsXG4gICAgICAgICAgY2g6IDJcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5HZXRIVE1MRWRpdG9ySW5zdCgpLmdldERvYygpLmVhY2hMaW5lKGZ1bmN0aW9uIChsaW5lKSB7fSk7XG4gICAgICAgIHZhciBzZWxlY3RlZEVsZW0gPSBDS0VkaXRvclV0aWxpdHkuR2V0U2VsZWN0ZWRFbGVtKCk7XG4gICAgICAgIHZhciBzZWFyY2hIVE1MID0gXCJcIjtcblxuICAgICAgICBpZiAoc2VsZWN0ZWRFbGVtKSB7XG4gICAgICAgICAgc2VhcmNoSFRNTCA9IHNlbGVjdGVkRWxlbS5vdXRlckhUTUwoKS5zcGxpdChcIj5cIilbMF07XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY3Vyc29yID0gdGhpcy5HZXRIVE1MRWRpdG9ySW5zdCgpLmdldFNlYXJjaEN1cnNvcihzZWFyY2hIVE1MKTtcbiAgICAgICAgY3Vyc29yLmZpbmROZXh0KCk7XG5cbiAgICAgICAgaWYgKGN1cnNvci5mcm9tKCkgJiYgY3Vyc29yLnRvKCkpIHtcbiAgICAgICAgICB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0RG9jKCkuc2V0U2VsZWN0aW9uKGN1cnNvci5mcm9tKCksIGN1cnNvci50bygpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRIdG1sRWRpdG9ySFRNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRIdG1sRWRpdG9ySFRNTCgpIHtcbiAgICAgIHJldHVybiB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0VmFsdWUoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiSW5pdGlhbGl6ZUhUTUxDb2RlRGVzaWduXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEluaXRpYWxpemVIVE1MQ29kZURlc2lnbigpIHtcbiAgICAgIHZhciBtaXhlZE1vZGUgPSB7XG4gICAgICAgIG5hbWU6IFwiaHRtbG1peGVkXCIsXG4gICAgICAgIHNjcmlwdFR5cGVzOiBbe1xuICAgICAgICAgIG1hdGNoZXM6IC9cXC94LWhhbmRsZWJhcnMtdGVtcGxhdGV8XFwveC1tdXN0YWNoZS9pLFxuICAgICAgICAgIG1vZGU6IG51bGxcbiAgICAgICAgfSwge1xuICAgICAgICAgIG1hdGNoZXM6IC8odGV4dHxhcHBsaWNhdGlvbilcXC8oeC0pP3ZiKGF8c2NyaXB0KS9pLFxuICAgICAgICAgIG1vZGU6IFwidmJzY3JpcHRcIlxuICAgICAgICB9XVxuICAgICAgfTtcbiAgICAgIHRoaXMuX0hUTUxFZGl0b3JJbnN0ID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJUZXh0QXJlYUhUTUxFZGl0b3JcIiksIHtcbiAgICAgICAgbW9kZTogbWl4ZWRNb2RlLFxuICAgICAgICBzZWxlY3Rpb25Qb2ludGVyOiB0cnVlLFxuICAgICAgICB0aGVtZTogXCJtb25va2FpXCIsXG4gICAgICAgIGZvbGRHdXR0ZXI6IHRydWUsXG4gICAgICAgIGd1dHRlcnM6IFtcIkNvZGVNaXJyb3ItbGluZW51bWJlcnNcIiwgXCJDb2RlTWlycm9yLWZvbGRndXR0ZXJcIl0sXG4gICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLFxuICAgICAgICBsaW5lV3JhcHBpbmc6IHRydWVcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLl9IVE1MRWRpdG9ySW5zdC5zZXRTaXplKFwiMTAwJVwiLCBQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VIZWlnaHQoKSAtIDg1KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSFRNTEVkaXRvclV0aWxpdHk7XG59KCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShIVE1MRWRpdG9yVXRpbGl0eSwgXCJfSFRNTEVkaXRvckluc3RcIiwgbnVsbCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIEpzRWRpdG9yVXRpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gSnNFZGl0b3JVdGlsaXR5KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBKc0VkaXRvclV0aWxpdHkpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEpzRWRpdG9yVXRpbGl0eSwgbnVsbCwgW3tcbiAgICBrZXk6IFwiX0dldE5ld0Zvcm1Kc1N0cmluZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfR2V0TmV3Rm9ybUpzU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIFwiPHNjcmlwdD52YXIgRm9ybVBhZ2VPYmplY3RJbnN0YW5jZT17XCIgKyBcImRhdGE6e1wiICsgXCJ1c2VyRW50aXR5Ont9LFwiICsgXCJvcmdhbkVudGl0eTp7fSxcIiArIFwiZm9ybVBPOltdLFwiICsgXCJmb3JtUmVjb3JkQ29tcGxleFBPOltdLFwiICsgXCJ3ZWJGb3JtUlRQYXJhczp7fSxcIiArIFwiY29uZmlnOltdXCIgKyBcIn0sXCIgKyBcInBhZ2VSZWFkeTpmdW5jdGlvbigpe30sXCIgKyBcImJpbmRSZWNvcmREYXRhUmVhZHk6ZnVuY3Rpb24oKXt9LFwiICsgXCJ2YWxpZGF0ZUV2ZXJ5RnJvbUNvbnRyb2w6ZnVuY3Rpb24odmFsaWRhdGVSZXN1bHQpe3JldHVybiB2YWxpZGF0ZVJlc3VsdDt9XCIgKyBcIn08L3NjcmlwdD5cIjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0SnNFZGl0b3JJbnN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldEpzRWRpdG9ySW5zdCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9Kc0VkaXRvckluc3Q7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldEpzRWRpdG9ySnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU2V0SnNFZGl0b3JKcyhqcykge1xuICAgICAgdGhpcy5HZXRKc0VkaXRvckluc3QoKS5zZXRWYWx1ZShqcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldEpzRWRpdG9ySnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0SnNFZGl0b3JKcygpIHtcbiAgICAgIHJldHVybiB0aGlzLkdldEpzRWRpdG9ySW5zdCgpLmdldFZhbHVlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkluaXRpYWxpemVKc0NvZGVEZXNpZ25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gSW5pdGlhbGl6ZUpzQ29kZURlc2lnbihzdGF0dXMpIHtcbiAgICAgIHRoaXMuX0pzRWRpdG9ySW5zdCA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKCQoXCIjVGV4dEFyZWFKc0VkaXRvclwiKVswXSwge1xuICAgICAgICBtb2RlOiBcImFwcGxpY2F0aW9uL2xkK2pzb25cIixcbiAgICAgICAgbGluZU51bWJlcnM6IHRydWUsXG4gICAgICAgIGxpbmVXcmFwcGluZzogdHJ1ZSxcbiAgICAgICAgZXh0cmFLZXlzOiB7XG4gICAgICAgICAgXCJDdHJsLVFcIjogZnVuY3Rpb24gQ3RybFEoY20pIHtcbiAgICAgICAgICAgIGNtLmZvbGRDb2RlKGNtLmdldEN1cnNvcigpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGZvbGRHdXR0ZXI6IHRydWUsXG4gICAgICAgIHNtYXJ0SW5kZW50OiB0cnVlLFxuICAgICAgICBtYXRjaEJyYWNrZXRzOiB0cnVlLFxuICAgICAgICB0aGVtZTogXCJtb25va2FpXCIsXG4gICAgICAgIGd1dHRlcnM6IFtcIkNvZGVNaXJyb3ItbGluZW51bWJlcnNcIiwgXCJDb2RlTWlycm9yLWZvbGRndXR0ZXJcIl1cbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLl9Kc0VkaXRvckluc3Quc2V0U2l6ZShcIjEwMCVcIiwgUGFnZVN0eWxlVXRpbGl0eS5HZXRQYWdlSGVpZ2h0KCkgLSA4NSk7XG5cbiAgICAgIGlmIChzdGF0dXMgPT0gXCJhZGRcIikge1xuICAgICAgICB0aGlzLlNldEpzRWRpdG9ySnModGhpcy5fR2V0TmV3Rm9ybUpzU3RyaW5nKCkpO1xuICAgICAgICBDb2RlTWlycm9yLmNvbW1hbmRzW1wic2VsZWN0QWxsXCJdKHRoaXMuR2V0SnNFZGl0b3JJbnN0KCkpO1xuICAgICAgICB2YXIgcmFuZ2UgPSB7XG4gICAgICAgICAgZnJvbTogdGhpcy5HZXRKc0VkaXRvckluc3QoKS5nZXRDdXJzb3IodHJ1ZSksXG4gICAgICAgICAgdG86IHRoaXMuR2V0SnNFZGl0b3JJbnN0KCkuZ2V0Q3Vyc29yKGZhbHNlKVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLkdldEpzRWRpdG9ySW5zdCgpLmF1dG9Gb3JtYXRSYW5nZShyYW5nZS5mcm9tLCByYW5nZS50byk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEpzRWRpdG9yVXRpbGl0eTtcbn0oKTtcblxuX2RlZmluZVByb3BlcnR5KEpzRWRpdG9yVXRpbGl0eSwgXCJfSnNFZGl0b3JJbnN0XCIsIG51bGwpOyJdfQ==
