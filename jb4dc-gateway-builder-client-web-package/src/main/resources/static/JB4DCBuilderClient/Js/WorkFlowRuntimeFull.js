"use strict";var userTaskReceiverDialogOuterVue,ActionsRuntimeObject={CreateALLActionButton:function(e,t,n,i){if(i.jb4dcActions&&i.jb4dcActions.jb4dcActionList)for(var l,o=0;o<i.jb4dcActions.jb4dcActionList.length;o++){var a=i.jb4dcActions.jb4dcActionList[o];if(a.juelRunResultPO.booleanResult){if("send"==a.actionType)l=Object.create(SendAction).Instance(e,t,n,i,a);else if("recall"==a.actionType){l=Object.create(RecallAction).Instance(e,t,n,i,a)}else if("deleteInstance"==a.actionType){l=Object.create(DeleteInstanceAction).Instance(e,t,n,i,a)}$("#flowWorkActionButtonWrapOuter").append(l.elem)}}},GetActionObj:function(){return{actionAutoSend:"false",actionCCReceiveObjects:"[]",actionCallApis:"[]",actionCallComplete:"true",actionCallJsMethod:null,actionCaption:"草稿",actionCode:"action_516009775",actionConfirm:"false",actionDisplayConditionEditText:null,actionDisplayConditionEditValue:null,actionExecuteVariables:"[]",actionHTMLClass:null,actionHTMLId:null,actionMainReceiveObjects:"[]",actionRunSqls:"[]",actionSendMessageId:null,actionSendSignalId:null,actionShowOpinionDialog:"false",actionType:"send",actionUpdateFields:"[]",actionValidate:"无",actionOpinionBindToElemId:null,actionOpinionBindToField:null,juelRunResultPO:{booleanResult:!0,message:"",stringResult:"",success:!0},actionDisable:"enable",actionRemark:""}}},FlowRuntimePageObject={_webFormRTParas:null,_formRuntimeInst:null,FORM_RUNTIME_CATEGORY_FLOW:"IsDependenceFlow",_flowInstanceRuntimePO:null,_isCreatedModelerView:!1,buildPageReadyInnerParas:function(e,t,n,i){return{recordId:t,formId:n.jb4dcFormId,currentNodeKey:n.currentNodeKey,currentNodeName:n.currentNodeName,modelId:n.modelIntegratedEntity.modelId,modelReKey:n.modelIntegratedEntity.modelReKey,currentTaskId:n.executionTaskEntity?n.executionTaskEntity.extaskId:"",flowInstanceRuntimePOCacheKey:i,flowInstanceRuntimePO:n,isStartInstanceStatus:e,jb4dcActions:n.jb4dcActions}},pageReadyForStartStatus:function(e,t,n,i){this._formRuntimeInst=Object.create(FormRuntime),FlowRuntimePageObject._flowInstanceRuntimePO=t;var l=StringUtility.Guid(),o=this.buildPageReadyInnerParas(e,l,t,n);return this._formRuntimeInst.Initialization({InstanceId:t.instanceEntity.instId,RendererToId:"htmlDesignRuntimeWrap",FormId:o.formId,RecordId:l,ButtonId:"",OperationType:BaseUtility.GetAddOperationName(),IsPreview:!1,RendererChainCompletedFunc:FlowRuntimePageObject.formRendererChainCompletedFunc,ListFormButtonElemId:"",WebFormRTParas:{},FormRuntimeCategory:FlowRuntimePageObject.FORM_RUNTIME_CATEGORY_FLOW,PreHandleFormHtmlRuntimeFunc:this.preHandleFormHtmlRuntimeFunc,FlowInstanceRuntimePO:t,FlowModelRuntimePOCacheKey:o.flowInstanceRuntimePOCacheKey,IsStartInstanceStatus:e,CurrentNodeKey:o.currentNodeKey,CurrentNodeName:o.currentNodeName,ModelId:o.modelId,ModelReKey:o.modelReKey,CurrentTaskId:""}),this.rendererActionButtons(e,this._formRuntimeInst,i,o),this._formRuntimeInst},pageReadyForProcessStatus:function(e,t,n,i){this._formRuntimeInst=Object.create(FormRuntime);var l=(FlowRuntimePageObject._flowInstanceRuntimePO=t).instanceEntity.instRuBusinessKey,o=this.buildPageReadyInnerParas(e,l,t,n);return this._formRuntimeInst.Initialization({InstanceId:t.instanceEntity.instId,RendererToId:"htmlDesignRuntimeWrap",FormId:o.formId,RecordId:l,ButtonId:"",OperationType:BaseUtility.GetUrlOPParaValue(),IsPreview:!1,RendererChainCompletedFunc:FlowRuntimePageObject.formRendererChainCompletedFunc,ListFormButtonElemId:"",WebFormRTParas:{},FormRuntimeCategory:FlowRuntimePageObject.FORM_RUNTIME_CATEGORY_FLOW,PreHandleFormHtmlRuntimeFunc:this.preHandleFormHtmlRuntimeFunc,FlowInstanceRuntimePO:t,FlowModelRuntimePOCacheKey:o.flowInstanceRuntimePOCacheKey,IsStartInstanceStatus:e,CurrentNodeKey:o.currentNodeKey,CurrentNodeName:o.currentNodeName,ModelId:o.modelId,ModelReKey:o.modelReKey,CurrentTaskId:""}),this.rendererActionButtons(e,this._formRuntimeInst,i,o),this._formRuntimeInst},rendererActionButtons:function(e,t,n,i){ActionsRuntimeObject.CreateALLActionButton(e,t,n,i)},rendererFlowModelerForTabOnActivity:function(e,t){FlowRuntimePageObject._isCreatedModelerView||(CreateModelerView(FlowRuntimePageObject._flowInstanceRuntimePO),FlowRuntimePageObject._isCreatedModelerView=!0)},rendererFlowFileContainer:function(e){FlowFilesListSinglePlugin.Renderer()},formRendererChainCompletedFunc:function(e){var t=e.flowInstanceRuntimePO;FlowRuntimePageObject.rendererFlowFileContainer(t)},preHandleFormHtmlRuntimeFunc:function(e,t,n){var i=$("<div>"+e+"<div>"),l=n.FlowInstanceRuntimePO;0==i.children("[singlename='WFDCT_TabContainer']").length&&((i=$('<div><div class="wfdct-tabs-outer-wrap-runtime html-design-theme-default-root-elem-class" control_category="ContainerControl" desc="" groupname="" id="tabs_wrap_518627616" is_jbuild4dc_data="false" jbuild4dc_custom="true" name="tabs_wrap_518627616" placeholder="" serialize="false" show_remove_button="false" singlename="WFDCT_TabContainer" status="enable" style="" client_resolve="WFDCT_TabContainer"><div>')).children("[singlename='WFDCT_TabContainer']").append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_flow_form_999">'+l.modelName+"</div>"),i.children("[singlename='WFDCT_TabContainer']").append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_flow_form_999">'+e+"</div>"));var o=i.children("[singlename='WFDCT_TabContainer']");return"uploadConvertToPDFPlugin"==l.jb4dcContentDocumentPlugin?(o.append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_uploadConvertToPDFPlugin_999">正文</div>'),o.append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_uploadConvertToPDFPlugin_999">'+DocumentContentUploadConvertToPDFPlugin.GetHtmlElem(n)+"</div>")):"wpsOnlineDocumentPlugin"==l.jb4dcContentDocumentPlugin&&(o.append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_wpsOnlineDocumentPlugin_999">正文</div>'),o.append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_wpsOnlineDocumentPlugin_999">未实现</div>')),o.append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_flow_files_999">附件</div>'),o.append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_flow_files_999">'+FlowFilesListSinglePlugin.GetHtmlElem(n)+"</div>"),o.append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_flow_modeler_999">流程图</div>'),o.append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_flow_modeler_999" style=\'height: calc(100% - 50px);\' onActivity="FlowRuntimePageObject.rendererFlowModelerForTabOnActivity"><div id="flow-canvas" style="height:100%;"></div></div>'),o.append('<div class="wysiwyg-wfdct-tabs-label wfdct-tabs-label-runtime" tab_id="tab_content_flow_task_999">流转信息</div>'),o.append('<div class="wysiwyg-wfdct-tabs-content wfdct-tabs-content-runtime" id="tab_content_flow_task_999">'+InstanceExTaskListPlugin.GetHtmlElem(n)+"</div>"),i.html()},changeTaskToView:function(e){console.log("1111111111111111111"),AjaxUtility.Post("/Rest/Workflow/RunTime/Client/InstanceRuntime/ChangeTaskToView",{extaskId:e.extaskId},function(e){},this)}},FlowRuntimeVarBuilder={BuilderSelectedReceiverToInstanceVar:function(e,t){for(var n=[],i=0;i<t.length;i++){var l=t[i];n.push({nextNodeId:l.flowNodeEntity.id,receiverId:l.id,receiverName:l.name,receiverTypeName:l.typeName,receiveType:l.receiveType})}return n}},WorkFlowAction={EmptyProp:{sender:null,flowInstanceRuntimePO:null,flowInstanceRuntimePOCacheKey:null,jb4dcActions:null,formRuntimeInst:null,actionObj:null,isStartInstanceStatus:null,pageHostInstance:null,currentNodeKey:null,currentNodeName:null,recordId:null,modelId:null,modelReKey:null,currentTaskId:null,instanceId:null,actionShowOpinionDialog:null,actionOpinionBindToField:null,actionOpinionBindToElemId:null,htmlId:null},Instance:function(e,t,n,i,l){var o=l.actionHTMLId?l.actionHTMLId:l.actionCode,a=$('<button type="button" class="operation-button operation-button-primary" id="'+o+'"><span>'+l.actionCaption+"</span></button>");return"disable"==l.actionDisable?(a.attr("disable","disable"),a.addClass("operation-button-primary-disabled")):(this._Prop=WorkFlowAction.BuildProp(this,i,t,l,e,n,o),a.bind("click",this._Prop,function(e){console.log(e.data),e.data.sender.ButtonClickEvent()})),l.actionRemark&&a.attr("title",l.actionRemark),{elem:a}},BuildProp:function(e,t,n,i,l,o,a){return{sender:e,flowInstanceRuntimePO:t.flowInstanceRuntimePO,flowInstanceRuntimePOCacheKey:t.flowInstanceRuntimePOCacheKey,jb4dcActions:t.jb4dcActions,formRuntimeInst:n,actionObj:i,isStartInstanceStatus:l,pageHostInstance:o,currentNodeKey:t.currentNodeKey,currentNodeName:t.currentNodeName,recordId:t.recordId,modelId:t.modelId,modelReKey:t.modelReKey,currentTaskId:t.currentTaskId,instanceId:t.flowInstanceRuntimePO.instanceEntity.instId,actionShowOpinionDialog:i.actionShowOpinionDialog,actionOpinionBindToField:i.actionOpinionBindToField,actionOpinionBindToElemId:i.actionOpinionBindToElemId,htmlId:a}},RefreshParentListThenClose:function(e){null!=window.OpenerWindowObj&&null!=window.OpenerWindowObj.instanceMainTaskProcessList&&window.OpenerWindowObj.instanceMainTaskProcessList.reloadData(),portletUtility.UpdateRefreshVersion(),DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e,function(){DialogUtility.Frame_CloseDialog(window)},this)}},DeleteInstanceAction={acInterface:{},_Prop:WorkFlowAction.EmptyProp,Instance:function(e,t,n,i,l){return WorkFlowAction.Instance.call(this,e,t,n,i,l)},ButtonClickEvent:function(e){DialogUtility.Confirm(window,"暂不支持该操作?",function(){},this)}},RecallAction={acInterface:{recallMySendTask:"/Rest/Workflow/RunTime/Client/InstanceRuntime/RecallMySendTask"},_Prop:WorkFlowAction.EmptyProp,Instance:function(e,t,n,i,l){return WorkFlowAction.Instance.call(this,e,t,n,i,l)},ButtonClickEvent:function(e){DialogUtility.Confirm(window,"确认执行撤回操作?",function(){DialogUtility.AlertLoading(window,DialogUtility.DialogLoadingId,{},"系统处理中,请稍候!"),AjaxUtility.Post(this.acInterface.recallMySendTask,{extaskId:this._Prop.currentTaskId},function(e){DialogUtility.CloseDialog(DialogUtility.DialogLoadingId),e.success&&this.RefreshParentListThenClose(e.message)},this)},this)},RefreshParentListThenClose:WorkFlowAction.RefreshParentListThenClose},SendAction={acInterface:{resolveNextPossibleFlowNode:"/Rest/Workflow/RunTime/Client/InstanceRuntime/ResolveNextPossibleFlowNode",completeTask:"/Rest/Workflow/RunTime/Client/InstanceRuntime/CompleteTask"},_Prop:WorkFlowAction.EmptyProp,newOpinionList:[],inputOpinionText:null,Instance:function(e,t,n,i,l){return WorkFlowAction.Instance.call(this,e,t,n,i,l)},ButtonClickEvent:function(){var e=ValidateRulesRuntime.ValidateSubmitEnable();ValidateRulesRuntime.AlertValidateErrors(e)&&("true"==this._Prop.actionShowOpinionDialog?DialogUtility.Prompt(window,{title:"系统提示",height:300,width:400},DialogUtility.DialogPromptId,"请输入处理意见1",function(e){var t=this.TryGetOpinionBindToControlInstance(this._Prop);null!=t&&("function"==typeof t.SetNewValue?(t.SetNewValue(e),this.inputOpinionText=e,this.BeginSelectReceiver(this,this._Prop)):DialogUtility.AlertText("意见关联对象为实现SetNewValue方法!!"))},this):this.BeginSelectReceiver(this,this._Prop))},TryGetOpinionBindToControlInstance:function(e){var t,n=e.actionOpinionBindToElemId,i=e.actionOpinionBindToField;return n&&(t=$("#"+n)),t&&0<t.length?HTMLControl.GetControlInstanceByElem(t):(t=$("[fieldname='"+i+"']"))&&0<t.length?HTMLControl.GetControlInstanceByElem(t):null},BeginSelectReceiver:function(e,t){DialogUtility.AlertLoading(window,DialogUtility.DialogLoadingId,{},"");var n=this.BuildSendToServerData(this._Prop,null);n.success&&AjaxUtility.Post(this.acInterface.resolveNextPossibleFlowNode,n.data,function(e){DialogUtility.CloseDialog(DialogUtility.DialogLoadingId),console.log(e),e.data.nextTaskIsEndEvent?this.SelectReceiverCompleted(e.data.bpmnTaskList,[]):e.data.currentTaskIsMultiInstance&&e.data.currentTaskMultiCompletedInstances+1<e.data.currentTaskMultiCountEngInstances?this.SelectReceiverCompleted(e.data.bpmnTaskList,[]):UserTaskReceiverDialogUtility.ShowDialog(this,e.data.bpmnTaskList,this.SelectReceiverCompleted)},this)},SelectReceiverCompleted:function(n,i){DialogUtility.Confirm(window,"确认执行发送?",function(){var e=FlowRuntimeVarBuilder.BuilderSelectedReceiverToInstanceVar(n,i);null!=this.inputOpinionText&&this.newOpinionList.push(this.BuildNewOpinion(this.inputOpinionText));var t=this.BuildSendToServerData(this._Prop,{selectedReceiverVars:encodeURIComponent(JsonUtility.JsonToString(e)),newOpinionListString:encodeURIComponent(JsonUtility.JsonToString(this.newOpinionList))});t.success&&(DialogUtility.AlertLoading(window,DialogUtility.DialogLoadingId,{},"系统处理中,请稍候!"),AjaxUtility.Post(this.acInterface.completeTask,t.data,function(e){DialogUtility.CloseDialog(DialogUtility.DialogLoadingId),e.success?this.RefreshParentListThenClose(e.message):DialogUtility.AlertError(window,DialogUtility.DialogAlertErrorId,{},e.data.message)},this))},this)},BuildSendToServerData:function(e,t){var n=e.formRuntimeInst.SerializationFormData(),i={success:!0,data:{isStartInstanceStatus:e.isStartInstanceStatus,actionCode:e.actionObj.actionCode,flowInstanceRuntimePOCacheKey:e.flowInstanceRuntimePOCacheKey,formRecordComplexPOString:encodeURIComponent(JsonUtility.JsonToString(n)),currentNodeKey:e.currentNodeKey,currentNodeName:e.currentNodeName,recordId:e.recordId,modelId:e.modelId,modelReKey:e.modelReKey,currentTaskId:e.currentTaskId,instanceId:e.instanceId,newOpinionListString:""}};if(t)for(var l in t)i.data[l]=t[l];return i},BuildNewOpinion:function(e){return{opinionText:e,opinionClientCode:StringUtility.Timestamp()}},RefreshParentListThenClose:WorkFlowAction.RefreshParentListThenClose},UserTaskReceiverDialogUtility={ShowDialog:function(e,t,n){userTaskReceiverDialogOuterVue||($(document.body).append("<div id='userTaskReceiverDialogOuter'><user-task-receiver-dialog ref='userTaskReceiverDialog'></user-task-receiver-dialog></div>"),userTaskReceiverDialogOuterVue=new Vue({el:"#userTaskReceiverDialogOuter",data:{acInterface:{getRuntimeModelWithStart:"/Rest/Workflow/RunTime/Client/ModelRuntime/GetRuntimeModelWithStart"}},mounted:function(){},methods:{}})),userTaskReceiverDialogOuterVue.$refs.userTaskReceiverDialog.beginSelectReceiver(e,t,n)},CloseDialog:function(){DialogUtility.CloseDialogElem(userTaskReceiverDialogOuterVue.$refs.userTaskReceiverDialog.$refs.userTaskReceiverDialogWrap),userTaskReceiverDialogOuterVue=null,$("#userTaskReceiverDialogOuter").remove(),DialogUtility.RemoveDialogRemainingElem("userTaskReceiverDialogInner")}};Vue.component("user-task-receiver-dialog",{data:function(){return{acInterface:{},nextFlowNodeEntities:[],receiverTree:{treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},async:{enable:!0,contentType:"application/x-www-form-urlencoded",url:BaseUtility.BuildAction("/Rest/Workflow/RunTime/Client/ReceiverRuntime/GetAsyncReceivers"),autoParam:["id","typeName","name"]},data:{key:{name:"name",children:"runtimeReceiveUsers"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:null}},callback:{onClick:function(e,t,n){},onDblClick:function(e,t,n){var i=this.getZTreeObj(t)._host,l=this.getZTreeObj(t).flowNodeEntity,o=this.getZTreeObj(t).receiveType;i.addReceiverToSelected(n,l,o)},beforeAsync:function(e,t){console.log(e)}}},treeObjMap:{}},selectedReceiver:{columnsConfig:[{title:"已选用户",key:"name",width:188,align:"center"},{title:"操作",slot:"action",width:70,align:"center"}],receiverData:[]}}},mounted:function(){},filters:{filterReceiverData:function(e,t,n){return e.filter(function(e){return e.flowNodeEntity.id==t.id&&e.receiveType==n})}},methods:{beginSelectReceiver:function(e,t,n){var i=this,l=this.$refs.userTaskReceiverDialogWrap;DialogUtility.DialogElemObj(l,{modal:!0,width:650,height:600,title:"选择接收人员",resizable:!1,buttons:{"确认":function(){i.validateCompleteEnable().success&&n.call(e,i.nextFlowNodeEntities,i.selectedReceiver.receiverData)},"取消":function(){UserTaskReceiverDialogUtility.CloseDialog()}},open:function(e,t){$(".ui-dialog-titlebar-close",$(this).parent()).hide()}}),this.nextFlowNodeEntities=t,window.setTimeout(this.initTree,500)},getRootOrganMainReceiveObjects:function(){return[{value:null,text:null,id:"0",parentId:null,outerId:null,code:"0000",attr1:null,attr2:null,attr3:null,attr4:null,nodeTypeName:null,icon:null,nocheck:!1,isParent:"true",open:!1,name:"组织机构管理",typeName:"Organs",desc:null,status:"启用",filter:"",orderNum:22,runtimeReceiveUsers:null,group:!0,custName:!1}]},initTree:function(){for(var e=0;e<this.nextFlowNodeEntities.length;e++){var t=this.nextFlowNodeEntities[e];if(t.extensionElements&&t.extensionElements.jb4dcMainReceiveObjects&&t.extensionElements.jb4dcMainReceiveObjects.runtimeReceiveGroups){var n=this.buildUlTreeId(t,"main");this.receiverTree.treeObjMap[n]=$.fn.zTree.init($("#"+n),this.receiverTree.treeSetting,t.extensionElements.jb4dcMainReceiveObjects.runtimeReceiveGroups),(this.receiverTree.treeObjMap[n]._host=this).receiverTree.treeObjMap[n].flowNodeEntity=t,this.receiverTree.treeObjMap[n].receiveType="main"}else if(!t.extensionElements||!t.extensionElements.jb4dcMainReceiveObjects||!t.extensionElements.jb4dcMainReceiveObjects.jb4dcReceiveObjectList){var i=this.buildUlTreeId(t,"main");this.receiverTree.treeObjMap[i]=$.fn.zTree.init($("#"+i),this.receiverTree.treeSetting,this.getRootOrganMainReceiveObjects()),(this.receiverTree.treeObjMap[i]._host=this).receiverTree.treeObjMap[i].flowNodeEntity=t,this.receiverTree.treeObjMap[i].receiveType="main"}if(t.extensionElements&&t.extensionElements.jb4dcCCReceiveObjects&&t.extensionElements.jb4dcCCReceiveObjects.runtimeReceiveGroups){var l=this.buildUlTreeId(t,"cc");this.receiverTree.treeObjMap[l]=$.fn.zTree.init($("#"+l),this.receiverTree.treeSetting,t.extensionElements.jb4dcCCReceiveObjects.runtimeReceiveGroups),(this.receiverTree.treeObjMap[l]._host=this).receiverTree.treeObjMap[l].flowNodeEntity=t,this.receiverTree.treeObjMap[l].receiveType="cc"}}},buildUlTreeId:function(e,t){return"ulTree_"+t+"_"+e.id},addTreeSelectedReceiverToSelected:function(e,t){var n=this.buildUlTreeId(e,t),i=this.receiverTree.treeObjMap[n];if(i){var l=i.getSelectedNodes();l&&0<l.length&&this.addReceiverToSelected(l[0],e,t)}},addReceiverToSelected:function(e,t,n){var i=this.isMultiInstanceTask(t),l=t.id+"_"+n+"_"+e.id;if("SingleUser"==e.typeName)if(e.innerSingleId=l,e.flowNodeEntity=t,"cc"!=(e.receiveType=n)&&!i||ArrayUtility.Exist(this.selectedReceiver.receiverData,function(e){return e.innerSingleId==l})){if("main"==n&&!i){for(var o=0;o<this.selectedReceiver.receiverData.length;o++)this.selectedReceiver.receiverData[o].flowNodeEntity.id==t.id&&this.selectedReceiver.receiverData[o].receiveType==n&&ArrayUtility.Delete(this.selectedReceiver.receiverData,o);this.selectedReceiver.receiverData.push(e)}}else this.selectedReceiver.receiverData.push(e);else if(i&&("Users"==e.typeName||"Role"==e.typeName||"Organs"==e.typeName)&&null!=e.runtimeReceiveUsers&&0<e.runtimeReceiveUsers.length)for(var a=0;a<e.runtimeReceiveUsers.length;a++){var s=e.runtimeReceiveUsers[a];"SingleUser"==s.typeName&&this.addReceiverToSelected(s,t,n)}},clearSelectedReceiverToSelected:function(e,t){for(var n=this.selectedReceiver.receiverData.length-1;0<=n;n--){var i=this.selectedReceiver.receiverData[n];i.flowNodeEntity.id==e.id&&i.receiveType==t&&ArrayUtility.Delete(this.selectedReceiver.receiverData,n)}},deleteSelectedReceiver:function(e,t){for(var n=0;n<this.selectedReceiver.receiverData.length;n++)this.selectedReceiver.receiverData[n].innerSingleId==t.innerSingleId&&ArrayUtility.Delete(this.selectedReceiver.receiverData,n)},isMultiInstanceTask:function(e){return e.multiInstanceTask},buildTabLabel:function(e){return e.name+" ["+(this.isMultiInstanceTask(e)?"多人":"单人")+"]"},validateCompleteEnable:function(){for(var n=this,e=[],t=!0,i=function(t){"com.jb4dc.workflow.po.bpmn.process.BpmnUserTask"==n.nextFlowNodeEntities[t].taskTypeName&&(ArrayUtility.Exist(n.selectedReceiver.receiverData,function(e){return e.flowNodeEntity.id==n.nextFlowNodeEntities[t].id&&"main"==e.receiveType})||e.push({taskName:n.nextFlowNodeEntities[t].name,flowNodeEntity:n.nextFlowNodeEntities[t],message:"环节["+n.nextFlowNodeEntities[t].name+"]至少需要设置一个接收用户!"}))},l=0;l<this.nextFlowNodeEntities.length;l++)i(l);if(0<e.length){var o=[];for(l=0;l<e.length;l++)o.push(e[l].message);DialogUtility.AlertText(o.join("<br />"),this),t=!1}return{success:t}}},template:'<div id="userTaskReceiverDialogInner" ref="userTaskReceiverDialogWrap" style="display: none">\n                <tabs name="userTaskReceiverDialogTabs">\n                    <tab-pane :label="buildTabLabel(flowNodeEntity)" tab="userTaskReceiverDialogTabs" v-for="flowNodeEntity in nextFlowNodeEntities" :key="flowNodeEntity.id">\n                        <collapse accordion value="mainReceiver">\n                            <panel name="mainReceiver">\n                                主送人员\n                                <div slot="content">\n                                    <div class="user-task-receiver-dialog-outer-wrap">\n                                        <div class="selectEnableUserList">\n                                            <ul :id="buildUlTreeId(flowNodeEntity,\'main\')" class="ztree" style="width: 200px"></ul>\n                                        </div>\n                                        <div class="selectOpButtonContainer">\n                                            <div class="single-op-button" title="添加人员" @click="addTreeSelectedReceiverToSelected(flowNodeEntity,\'main\')"><Icon type="md-arrow-round-forward" /></div>\n                                            <div class="single-op-button" title="清空已选人员" @click="clearSelectedReceiverToSelected(flowNodeEntity,\'main\')"><Icon type="md-backspace" /></div>\n                                        </div>\n                                        <div class="selectedUserList">\n                                            <i-table height="327" width="260" stripe :columns="selectedReceiver.columnsConfig" :data="selectedReceiver.receiverData | filterReceiverData(flowNodeEntity, \'main\')"\n                                                 class="iv-list-table" size="small">\n                                                 <template slot-scope="{ row, index }" slot="action">\n                                                    <div class="list-font-icon-button-class" @click="deleteSelectedReceiver(index,row)">\n                                                        <Icon type="md-close" />\n                                                    </div>\n                                                </template>     \n                                            </i-table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </panel>\n                            <panel name="ccReceiver">\n                                抄送人员\n                                <div slot="content">\n                                    <div class="user-task-receiver-dialog-outer-wrap">\n                                        <div class="selectEnableUserList">\n                                            <ul :id="buildUlTreeId(flowNodeEntity,\'cc\')" class="ztree" style="width: 200px"></ul>\n                                        </div>\n                                        <div class="selectOpButtonContainer">\n                                            <div class="single-op-button" title="添加人员" @click="addReceiverToSelected(flowNodeEntity,\'cc\')"><Icon type="md-arrow-round-forward" /></div>\n                                            <div class="single-op-button" title="清空已选人员"><Icon type="md-backspace" /></div>\n                                        </div>\n                                        <div class="selectedUserList">\n                                            <i-table height="327" width="260" stripe :columns="selectedReceiver.columnsConfig" :data="selectedReceiver.receiverData | filterReceiverData(flowNodeEntity, \'cc\')"\n                                                 class="iv-list-table" size="small">\n                                                 <template slot-scope="{ row, index }" slot="action">\n                                                    <div class="list-font-icon-button-class" @click="deleteSelectedReceiver(index,row)">\n                                                        <Icon type="md-close" />\n                                                    </div>\n                                                </template>     \n                                            </i-table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </panel>\n                        </collapse>\n                    </tab-pane>\n                </tabs>\n            </div>'});var DocumentContentUploadConvertToPDFPlugin={onchangeFile:function(e){$("#doc-selected-file").html($(e).val())},uploadAndConvertToPDF:function(e,t,n){if($("#sourceFile").val()){var i=new FormData;i.append("file",document.getElementById("sourceFile").files[0]);var l=new XMLHttpRequest;l.open("POST",BaseUtility.BuildAction("/Rest/Workflow/RunTime/Client/DocumentFileRuntime/UploadFileAndConvertToPDF?instanceId="+t+"&businessKey="+n)),l.onload=function(){if(console.log(l),200===l.status){var e=JsonUtility.StringToJson(l.response);DocumentContentUploadConvertToPDFPlugin.loadPDFFileToViewer(e.data.fileId),DialogUtility.CloseByElemId(DialogUtility.DialogLoadingId)}else DialogUtility.AlertText("执行出错!"+l.responseText),DialogUtility.CloseByElemId(DialogUtility.DialogLoadingId)},l.upload.onprogress=function(e){if(e.lengthComputable){DialogUtility.AlertLoading(window,DialogUtility.DialogLoadingId,{},"");var t=Math.floor(e.loaded/e.total*100);$("#upload-process").html(t+"%")}},l.send(i)}else DialogUtility.AlertText("请选择要上传的文件!",this)},tryLoadHistoryDocument:function(e){AjaxUtility.Get("/Rest/Workflow/RunTime/Client/DocumentFileRuntime/TryGetLastOnlineDocument",{instanceId:e.InstanceId},function(e){e.success&&e.data&&this.loadPDFFileToViewer(e.data.fileId)},this)},loadPDFFileToViewer:function(e){var t=BaseUtility.GetRootPath()+"/Rest/Workflow/RunTime/Client/DocumentFileRuntime/DownLoadPdfDocumentByFileId?fileId="+e;$("#pdfViewer").attr("src","/Js/External/PDFJS-2.9.359-dist/web/viewer.html?file="+encodeURIComponent(t))},GetHtmlElem:function(e){var t=e.InstanceId,n=e.RecordId;return this.tryLoadHistoryDocument(e),'<div class="document-outer-wrap">\n                    <div class="document-buttons-outer">\n                        <div class="document-buttons-inner">\n                            <button type="button" class="upload-and-convert-button" disabled>下载PDF文件</button>\n                            <button type="button" class="upload-and-convert-button" disabled>下载原始文件</button>\n                            <button type="button" class="upload-and-convert-button" onclick="DocumentContentUploadConvertToPDFPlugin.uploadAndConvertToPDF(this,\''.concat(t,"','").concat(n,'\')">上传并转换为pdf</button>\n                            <div class="file-upload">选择文件\n                               <input\n                                   id="sourceFile"\n                                   type="file"\n                                   name="inputFile" accept=".doc,.docx,.pdf" onchange="DocumentContentUploadConvertToPDFPlugin.onchangeFile(this)" />\n                            </div>\n                            <div class="selected-file-message">已选文件:<span id="doc-selected-file"></span></div>\n                            <div class="upload-process" id="upload-process"></div>\n                        </div>\n                    </div>\n                    <div class="document-content">\n                        <iframe id="pdfViewer" src="" style="width: 100%;height: 100%;border: 0px"></iframe>\n                    </div>\n                </div>')}},FlowFilesListSinglePlugin={_prop:{},_flowInstanceRuntimePO:null,_currentNode:null,_authoritiesFileAuthority:null,_authoritiesOnlySendBackCanEdit:"false",GetHtmlElem:function(e){return FlowFilesListSinglePlugin._prop=e,FlowFilesListSinglePlugin._flowInstanceRuntimePO=e.FlowInstanceRuntimePO,FlowFilesListSinglePlugin._currentNode=ArrayUtility.Where(FlowFilesListSinglePlugin._flowInstanceRuntimePO.bpmnDefinitions.bpmnProcess.userTaskList,function(e){return e.id==FlowFilesListSinglePlugin._flowInstanceRuntimePO.currentNodeKey}),0==FlowFilesListSinglePlugin._currentNode.length?FlowFilesListSinglePlugin._currentNode=FlowFilesListSinglePlugin._flowInstanceRuntimePO.bpmnDefinitions.bpmnProcess.startEvent:FlowFilesListSinglePlugin._currentNode=FlowFilesListSinglePlugin._currentNode[0],FlowFilesListSinglePlugin._currentNode.extensionElements?FlowFilesListSinglePlugin._authoritiesFileAuthority=JsonUtility.StringToJson(FlowFilesListSinglePlugin._currentNode.extensionElements.jb4dcAuthorities.authoritiesFileAuthority):FlowFilesListSinglePlugin._authoritiesFileAuthority={addFile:"true"},'<div id="FlowFilesListPluginContainer">\n                </div>'},acInterface:{getFileListData:"/Rest/Workflow/RunTime/Client/InstanceFileRuntime/GetAttachmentFileListData",uploadFile:"/Rest/Workflow/RunTime/Client/InstanceFileRuntime/UploadFile",downloadFile:"/Rest/Builder/RunTime/FileRuntime/DownLoadFileByFileId",deleteFile:"/Rest/Builder/RunTime/FileRuntime/DeleteFileByFileId"},Renderer:function(){this.BuildUploadContainer(),this.BuildFileList()},ToViewStatus:function(e,t,n,i){$("#"+this._prop.uploadWarpId).hide(),$("#"+this._prop.elemId).find(".delete-button-elem").hide(),$("#"+this._prop.elemId).find(".move-up-button-elem").hide(),$("#"+this._prop.elemId).find(".move-down-button-elem").hide()},GetThisRecordId:function(){var e="";return formRuntimeInst&&formRuntimeInst.GetWebFormRTParas()&&formRuntimeInst.GetWebFormRTParas().RecordId?e=formRuntimeInst.GetWebFormRTParas().RecordId:DialogUtility.AlertText("查找不到绑定的记录ID"),e},GetThisRecordType:function(){return this._prop.objType},GetUploadEndPointRequest:function(){return{endpoint:BaseUtility.GetRootPath()+this.acInterface.uploadFile,params:{fileType:"Attachment",instanceId:this._prop.FlowInstanceRuntimePO.instanceEntity.instId,businessKey:this._prop.RecordId}}},CreateDefaultTemplate:function(e){$(window.document.body).append('<script type="text/template" id="'+e+'">\n        <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="拖放文件到这里进行上传。" style="min-height: 78px;">\n            <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">\n                <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>\n            </div>\n            <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>\n                <span class="qq-upload-drop-area-text-selector"></span>\n            </div>\n            <div class="qq-upload-button-selector qq-upload-button" style="float: right">\n                <div>选择文件</div>\n            </div>\n            <span class="qq-drop-processing-selector qq-drop-processing">\n                <span>Processing dropped files...</span>\n                <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>\n            </span>\n            <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals" style="display: none">\n                <li>\n                    <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>\n                    <div class="qq-progress-bar-container-selector qq-progress-bar-container">\n                        <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>\n                    </div>\n                    <span class="qq-upload-spinner-selector qq-upload-spinner"></span>\n                    <div class="qq-thumbnail-wrapper">\n                        <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>\n                    </div>\n                    <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>\n                    <button type="button" class="qq-upload-retry-selector qq-upload-retry">\n                        <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>\n                        Retry\n                    </button>\n\n                    <div class="qq-file-info">\n                        <div class="qq-file-name">\n                            <span class="qq-upload-file-selector qq-upload-file"></span>\n                            <span class="qq-edit-filename-icon-selector qq-btn qq-edit-filename-icon" aria-label="Edit filename"></span>\n                        </div>\n                        <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">\n                        <span class="qq-upload-size-selector qq-upload-size"></span>\n                        <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">\n                            <span class="qq-btn qq-delete-icon" aria-label="Delete"></span>\n                        </button>\n                        <button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause">\n                            <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>\n                        </button>\n                        <button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue">\n                            <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>\n                        </button>\n                    </div>\n                </li>\n            </ul>\n\n            <dialog class="qq-alert-dialog-selector">\n                <div class="qq-dialog-message-selector"></div>\n                <div class="qq-dialog-buttons">\n                    <button type="button" class="qq-cancel-button-selector">Close</button>\n                </div>\n            </dialog>\n\n            <dialog class="qq-confirm-dialog-selector">\n                <div class="qq-dialog-message-selector"></div>\n                <div class="qq-dialog-buttons">\n                    <button type="button" class="qq-cancel-button-selector">No</button>\n                    <button type="button" class="qq-ok-button-selector">Yes</button>\n                </div>\n            </dialog>\n\n            <dialog class="qq-prompt-dialog-selector">\n                <div class="qq-dialog-message-selector"></div>\n                <input type="text">\n                <div class="qq-dialog-buttons">\n                    <button type="button" class="qq-cancel-button-selector">Cancel</button>\n                    <button type="button" class="qq-ok-button-selector">Ok</button>\n                </div>\n            </dialog>\n        </div>\n    <\/script>')},BuildUploadContainer:function(){if("true"==this._authoritiesFileAuthority.addFile){var e=$("#FlowFilesListPluginContainer"),t="uploadWarp_"+StringUtility.Timestamp();this._prop.uploadWarpId=t;var n=$("<div id='"+t+"'></div>");e.append(n);var i="qq-template_"+this._prop.elemId;this.CreateDefaultTemplate(i);var l=this;new qq.FineUploader({element:n[0],template:i,multiple:!1,request:this.GetUploadEndPointRequest(),callbacks:{onComplete:function(e,t,n,i){n.success?l.BuildFileList():DialogUtility.AlertText(n.message)}}})}},BuildFileList:function(){var e=$("#FlowFilesListPluginContainer"),t="flow_file_plugin_upload_file_list_warp";$("#"+t).remove();var n=$("<div class='upload_file_list_wrap' id='"+t+"'><table class='file_list_table'><thead><tr><th>文件名称</th><th style='width: 140px'>上传时间</th><th style='width: 140px'>上传人</th><th style='width: 140px'>文件大小</th><th style='width: 140px'>操作</th></tr></thead><tbody></tbody></table></div>"),i=n.find("tbody"),l=this._prop.FlowInstanceRuntimePO.instanceEntity.instId;AjaxUtility.Post(this.acInterface.getFileListData,{instanceId:l},function(e){if(e.success)for(var t=0;t<e.data.length;t++){var n=e.data[t];i.append(this.BuildFileInfoTableRow(e,n))}},this),$(e.append(n))},BuildFileInfoTableRow:function(e,t){var n=StringUtility.EncodeHtml(t.fileName),i=DateUtility.DateFormatByTimeStamp(t.fileCreateTime,"yyyy-MM-dd"),l=HardDiskUtility.ByteConvert(t.fileSize),o=StringUtility.EncodeHtml(t.fileCreator),a=$("<tr><td>".concat(n,'</td><td style="text-align: center">').concat(i,'</td><td style="text-align: center">').concat(o,'</td><td style="text-align: center">').concat(l,'</td><td style="text-align: center"></td></tr>'));return this.BuildFileInfoTableRowInnerButtons(e,t,a),a},BuildFileInfoTableRowInnerButtons:function(e,t,n){!this._prop.downloadEnable&&!this._prop.deleteEnable&&this._prop.previewEnable&&this._prop.moveOrderEnable;var i=n.find("td:last"),l=this;if(this._prop.deleteEnable){var o=$("<div class='file-list-inner-button delete-button-elem' title='点击删除'></div>");o.click(function(){DialogUtility.Confirm(window,"确认删除附件【"+t.fileName+"】吗?",function(){AjaxUtility.Post(l.acInterface.deleteFile,{fileId:t.fileId},function(e){e.success&&o.parent().parent().remove()},l)})}),i.append(o)}this._prop.moveOrderEnable;var a=$("<div class='file-list-inner-button move-up-button-elem' title='点击上移'></div>");a.click(function(){DialogUtility.AlertText("暂不支持!")});var s=$("<div class='file-list-inner-button move-down-button-elem' title='点击下移'></div>");if(s.click(function(){DialogUtility.AlertText("暂不支持!")}),i.append(a),i.append(s),this._prop.downloadEnable){var r=$("<div class='file-list-inner-button download-button-elem' title='点击下载'></div>");r.click(function(){var e=BaseUtility.GetRootPath()+l.acInterface.downloadFile+"?fileId="+t.fileId;window.open(e)}),i.append(r)}this._prop.previewEnable;var c=$("<div class='file-list-inner-button preview-button-elem' title='点击预览'></div>");c.click(function(){DialogUtility.AlertText("暂不支持!")}),i.append(c)},TestFilePreviewEnable:function(e){return!0}},InstanceExTaskListPlugin={_flowInstanceRuntimePO:null,_historyExecutionTaskEntityList:null,_currentExTask:null,GetHtmlElem:function(e){return this._flowInstanceRuntimePO=e.FlowInstanceRuntimePO,this._historyExecutionTaskEntityList=e.FlowInstanceRuntimePO.historyExecutionTaskEntityList,this._currentExTask=e.FlowInstanceRuntimePO.executionTaskEntity,this._historyExecutionTaskEntityList?this.Renderer():""},ViewDetail:function(t){var e=ArrayUtility.WhereSingle(this._historyExecutionTaskEntityList,function(e){return e.extaskId==t});DialogUtility.AlertJsonCode(e)},ConvertStatusToCNName:function(e){return"Processing"==e?"办理中":"End"==e?"已办理":"Cancel"==e?"被撤回":"CancelEnd"==e?"办理&#10522;&#10230;撤回":"未知"},Renderer:function(){for(var e="<div class='instance-ex-task-list-plugin'>\n                            <table class='ex-task-table'>\n                                <thead>\n                                    <tr><th>环节名称</th><th>发送人</th><th>发送时间</th><th>查看时间</th><th>接收人/处理人</th><th>处理时间</th><th>执行动作</th><th>状态</th><th style=\"width: 200px\">操作</th></tr>\n                                </thead>\n                                <tbody>",t=0;t<this._historyExecutionTaskEntityList.length;t++){var n=this._historyExecutionTaskEntityList[t],i=StringUtility.NullToES(n.extaskId),l=StringUtility.NullToES(n.extaskCurNodeName),o=StringUtility.NullToES(n.extaskSenderName),a=StringUtility.NullToES(n.extaskStartTime),s=StringUtility.NullToES(n.extaskViewTime),r=StringUtility.NullToES(n.extaskReceiverName),c=StringUtility.NullToES(n.extaskHandlerId),d=StringUtility.NullToES(n.extaskReceiverId);StringUtility.IsNullOrEmpty(c)||d==c||(r=StringUtility.NullToES(n.extaskReceiverName)+"/"+StringUtility.NullToES(n.extaskHandlerName));StringUtility.NullToES(n.extaskHandlerName);var u=StringUtility.NullToES(n.extaskEndTime),p=StringUtility.NullToES(n.extaskHandleActionName),m=this.ConvertStatusToCNName(StringUtility.NullToES(n.extaskStatus)),v="n-task-tr";this._currentExTask.extaskId==i&&(v="my-this-task-tr"),e+='<tr class="'.concat(v,'">\n                            <td>').concat(l,"</td><td>").concat(o,"</td><td>").concat(a,"</td>\n                            <td>").concat(s,"</td><td>").concat(r,"</td><td>").concat(u,"</td>\n                            <td>").concat(p,"</td><td>").concat(m,"</td><td><a onclick=\"InstanceExTaskListPlugin.ViewDetail('").concat(i,"')\">详情</a></td></tr>")}return e+="</tbody></table></div>"}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
